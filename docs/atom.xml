<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>Bradford Condon PhD</title>
 <link href="http://bradfordcondon.com/atom.xml" rel="self"/>
 <link href="http://bradfordcondon.com/"/>
 <updated>2018-08-26T11:48:32-04:00</updated>
 <id>http://bradfordcondon.com</id>
 <author>
   <name>Bradford Condon</name>
   <email>bradford.condon@uky.edu</email>
 </author>

 
 <entry>
   <title>Documentation with Read the Docs</title>
   <link href="http://bradfordcondon.com/2018/08/26/read_the_docs/"/>
   <updated>2018-08-26T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2018/08/26/read_the_docs</id>
   <content type="html">&lt;p&gt;This week, we’ll be moving the Tripal documentation over to ReadTheDocs.  I’ve already put the Tripal DevSeed documentation online.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/TripalLogo_dark.png&quot; alt=&quot;Tripal Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This post will talk about the reasons for this decision, and a quick “how to” guide.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;what-is-readthedocs&quot;&gt;What is ReadTheDocs?&lt;/h2&gt;

&lt;p&gt;Documentation is important.  It tells users how to use our product, and developers how to read our code.  In the past, I’ve written my documentation out in markdown and included it alongside the code.  This approach still makes sense for small projects, and it gets built nicely by GitHub on the repository.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/tripal_github_doc.png&quot; alt=&quot;tripal readme&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For larger projects, such as Tripal, the real documentation is hosted on a drupal site at tripal.info.  There is a full content management system for creating new posts, managing privileges, uploading images, linking documents, etc.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://readthedocs.org/&quot;&gt;ReadTheDocs&lt;/a&gt; uses &lt;a href=&quot;http://www.sphinx-doc.org/en/master/&quot;&gt;Sphinx&lt;/a&gt; to build a website in a Continuous Integration setup. When new code is pushed to GitHub, the documentation website as defined by sphinx is built, and the “live” documentation website is updated.&lt;/p&gt;

&lt;p&gt;This has several advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Code changes can include documentation updates &lt;strong&gt;in the same pull request&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Changes to the documentation is &lt;strong&gt;subject to review, just like code changes&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Documentation changes are under &lt;strong&gt;version control&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These are all huge points.  It’s actually quite hard to remember to update the documentation when its on a separate website.  You also don’t have to remember to re-build the website, ReadTheDocs rebuilds it when you push new code and documentation.&lt;/p&gt;

&lt;h2 id=&quot;how-do-i-add-readthedocs-to-my-project&quot;&gt;How do I add ReadTheDocs to My Project?&lt;/h2&gt;

&lt;p&gt;It’s very simple: check out the &lt;a href=&quot;https://docs.readthedocs.io/en/latest/getting_started.html&quot;&gt;official guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The abbreviated version is:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Set up your ReadeTheDocs account and add your project integration&lt;/li&gt;
  &lt;li&gt;Install Sphinx&lt;/li&gt;
  &lt;li&gt;Run the quickstart command: &lt;code class=&quot;highlighter-rouge&quot;&gt;sphinx-quickstart&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Write your documentation (we’re using &lt;code class=&quot;highlighter-rouge&quot;&gt;RST&lt;/code&gt; format)&lt;/li&gt;
  &lt;li&gt;run &lt;code class=&quot;highlighter-rouge&quot;&gt;make html&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;docs&lt;/code&gt; folder to build your site for testing purposes&lt;/li&gt;
  &lt;li&gt;Push your changes to github&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We use &lt;code class=&quot;highlighter-rouge&quot;&gt;RST&lt;/code&gt; format.  It might seem a little more complicated than markdown (and it is), but its also more powerful, so I feel its worth the work.&lt;/p&gt;

&lt;p&gt;Link documents to your &lt;code class=&quot;highlighter-rouge&quot;&gt;index.rst&lt;/code&gt; and Sphinx will build you a searchable site with nicely formatted navigation.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/devseed_rtd.png&quot; alt=&quot;devseed read the docs site&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ReadTheDocs also provides some really awesome &lt;strong&gt;versioning&lt;/strong&gt; tools, allowing you to post releases of the documentation so users can go back and find older documentation with almost no effort on your part.&lt;/p&gt;

&lt;h2 id=&quot;tripal-documentation&quot;&gt;Tripal Documentation&lt;/h2&gt;

&lt;p&gt;We currently have ReadTheDocs up for the following projects:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tripal.readthedocs.io/en/latest/&quot;&gt;Tripal&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tripaltestsuite.readthedocs.io/en/latest/&quot;&gt;Tripal Test Suite&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tripal-devseed.readthedocs.io/en/latest/&quot;&gt;Tripal DevSeed&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Module showcase</title>
   <link href="http://bradfordcondon.com/2018/06/08/module_showcase_site/"/>
   <updated>2018-06-08T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2018/06/08/module_showcase_site</id>
   <content type="html">&lt;p&gt;This week I made a &lt;a href=&quot;https://statonlab.github.io/hardwoods_tripal_showcase/&quot;&gt;super simple Jekyll-powered site to show off the modules I’ve developed for Tripal&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://statonlab.github.io/hardwoods_tripal_showcase/&quot;&gt;
&lt;img src=&quot;/assets/img/tripal_showcase.png&quot; alt=&quot;Showcase Image&quot; /&gt;
&lt;/a&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;overview&quot;&gt;Overview&lt;/h2&gt;

&lt;p&gt;We were discussing ways to improve collaboration between groups, and I realized it would be neat to have a simple, expressive site to show off my work.  I went with a bootstrap card layout, with two sentences and an image for each module.  Clicking on the card will bring to a more descriptive page with a featurelist and more screenshots.&lt;/p&gt;

&lt;p&gt;I use Jekyll’s header system to define a few variables for each post: the showcase image, a DOI, the github URL, and a URL of the module in action on our live site.  These headers get converted into icons and links on the landing page, and on each module’s individual page.&lt;/p&gt;

&lt;p&gt;The below markdown file (located in &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts/&lt;/code&gt;) describes a single module: Tripal Alchemist.&lt;/p&gt;

&lt;div class=&quot;language-md highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Tripal&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Alchemist&quot;&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;alchemist_card.png&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://github.com/statonlab/tripal_alchemist&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;zenodo_badge&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://zenodo.org/badge/DOI/10.5281/zenodo.1187120.svg&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;zenodo_url&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://doi.org/10.5281/zenodo.1187120&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;see_live&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://www.youtube.com/watch?v=BPL6zmVx_RM&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

Convert Tripal Entities from one bundle to another.
&lt;span class=&quot;p&quot;&gt;
*&lt;/span&gt; Convert Tripal Entities from one bundle to another.
&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; Used at HWG to change feature types, or to convert analyses to sub-types with specialized fields.
&lt;span class=&quot;p&quot;&gt;*&lt;/span&gt; Supports &lt;span class=&quot;gs&quot;&gt;**collections**&lt;/span&gt; to easily convert entities.

Watch a video of the &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;module in action on youtube&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;https://www.youtube.com/watch?v=BPL6zmVx_RM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;!
&lt;span class=&quot;gt&quot;&gt;
&amp;gt;![manual conversion](../images/alchemist/manual_transmutation.png)&lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;&amp;gt; For small bundles, manually select entities to convert.&lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;
&amp;gt;![collections support](../images/alchemist/tripal_alchemist_collections.png)&lt;/span&gt;
&lt;span class=&quot;gt&quot;&gt;&amp;gt;Use collections to easily convert a subset of entities.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/statonlab/hardwoods_tripal_showcase&quot;&gt;The code is up on Github&lt;/a&gt; so feel free to adapt it to your own needs.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Testing in Tripal Core</title>
   <link href="http://bradfordcondon.com/2018/05/02/tripal_testing_guidelines/"/>
   <updated>2018-05-02T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2018/05/02/tripal_testing_guidelines</id>
   <content type="html">&lt;p&gt;This guide is for developers looking to contribute code to the core Tripal project.  It introduces the testing philosophy and guidelines for Tripal core.  Tripal uses Tripal Test Suite, which brings bootstraps your Tripal site for PHPUnit.  It also provides conveniences like namespacing, seeders, transactions, and data factories.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/TripalLogo_dark.png&quot; alt=&quot;Tripal Logo&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tripal-test-suite&quot;&gt;Tripal Test Suite&lt;/h2&gt;

&lt;p&gt;For a basic introduction of Tripal Testing, please see the &lt;a href=&quot;https://github.com/statonlab/TripalTestSuite&quot;&gt;Test Suite repo&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h3 id=&quot;installation&quot;&gt;Installation&lt;/h3&gt;

&lt;p&gt;After cloning the &lt;a href=&quot;https://github.com/tripal/tripal&quot;&gt;Tripal github repo&lt;/a&gt;, you will need to install the developer dependencies required to run tests locally.  To do this, you’ll need to &lt;a href=&quot;https://getcomposer.org/doc/00-intro.md&quot;&gt;install Composer&lt;/a&gt;, and then execute &lt;code class=&quot;highlighter-rouge&quot;&gt;composer install&lt;/code&gt; in your project root.&lt;/p&gt;

&lt;h2 id=&quot;testing-criteria&quot;&gt;Testing criteria&lt;/h2&gt;
&lt;p&gt;For facilitate accepting your pull requests, your code should include tests.  The tests should meet the following guidelines:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All tests pass&lt;/li&gt;
  &lt;li&gt;Tests pass in all environments (Travis)&lt;/li&gt;
  &lt;li&gt;Tests don’t modify the database (use transactions or clean up after yourself)&lt;/li&gt;
  &lt;li&gt;Tests are properly organized (see organization section below)&lt;/li&gt;
  &lt;li&gt;Tests run quietly&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;test-organization&quot;&gt;Test organization&lt;/h2&gt;

&lt;p&gt;Tests should be placed in &lt;code class=&quot;highlighter-rouge&quot;&gt;tests/&lt;/code&gt;.  This root directory contains the following files:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bootstrap.php&lt;/code&gt; - Test directory configuration.  Don’t modify this.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DatabasSeeders/&lt;/code&gt; - &lt;a href=&quot;https://github.com/statonlab/TripalTestSuite#database-seeders&quot;&gt;Database seeders&lt;/a&gt;, for filling Chado with permanent test data&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DataFactory.php&lt;/code&gt; - &lt;a href=&quot;https://github.com/statonlab/TripalTestSuite#factories&quot;&gt;Data factories&lt;/a&gt;, for providing test-by-test Chado data.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;example.env&lt;/code&gt; - An example environment file.  Configure this to match your development site and save as &lt;code class=&quot;highlighter-rouge&quot;&gt;.env&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tests must end with &lt;code class=&quot;highlighter-rouge&quot;&gt;Test.php&lt;/code&gt; to be recognized by PHPUnit.  The tests themselves should be organized by submodule, and category.&lt;/p&gt;

&lt;h5 id=&quot;submodules&quot;&gt;Submodules&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;tripal&lt;/li&gt;
  &lt;li&gt;tripal_bulk_loader&lt;/li&gt;
  &lt;li&gt;tripal_chado&lt;/li&gt;
  &lt;li&gt;tripal_chado_views&lt;/li&gt;
  &lt;li&gt;tripal_daemon&lt;/li&gt;
  &lt;li&gt;tripal_ds&lt;/li&gt;
  &lt;li&gt;tripal_ws&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;categories&quot;&gt;Categories&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;API&lt;/li&gt;
  &lt;li&gt;theme&lt;/li&gt;
  &lt;li&gt;views&lt;/li&gt;
  &lt;li&gt;drush&lt;/li&gt;
  &lt;li&gt;fields&lt;/li&gt;
  &lt;li&gt;entities&lt;/li&gt;
  &lt;li&gt;admin&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So for example, tests for the file &lt;code class=&quot;highlighter-rouge&quot;&gt;tripal/api/tripal.jobs.api.inc&lt;/code&gt; should go in &lt;code class=&quot;highlighter-rouge&quot;&gt;tests/tripal/api/TripalJobsAPITest.php&lt;/code&gt;. tests that don’t fit in any of these categories should be placed in &lt;code class=&quot;highlighter-rouge&quot;&gt;tests/[submodule]/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In order for tests to run locally, you’ll need an environmental file &lt;code class=&quot;highlighter-rouge&quot;&gt;tests/.env&lt;/code&gt; with the project root, base url, and locale.  See &lt;code class=&quot;highlighter-rouge&quot;&gt;tests/example.env&lt;/code&gt; for an example.&lt;/p&gt;

&lt;h2 id=&quot;writing-tests&quot;&gt;Writing tests&lt;/h2&gt;

&lt;p&gt;When doing test driven development, you might be running tests over and over.  To speed you along, you can assign your tests a unique &lt;code class=&quot;highlighter-rouge&quot;&gt;@group&lt;/code&gt; tag, ie &lt;code class=&quot;highlighter-rouge&quot;&gt;@group failing&lt;/code&gt;.  Then specify your novel group when you run phpunit, ie &lt;code class=&quot;highlighter-rouge&quot;&gt;phpunit --group failing&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You should also tag your test with relevant groups.  For example, our Tripal Chado API tests should be tagged with &lt;code class=&quot;highlighter-rouge&quot;&gt;@group api&lt;/code&gt;.  We don’t tag it with &lt;code class=&quot;highlighter-rouge&quot;&gt;@group chado&lt;/code&gt; because it is in the &lt;em&gt;testsuite&lt;/em&gt; (the submodule folder) Chado.&lt;/p&gt;

&lt;h2 id=&quot;defining-the-test-class&quot;&gt;Defining the test class&lt;/h2&gt;

&lt;p&gt;Once you’ve identified where your test will go, we can start writing our test.&lt;/p&gt;

&lt;p&gt;Tripal Test suite provides a convenient way to start writing a test class: &lt;code class=&quot;highlighter-rouge&quot;&gt;tripaltest make:test TestName&lt;/code&gt;.  From the project root, our example  &lt;code class=&quot;highlighter-rouge&quot;&gt;./vendor/bin/tripaltest make:test tripal_chado/api/TripalChadoOrganismAPITest&lt;/code&gt;.  This will generate a test stub file with namespacing.&lt;/p&gt;

&lt;p&gt;The test class file should extend &lt;code class=&quot;highlighter-rouge&quot;&gt;StatonLab\TripalTestSuite\TripalTestCase&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;TestCase&lt;/code&gt; to take advantage of the Tripal Test Suite tools.  For example, to wrap our tests in a database transaction (so we can indescriminately insert and modify without having to revert consider how to clean up the database after), we use &lt;code class=&quot;highlighter-rouge&quot;&gt;StatonLab\TripalTestSuite\DBTransaction;&lt;/code&gt;.  Your test class name should match the file.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;use StatonLab\TripalTestSuite\DBTransaction;
use StatonLab\TripalTestSuite\TripalTestCase;

class TripalChadoOrganismAPITest extends TripalTestCase {
	use DBTransaction;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You typically will want at least one test per public method in your file or class. In the below test class, I define a single test: &lt;code class=&quot;highlighter-rouge&quot;&gt;test_tripal_get_organism()&lt;/code&gt;.  The test should start with &lt;code class=&quot;highlighter-rouge&quot;&gt;test_&lt;/code&gt;, otherwise it wont run by default in PHPUnit (you can also declare that it is a test in the method documentation using &lt;code class=&quot;highlighter-rouge&quot;&gt;@test&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An ideal test operates &lt;em&gt;independently&lt;/em&gt; of other tests: by default, unit tests run in random order.  How, then, do we provide our test with relevant data?  We use &lt;strong&gt;Factories&lt;/strong&gt;, which you can read about on the &lt;a href=&quot;https://github.com/statonlab/TripalTestSuite#factories&quot;&gt;Tripal Test Suite repo&lt;/a&gt;.  In the below example, we create an organism with known information, and assert that we can retrieve it with the Chado API functions.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
namespace Tests\tripal_chado\api;

use StatonLab\TripalTestSuite\DBTransaction;
use StatonLab\TripalTestSuite\TripalTestCase;

class TripalChadoOrganismAPITest extends TripalTestCase {

  use DBTransaction;

  /**
   * Test tripal_get_organism.
   *
   * @group api
   */
  public function test_tripal_get_organism() {

    $genus_string = 'a_genius_genus';
    $species_string = 'fake_species';

    $organism = factory('chado.organism')-&amp;gt;create([
      'genus' =&amp;gt; $genus_string,
      'species' =&amp;gt; $species_string,
    ]);

    $results = [];

    $results[] = tripal_get_organism(['organism_id' =&amp;gt; $organism-&amp;gt;organism_id]);
    $results[] = tripal_get_organism([
      'genus' =&amp;gt; $genus_string,
      'species' =&amp;gt; $species_string,
    ]);

    foreach ($results as $result) {
      $this-&amp;gt;assertNotFalse($result);
      $this-&amp;gt;assertNotNull($result);
      $this-&amp;gt;assertObjectHasAttribute('genus', $result);
      $this-&amp;gt;assertEquals($genus_string, $result-&amp;gt;genus);
    }
  }

  public function test_tripal_get_organism_fails_gracefully() {
    $result = tripal_get_organism([
      'genus' =&amp;gt; uniqid(),
      'species' =&amp;gt; uniqid(),
    ]);

    $this-&amp;gt;assertNull($result);
  }

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h3 id=&quot;testing-quietly&quot;&gt;Testing quietly&lt;/h3&gt;

&lt;p&gt;Code may output errors when failing intentionally, or as part of job progress.  This can clutter the test environment, so you should wrap the offending methods.  If the output goes to standard out, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;ob_start()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ob_end_clean()&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
    ob_start();//dont display the job message
    $bool = tripal_chado_publish_records($values);
    ob_end_clean();

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If the message comes from the Tripal error reporter, you must use &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;TRIPAL_SUPPRESS_ERRORS=TRUE&quot;&lt;/code&gt; to suppress the tripal error reporter message.&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
  /**
   * Test chado_publish_records returns false given bad bundle.
   *
   * @group api
   */
  public function test_tripal_chado_publish_records_false_with_bad_bundle() {
    putenv(&quot;TRIPAL_SUPPRESS_ERRORS=TRUE&quot;);//this will fail, so we suppress the tripal error reporter
    $bool = tripal_chado_publish_records(['bundle_name' =&amp;gt; 'never_in_a_million_years']);
    $this-&amp;gt;assertFalse($bool);
    putenv(&quot;TRIPAL_SUPPRESS_ERRORS&quot;);//unset
  }

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;testing-entities-and-fields&quot;&gt;Testing Entities and Fields&lt;/h3&gt;

&lt;p&gt;Coming soon.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tripal GFF Loader</title>
   <link href="http://bradfordcondon.com/2018/03/28/loading_gff3_tripal/"/>
   <updated>2018-03-28T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2018/03/28/loading_gff3_tripal</id>
   <content type="html">&lt;p&gt;I was recently tasked with using the Tripal GFF loader to add genomic coordinates to our mRNA features.  The Tripal.info tutorial &lt;a href=&quot;http://tripal.info/tutorials/v3.x/example-genomic-site/genomic-data&quot;&gt;covers using the GFF loader&lt;/a&gt; to load in features, but at Hardwoods we don’t typically follow this paradigm, and only load in features using the FASTA loader.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/TripalLogo_dark.png&quot; alt=&quot;Tripal Logo&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;the-gff3-file&quot;&gt;The GFF3 file&lt;/h1&gt;

&lt;p&gt;Before we begin, lets look at a GFF3 file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Contig0	FRAEX38873_v2	gene	16315	44054	.	+	.	ID=FRAEX38873_v2_000000010;Name=FRAEX38873_v2_000000010;biotype=protein_coding
Contig0	FRAEX38873_v2	mRNA	16315	44054	.	+	.	ID=FRAEX38873_v2_000000010.1;Parent=FRAEX38873_v2_000000010;Name=FRAEX38873_v2_000000010.1;biotype=protein_coding;AED=0.05
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Each entry specifies, in order, the contig the feature is located on (The &lt;strong&gt;Landmark&lt;/strong&gt;: see below), the assembly version, the feature type, the start, end, and strand information of the feature.  The final column contains annotations.  Most importantly are the &lt;strong&gt;Name&lt;/strong&gt; tag which the GFF file will match when looking for your feature (or use as the name when creating the new feature), and the &lt;strong&gt;Parent&lt;/strong&gt; tag.  The parent &lt;strong&gt;must&lt;/strong&gt; exist for the loader to continue.&lt;/p&gt;

&lt;p&gt;In our case, we need to specify a landmark type in order for the loader to work.  If you get an error like the one specified below, then your contigs or scaffolds are not loaded, or there is a discrepency in the names in your database and in your GFF file.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The landmark ‘Contig0’ cannot be found for this organism (Fraxinus excelsior) Please add the landmark and then retry the import of this GFF3 file&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;loading-the-contigs-fasta&quot;&gt;Loading the Contigs FASTA&lt;/h1&gt;

&lt;p&gt;Whatever sequence is the landmark type must be loaded prior to running the GFF importer.  The contig FASTA files are quite large, and we don’t do very much with the data.  We therefore can strip the FASTA sequences from the file using sed or a custom script.  I provide an example script at the end of this file: it would be easier to use sed but I already had this program written.&lt;/p&gt;

&lt;h1 id=&quot;loading-the-gff3-file&quot;&gt;Loading the GFF3 file&lt;/h1&gt;

&lt;h3 id=&quot;cleaning-the-input-gff3&quot;&gt;Cleaning the input GFF3&lt;/h3&gt;

&lt;p&gt;If you’d like, you can clean up the GFF3 file to remove feature types you don’t want inserted into your database.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; awk &lt;span class=&quot;s1&quot;&gt;'{if ($3 == &quot;gene&quot;  || $3 == &quot;mrna&quot; ) {print}} '&lt;/span&gt; e_walnut_filter.gff
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above command will output rows of the GFF file where the third row (the annotation type) is equal to either gene or mrna.  You can pipe the results to a new file using hte &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt; output.txt&lt;/code&gt; operator after the command.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;note&lt;/strong&gt;: There can be additional problems with the input GFF file: if the loader fails, check the format of the input GFF.  For example, the below line of a GFF file failed for me because it included a &lt;code class=&quot;highlighter-rouge&quot;&gt;;&lt;/code&gt; within a tag definition (the &lt;code class=&quot;highlighter-rouge&quot;&gt;protein 1;4&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; jcf7180001222097	maker	gene	1838197	1841620	.	-	.	ID=WALNUT_00004175;Name=WALNUT_00004175;Alias=PREDICTED: nucleosome assembly protein 1;4,Interpro:IPR002164,Pfam:PF00956;Note=high_quality_complete_model;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In this case I had to manually change these semicolons to commas.&lt;/p&gt;

&lt;p&gt;In another case, I got &lt;code class=&quot;highlighter-rouge&quot;&gt;dbxref&lt;/code&gt; errors due to extra tags in the description:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ID=QlobV1.0_scaffold68_0000030-RA;Parent=QlobV1.0_scaffold68_0000030;Name=QlobV1.0_scaffold68_0000030-RA;Alias=maker-scaffold68-augustus-gene-0.26-mRNA-1;Dbxref=InterPro:IPR001650,Pfam:PF00271;Note=Similar to Eukaryotic initiation factor 4A-3 (Nicotiana plumbaginifolia);_
AED=0.08;_QI=0|0|0|1|1|1|2|0|123;_eAED=0.08;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Since I’m pretty sure we don’t need those AED, QI entries, we can remove them with sed:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sed 's/_AED.*?\(;\)//g' Qlob.v1.0.annV1.0.gff &amp;gt; Qlob_modified.gff&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sed -i 's/_eAED.*?\(;\)//g' Qlob_modified2.gff &amp;gt;Qlob_modified3.gff &lt;/code&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;sed -i 's/_QI.*?\(;\)//g' Qlob_modified3.gff &amp;gt; Qlob_modified_final.gff&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you’ve already loaded the features, don’t worry, I give examples below for how to easily delete unintended features.&lt;/p&gt;

&lt;h3 id=&quot;renaming-features-in-the-gff3&quot;&gt;Renaming features in the GFF3&lt;/h3&gt;

&lt;p&gt;You might have to rename some of your features to get them loaded properly in the database.  For example, our English Walnut mRNAs had some information appended/prepended to the name.  We used this command to add it in: &lt;code class=&quot;highlighter-rouge&quot;&gt;sed ‘s/\(WALNUT_[0-9]*-RA\)/Juglans_regia_01182017_\1_mRNA/g’ Reju_v4.gff&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;running-the-gff3-loader&quot;&gt;Running the GFF3 loader&lt;/h3&gt;

&lt;h1 id=&quot;cleaning-up-additional-features&quot;&gt;Cleaning up additional features&lt;/h1&gt;

&lt;p&gt;Tripal will insert features for &lt;em&gt;everything&lt;/em&gt; in your GFF file.  This means, for example, 5’ and 3’ untranslated features might now be in your Chado database, even if you have no intention of using that data.  To clean up, first let’s look at all the &lt;code class=&quot;highlighter-rouge&quot;&gt;type_id&lt;/code&gt;s in our Chado database.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SELECT DISTINCT CF.type_id, CVT.name FROM chado.feature AS CF
	INNER JOIN chado.cvterm AS CVT ON CVT.cvterm_id = CF.type_id;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Name&lt;/th&gt;
      &lt;th&gt;ID&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;exxon&lt;/td&gt;
      &lt;td&gt;288&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;contig&lt;/td&gt;
      &lt;td&gt;105&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mRNA&lt;/td&gt;
      &lt;td&gt;145&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gene&lt;/td&gt;
      &lt;td&gt;215&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;polypeptide&lt;/td&gt;
      &lt;td&gt;236&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CDS&lt;/td&gt;
      &lt;td&gt;237&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;exon&lt;/td&gt;
      &lt;td&gt;288&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;supercontig&lt;/td&gt;
      &lt;td&gt;290&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;five_prime_UTR&lt;/td&gt;
      &lt;td&gt;354&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;three_prime_UTR&lt;/td&gt;
      &lt;td&gt;355&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mRNA_contig&lt;/td&gt;
      &lt;td&gt;101394&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;In my case, the UTRs, exons, and CDS are all unnecessary: let’s remove them.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;SET search_path TO chado, public;
DELETE FROM chado.feature WHERE type_id IN (355, 354, 237, 288);
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We need to set the search path to include prior to deleting: otherwise the command will fail.&lt;/p&gt;

&lt;p&gt;If you make mistakes in your featureloc table, deleting them can be a bit tricky too.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;DELETE FROM chado.featureloc FL WHERE FL.feature_id IN (SELECT feature_id FROM chado.feature where organism_id IN (42, 24, 48));
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Here I delete things from the featureloc table that match my organisms with errors.&lt;/p&gt;

&lt;h1 id=&quot;perl-script-for-removing-sequences-from-fasta&quot;&gt;Perl script for removing sequences from FASTA&lt;/h1&gt;

&lt;div class=&quot;language-perl highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;c1&quot;&gt;#!/usr/bin/env perl&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#simple Bioperl script to remove seqs from FASTA file.&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;strict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;warnings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Getopt::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Bio::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SeqIO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Data::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Dumper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# usage&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$usage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$0 -i|input fasta_input_files \n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# global values&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$input_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# read user options&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GetOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;s&quot;&gt;&quot;i|input=s&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$input_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# check for user parameters&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$input_file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$usage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# open input fasta file&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;unless&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$input_file&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;error: cannot find fasta input file $input_file\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Bio::&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;SeqIO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;$input_file&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-format'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Fasta'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;error: failure opening fasta $input_file for reading: $!\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# make temporary fasta file and print header line&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$output_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;$input_file.empty.fasta&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;OUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;$output_file&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;die&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;error: cannot open $output_file for writing: $!\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# step through sequences in input fasta file&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$seqObject&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$input&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;next_seq&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
	
	&lt;span class=&quot;c1&quot;&gt;# get sequence information&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$seqObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$seq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$seqObject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;seq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;extracting $id\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;gt;$id\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;\n&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  	
	
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Tripal best practices</title>
   <link href="http://bradfordcondon.com/2018/03/05/tripal_guide_metadata_practices/"/>
   <updated>2018-03-05T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2018/03/05/tripal_guide_metadata_practices</id>
   <content type="html">&lt;p&gt;Welcome to Tripal Country!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/TripalLogo_dark.png&quot; alt=&quot;Tripal Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Today I’m sharing my suggestions on how to set up your module.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;for-your-database&quot;&gt;For your database&lt;/h1&gt;

&lt;h3 id=&quot;organizational-groups&quot;&gt;Organizational Groups&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Add your site to Tripal.info&lt;/li&gt;
  &lt;li&gt;Add your site to the &lt;a href=&quot;https://fairsharing.org/collection/Tripal&quot;&gt;FAIRsharing Tripal&lt;/a&gt; collection.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;for-your-tripal-modules&quot;&gt;For your Tripal Modules&lt;/h1&gt;

&lt;p&gt;If you create custom Tripal Modules, here are some best practices and suggestions.&lt;/p&gt;

&lt;h3 id=&quot;add-your-module-to-tripalinfo&quot;&gt;Add your module to Tripal.info&lt;/h3&gt;

&lt;h3 id=&quot;host-your-code-on-github&quot;&gt;Host your code on GitHub&lt;/h3&gt;

&lt;p&gt;We recommend making your code open source and hosting it on GitHub.  It’s free, it let’s people easily find, use, and contribute to your source code.&lt;/p&gt;

&lt;h4 id=&quot;associate-the-github-repository-with-tripal&quot;&gt;Associate the GitHub repository with Tripal&lt;/h4&gt;

&lt;p&gt;Once your module is on GitHub, consider &lt;a href=&quot;https://github.com/tripal/&quot;&gt;&lt;strong&gt;joining the Tripal organization&lt;/strong&gt;&lt;/a&gt;.  Your lab group can exist as a team and maintain control over your code, but your projects will be listed in the main Tripal group.&lt;/p&gt;

&lt;p&gt;If you’d rather not, you can still tag your project as &lt;em&gt;Tripal&lt;/em&gt; by clicking on the &lt;em&gt;Manage Topics&lt;/em&gt; Link at the top of your repository.&lt;/p&gt;

&lt;h3 id=&quot;doi&quot;&gt;DOI&lt;/h3&gt;

&lt;p&gt;When your module is release ready, why not create a Digital Object Identifier (DOI) for it with &lt;a href=&quot;https://zenodo.org/&quot;&gt;Zenodo&lt;/a&gt;?  It’s free!  Sync your github account and create a &lt;em&gt;new&lt;/em&gt; release (Zenodo won’t find old releases).  You can then display your DOI badge on your module’s page.&lt;/p&gt;

&lt;p&gt;Additionally, there is a &lt;a href=&quot;https://zenodo.org/communities/tripal/&quot;&gt;Tripal Community group&lt;/a&gt; on Zenodo.  You can edit your record to associate your DOI with the Tripal community.&lt;/p&gt;

&lt;h3 id=&quot;testing-and-continuous-integration&quot;&gt;Testing and Continuous Integration&lt;/h3&gt;

&lt;p&gt;A &lt;a href=&quot;https://github.com/statonlab/TripalTestSuite&quot;&gt;Tripal Test module&lt;/a&gt; is coming soon, which will automatically set up a PHPUnit and Travis testing environment for you.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Test with PHP Unit.&lt;/li&gt;
  &lt;li&gt;Set up Travis continuous integration.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;documentation&quot;&gt;Documentation&lt;/h3&gt;

&lt;p&gt;Every repository can include a README file that will be displayed on the repository page.  A README file should at a minimum include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An overview of the module&lt;/li&gt;
  &lt;li&gt;Instructions on how to install &amp;amp; use the module&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Consider documenting your Code itself.  Tripal documents in the &lt;a href=&quot;http://www.stack.nl/~dimitri/doxygen/&quot;&gt;Doxygen style&lt;/a&gt; which allows documentation webpages to be automatically generated.  Even if you don’t build HTML documentation, the in-line code documentation will be very helpful to contributors.&lt;/p&gt;

&lt;h3 id=&quot;coding-standards&quot;&gt;Coding Standards&lt;/h3&gt;

&lt;p&gt;Drupal has &lt;a href=&quot;https://www.drupal.org/docs/develop/standards/coding-standards&quot;&gt;defined coding standards&lt;/a&gt; that Tripal modules should meet.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tripal Country: Tripal and Travis</title>
   <link href="http://bradfordcondon.com/2018/02/26/tripal_and_travis/"/>
   <updated>2018-02-26T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2018/02/26/tripal_and_travis</id>
   <content type="html">&lt;p&gt;Welcome to Tripal Country!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/TripalLogo_dark.png&quot; alt=&quot;Tripal Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This week I’m excited to announce we’ve set up Travis Continuous Integration with Tripal!  This means every time code is committed, we test three things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Upgrade a Tripal 2 site to Tripal 3&lt;/li&gt;
  &lt;li&gt;Install Tripal 3 on a clean site&lt;/li&gt;
  &lt;li&gt;Run PHPUnit tests&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/tripal/tripal_passing.png&quot; alt=&quot;tripal passing!&quot; /&gt;
Is there anything more fulfilling than seeing a &lt;em&gt;Build:Passing&lt;/em&gt; tag on your repo?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;the-general-idea&quot;&gt;The General Idea&lt;/h2&gt;

&lt;p&gt;Even small changes to the code base can have unintended consequences.  Continuous Integration running on a pull request means you know, before you merge the pull request, whether or not the new code will pass all your tests.&lt;/p&gt;

&lt;p&gt;In the case of Tripal, we wanted to clear the way for PHPUnit testing.  Testing is interesting when you work in Drupal 6 and 7: Drupal switched to PHPUnit support in Drupal 8.  Especially as a novice developer, you ask yourself, should I bother learning the old framework (simpletest) when I know that PHPunit is just around the corner?&lt;/p&gt;

&lt;p&gt;Turns out with a little bit of work, PHPUnit works just fine with Drupal 7.  This means we can add test coverage to our code and be aware when new changes break old functionality.  Plus, because we build new sites from scratch, we can rest assured that new users trying out Tripal won’t be faced with a broken build.&lt;/p&gt;

&lt;h2 id=&quot;the-build-script&quot;&gt;The Build Script&lt;/h2&gt;

&lt;p&gt;The full build script (&lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt;) we went with is below.  We’re grateful to &lt;a href=&quot;https://graysonkoonce.com/getting-the-current-branch-name-during-a-pull-request-in-travis-ci/&quot;&gt;Grayson Koonce for the branch vs PR workaround.&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;language: php

services:
  - docker

sudo: required

before_script:
  - docker pull statonlab/drupal7

script:
  # Set branch name
  - export REPO=$(if [ &quot;$TRAVIS_PULL_REQUEST&quot; == &quot;false&quot; ]; then echo $TRAVIS_REPO_SLUG; else echo $TRAVIS_PULL_REQUEST_SLUG; fi)
  - export BRANCH=$(if [ &quot;$TRAVIS_PULL_REQUEST&quot; == &quot;false&quot; ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)
  #  Travis does a shallow clone and we need a full clone to test Tripal v2 to v3 upgrade
  - cd .. &amp;amp;&amp;amp; rm -rf tripal &amp;amp;&amp;amp; git clone https://github.com/$REPO.git tripal &amp;amp;&amp;amp; cd tripal
  - git checkout $BRANCH
  # Test tripal 3 installation
  - docker run -it -d --rm --name tripal3 -v &quot;$(pwd)&quot;:/modules/tripal statonlab/drupal7
  - sleep 15
  - docker exec -it tripal3 drush en -y tripal tripal_chado tripal_chado_views tripal_ds tripal_ws
  # Prepare Chado
  - docker exec -it tripal3 drush eval &quot;module_load_include('inc', 'tripal_chado', 'includes/tripal_chado.install'); tripal_chado_load_drush_submit('Install Chado v1.3');&quot;
  - docker exec -it tripal3 drush trp-run-jobs --username=admin
  # Prepare Drupal
  - docker exec -it tripal3 drush eval &quot;module_load_include('inc', 'tripal_chado', 'includes/setup/tripal_chado.setup'); tripal_chado_prepare_drush_submit();&quot;
  - docker exec -it tripal3 drush trp-run-jobs --username=admin
  # Run PHPUnit tests
  - docker exec -it tripal3 bash -c &quot;cd /modules/tripal &amp;amp;&amp;amp; composer install &amp;amp;&amp;amp; DRUPAL_ROOT=/var/www/html ./vendor/bin/phpunit&quot;
  # Test Tripal v2 to v3 upgrade steps
  - git checkout 7.x-2.x
  - docker run -it -d --rm --name tripal2 -v &quot;$(pwd)&quot;:/modules/tripal statonlab/drupal7
  - sleep 15
  - docker exec -it tripal2 drush en -y tripal_core
  - docker exec -it tripal2 drush pm-disable tripal_core -y
  - git checkout $BRANCH
  - docker exec -it tripal2 drush en -y tripal
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</content>
 </entry>
 
 <entry>
   <title>Tripal Country: Chado Feature Annotations</title>
   <link href="http://bradfordcondon.com/2018/02/12/tripal_understanding_feature_annotations/"/>
   <updated>2018-02-12T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2018/02/12/tripal_understanding_feature_annotations</id>
   <content type="html">&lt;p&gt;Welcome to Tripal Country!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/TripalLogo_dark.png&quot; alt=&quot;Tripal Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tripal feature annotations might be a little unintuitive, especially for non-biologists.  This guide is to solidify my own knowledge of what goes where and why: hopefully it will be helpful to some developers as well.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;executive-summary&quot;&gt;Executive Summary&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;KEGG, IPR, GO annotations go in &lt;code class=&quot;highlighter-rouge&quot;&gt;feature_cvterm&lt;/code&gt;.  The annotations show up in the “Annotation” field&lt;/li&gt;
  &lt;li&gt;BLAST annotations go in &lt;code class=&quot;highlighter-rouge&quot;&gt;blast_hit_data&lt;/code&gt;.  The annotations show in up the “Homology” field&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-feature-table&quot;&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;feature&lt;/code&gt; table&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;feature&lt;/code&gt; table is where all sequences live in Chado as dictated by the &lt;a href=&quot;https://laceysanderson.github.io/chado-docs/sequence/index.html&quot;&gt;sequence&lt;/a&gt; module.  I won’t go into detail as there are other guides available for this module.&lt;/p&gt;

&lt;h2 id=&quot;the-feature_cvterm-table&quot;&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;feature_cvterm&lt;/code&gt; table&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://laceysanderson.github.io/chado-docs/tables/feature_cvterm.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;feature_cvterm&lt;/code&gt;&lt;/a&gt; table is the simplest way to annotate a feature.  You just need a feature_id and a cvterm_id, which will be the KEGG, IPR, or GO cvterm id. Additional info for the annotation goes in &lt;a href=&quot;https://laceysanderson.github.io/chado-docs/tables/feature_cvtermprop.html&quot;&gt;feature_cvtermprop&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-blast_hit_data-table&quot;&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;blast_hit_data&lt;/code&gt; table&lt;/h2&gt;

&lt;p&gt;Blast annotations loaded in from the &lt;code class=&quot;highlighter-rouge&quot;&gt;analysis_blast&lt;/code&gt; module go somewhere &lt;em&gt;different&lt;/em&gt;: to the &lt;code class=&quot;highlighter-rouge&quot;&gt;blast_hit_data&lt;/code&gt; table.  Why?&lt;/p&gt;

&lt;p&gt;Tripal sites can use whatever BLAST annotations they would like.  This might mean a custom gene set, even the &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/refseq/about/nonredundantproteins/&quot;&gt;genbank nr database&lt;/a&gt;.  To use the feature_cvterm annotation table, you’d need a cvterm for each entry in your blast database! The &lt;code class=&quot;highlighter-rouge&quot;&gt;blast_hit_data&lt;/code&gt; table means you dont need to do this.  That’s my rationale for it, at least- I didn’t write it!&lt;/p&gt;

&lt;p&gt;All of the information for the blast result is available in the &lt;code class=&quot;highlighter-rouge&quot;&gt;blast_hit_data&lt;/code&gt; table.  This includes the name and accession of the hit with its full description and url, the scores, percent identity, e value, and number of hits.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tripal Country: Manually Creating New Bundle Types</title>
   <link href="http://bradfordcondon.com/2018/02/01/tripal_manually_creating_bundles/"/>
   <updated>2018-02-01T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2018/02/01/tripal_manually_creating_bundles</id>
   <content type="html">&lt;p&gt;Welcome to Tripal Country!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/TripalLogo_dark.png&quot; alt=&quot;Tripal Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a short guide to demonstrate how to create new bundle types with Chado storage in Tripal 3. It was originally written as instructions for my &lt;a href=&quot;https://github.com/statonlab/tripal_alchemist/&quot;&gt;Tripal Alchemist module&lt;/a&gt;.  There is a similar guide &lt;a href=&quot;http://tripal.info/tutorials/v3.x/content-types&quot;&gt;on tripal.info&lt;/a&gt; which you can also review.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;quick-guide&quot;&gt;Quick Guide&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Pick an appropriate CVterm for your bundle.  I recommend using the &lt;a href=&quot;https://www.ebi.ac.uk/ols/index&quot;&gt;EBI Ontology Lookup Service&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;If not already in Chado, insert the CVterm.&lt;/li&gt;
  &lt;li&gt;Match your new bundle to the CVterm.&lt;/li&gt;
  &lt;li&gt;Set the Storage backend to Chado.&lt;/li&gt;
  &lt;li&gt;Select the appropriate Chado Table.&lt;/li&gt;
  &lt;li&gt;Determine if this term is the exclusive user of this Chado table.  If it is, you can select “Yes” when asked if all records in the Chado table will be of this type, and press “Create Content Type”.&lt;/li&gt;
  &lt;li&gt;if the Chado Table is shared, select the appropriate method for distinguishing content types. This will either be a &lt;em&gt;property table&lt;/em&gt; or a &lt;em&gt;type_id&lt;/em&gt; column in the base table.&lt;/li&gt;
  &lt;li&gt;If using a property table, specify a property type cvterm.&lt;/li&gt;
  &lt;li&gt;Select the matching property value to distinguish this type.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;detailed-guide&quot;&gt;Detailed Guide&lt;/h2&gt;

&lt;p&gt;For the purposes of this demo, let us assume that we have a custom module for storing proteomic analyses.  Our module had a custom node, analysis_proteome, and after migrating to Tripal 3, all those nodes were converted to one generic analysis type.&lt;/p&gt;

&lt;h3 id=&quot;picking-a-cvterm&quot;&gt;Picking a CVterm&lt;/h3&gt;

&lt;p&gt;Before we begin, let’s pick an appropriate CVterm for our bundle.  The ideal term will be specific enough to not overlap with other content, but broad enough to work for other users who might download your module.  For example, we wouldn’t want to say “flatworm proteome analysis” when “proteome analysis” works just as well.
I recommend using the &lt;a href=&quot;https://www.ebi.ac.uk/ols/index&quot;&gt;EBI Ontology Lookup Service&lt;/a&gt;.  In our case, I’ve found a reasonable term in the OBI ontology: &lt;a href=&quot;https://www.ebi.ac.uk/ols/ontologies/obi/terms?iri=http%3A%2F%2Fpurl.obolibrary.org%2Fobo%2FOBI_0000615&quot;&gt;protein expression profiling
&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next, make sure the term is in your database.  If you’ve already loaded the entire CV or ontology you found your term in, you can skip this step.  Otherwise, go to /admin/tripal/loaders/chado_vocabs/chado_cvterms in the admin menu and select &lt;strong&gt;+ Add Term.&lt;/strong&gt;  Be sure to fill out the CV, DB, accession, and Term Name fields correctly: for a detailed guide on this topic, please see &lt;a href=&quot;https://github.com/statonlab/fields_generator/blob/master/CV_guide.md&quot;&gt;the guide available in the Tripal Fields Generator Tool&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/tripal/bundle_creation/create_bundle_2_cvterm.png&quot; alt=&quot;admin location of adding a content type&quot; /&gt;
After finding an appropriate CVterm, use the chado cvterm loader to insert it if not already present in your database.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A note: if you are stumped, or can’t seem to find a good CVterm, you can use the local CV, but this is discouraged.&lt;/p&gt;

&lt;h3 id=&quot;bundle-creation&quot;&gt;Bundle Creation&lt;/h3&gt;

&lt;p&gt;Now that we have a CVTerm for our bundle, let’s add it to Tripal.  You can add a new Tripal Content Type (Bundle) by navigating to Structure -&amp;gt; Tripal Content Types -&amp;gt; Add Tripal Content Type in the admin menu.  To fill out this form, we need to know our CVterm, what Chado base table our bundle uses, and how the content type is differentiated if the table is shared.  In the case of our demo Protein Expression Profiling bundle, we know that it is one of several content types using the &lt;em&gt;Analysis&lt;/em&gt; Chado base table.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/tripal/bundle_creation/create_bundle_1.png&quot; alt=&quot;admin location of adding a content type&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;You can create new Tripal Content Types (bundles) via the admin panel by navigating to Structure -&amp;gt; Tripal Content Types.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/tripal/bundle_creation/create_bundle_lookup_bundle_term.png&quot; alt=&quot;Look up the bundle term&quot; /&gt;
First, assign your term to your bundle.  You should have a term in the &lt;em&gt;Matching Terms&lt;/em&gt; box after pressing Lookup Term.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are three possible storage configurations for your bundle.&lt;/p&gt;

&lt;p&gt;1)  Your bundle is the only content type mapped to this base table.  If you don’t need special functionality or fields for any subtype, this is the best choice.
2)  Your bundle shares the base table, and is distinguished by a &lt;em&gt;type_id&lt;/em&gt; column.  If this is the case, your chado base table will have a &lt;em&gt;type_id&lt;/em&gt; column that holds a cvterm_id foreign key.  That cvterm will be the type.
3)  Your bundle shares the base table, and is distinguished by a &lt;em&gt;linker table&lt;/em&gt;.  For the analysis table, this could be &lt;code class=&quot;highlighter-rouge&quot;&gt;analysisprop&lt;/code&gt;, but it could also be &lt;code class=&quot;highlighter-rouge&quot;&gt;analysis_cvterm&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tripal will &lt;strong&gt;automatically make suggestions&lt;/strong&gt;for where to store the type based on your Chado schema.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/tripal/bundle_creation/create_bundle_set_storage_properties.png&quot; alt=&quot;Set the property type values&quot; /&gt;
In this example, we specify our bundle type in the analysisprop table.  There is a property associated with our analysis via this table where the type_id matches the cvterm we specify (Analysis Type), and the corresponding value should be tripal_protein_expression.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For our Protein Expression Profiling bundle, we want to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;analysisprop&lt;/code&gt; table.  Tripal (and Tripal Alchemist!) will look for entries in the analysis table that have a property in the analysisprop table where type_id = the cvterm for the type (Analysis Type in this case).  Tripal will know that the analysis is a Protein Expression Profiling if the &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; column of that property is equal to the text we specified: &lt;code class=&quot;highlighter-rouge&quot;&gt;tripal_protein_expression&lt;/code&gt;.  For analyses created by modules, this is the convention: set the Analysis Type cvterm equal to the &lt;em&gt;module name&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;populating-our-bundle&quot;&gt;Populating our Bundle&lt;/h3&gt;

&lt;p&gt;Now that our bundle exists, we can create new content directly by going to Content -&amp;gt; Tripal Content -&amp;gt; + Add Tripal Content.&lt;/p&gt;

&lt;p&gt;If you’ve already got Tripal 2 nodes for your content, you can migrate them using the core migrator available at Tripal -&amp;gt; Data Storage -&amp;gt; Chado -&amp;gt; Migrate.  Analyses will all migrate to the Analysis content type, so you can use &lt;a href=&quot;https://github.com/statonlab/tripal_alchemist/&quot;&gt;&lt;strong&gt;Tripal Alchemist&lt;/strong&gt;&lt;/a&gt; to migrate your content &lt;em&gt;from&lt;/em&gt; Analysis &lt;em&gt;to&lt;/em&gt; the new bundle type.  For our demo, this would be Protein Expression Profiling.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tripal at the 2018 GMOD hackathon</title>
   <link href="http://bradfordcondon.com/2018/01/17/tripal_at_pag_2018/"/>
   <updated>2018-01-17T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2018/01/17/tripal_at_pag_2018</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/img/TripalLogo_dark.png&quot; alt=&quot;Tripal Logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The 2018 Tripal hackathon took place at the Plant &amp;amp; Animal Genomes conference in San Diego January 11th &amp;amp; 12th. I’d post the itinerary and workshop sessions were, but I didn’t take great notes.  Instead, I’ll share about the sessions I took part in. Thursday we discussed Controlled Vocabularies in the morning, and Tripal Core issues (generally Tripal 3 issues) in the afternoon.  Friday was a general round-table and a Tripal 3 bundles and fields live demo.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;I want to thank everyone who came out to the Tripal workshop at the 2018 Plant &amp;amp; Animal Genome Conference for making it a success.  Special thanks to Meg Staton and Ethy Cannon for organizing.&lt;/p&gt;

&lt;h2 id=&quot;day-one&quot;&gt;Day One&lt;/h2&gt;
&lt;h3 id=&quot;controlled-vocabularies&quot;&gt;Controlled Vocabularies&lt;/h3&gt;

&lt;p&gt;In the morning I ran a tutorial on Controlled Vocabularies, their increased importance in Tripal 3, and how Chado stores them.  If you’re interested in learning more, I’ve already written detailed Controlled Vocabulary Term guides for my &lt;a href=&quot;https://github.com/statonlab/fields_generator&quot;&gt;Tripal Fields Generator tool&lt;/a&gt;, so check out the documentation there if you’re interested in learning more.&lt;/p&gt;

&lt;h3 id=&quot;tripal-3-issue-queue&quot;&gt;Tripal 3 Issue Queue&lt;/h3&gt;
&lt;p&gt;In the afternoon I bounced between working on some of the issues we’ve found migrating to Tripal 3, and answering questions about creating fields and bundles in Tripal 3 using the GUI.  Now that I’ve been working in Tripal 3 for a while, the concepts seem crystal clear, but it took me a while to wrap my head around them.  I’m hoping to post my experience here to ease the transition for other sites converting from Tripal 2 to Tripal 3.&lt;/p&gt;

&lt;h2 id=&quot;day-two&quot;&gt;Day Two&lt;/h2&gt;
&lt;h3 id=&quot;round-table-discussion&quot;&gt;Round Table Discussion&lt;/h3&gt;
&lt;p&gt;I don’t have much to write about this discussion: I enjoyed meeting members of the Tripal community, learning about the sites that use or will use Tripal, and hearing about some of the new modules being developed. It looks like Tripal 4 is in the works to keep up with Drupal 8’s release (see below) but it won’t be available in 2018.  In the meantime the community is exploring the Tripal 3 upgrade process.&lt;/p&gt;

&lt;h3 id=&quot;tripal-3-development-demo&quot;&gt;Tripal 3 Development Demo&lt;/h3&gt;
&lt;p&gt;It was clear the first day that the Tripal community is ready to start thinking about migrating to Tripal 3, and had a lot of the same questions I did starting out. To address this, I ran a live code demo of creating a new module that defined a bundle and field with code rather than using the GUI.  I’m proud to report we made it through the whole process without any technical glitches.  Going through the demo made me realize that maybe I do understand this stuff a little.  Lesson learned: if you really want to see if you’ve mastered something, do it in front of a group, without advanced notice or preparation or time to collect your thoughts.&lt;/p&gt;

&lt;h2 id=&quot;coming-soon---tripal-3-guides&quot;&gt;Coming Soon - Tripal 3 Guides&lt;/h2&gt;

&lt;p&gt;For those not in the know, Tripal is a Drupal module, and the &lt;a href=&quot;https://www.drupal.org/core/release-cycle-overview&quot;&gt;Drupal development lifecycle&lt;/a&gt; dictates that as new versions of Drupal get released, old ones enter long term support (LTS), security fixes only, and finally, deprecation.  Once security fixes are no longer released for a version, it’s only a matter of time before new exploits are developed and sites running old Drupal releases&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;https://www.drupal.org/files/release_schedule_caveat_0.jpg&quot; alt=&quot;drupal release lifecycle&quot; /&gt;
Don’t freak out!  The Drupal production life cycle means that as new versions get released, support for old versions drops.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tripal 3 is the first step in getting the community ready for the death of Drupal 7.  My hope is that I can share some what I’ve learned in the upgrade process, as a neophyte to Drupal, Chado, and Tripal.  Hopefully it will solidify what I’ve learned, and perhaps it will ease the transition of other sites.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>D3 part three: Nesting</title>
   <link href="http://bradfordcondon.com/2018/01/17/d3_part3_nesting/"/>
   <updated>2018-01-17T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2018/01/17/d3_part3_nesting</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/img/d3/d3_logo.png&quot; alt=&quot;D3 logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the &lt;a href=&quot;/2017/12/31/d3_part2_flipping/&quot;&gt;previous post&lt;/a&gt;, we learned about using scales to format our x and y axes, s well as our bar coloring.&lt;/p&gt;

&lt;p&gt;In this post I want to address how to &lt;strong&gt;nest&lt;/strong&gt; data with D3.  We will use the nest method to automatically sort our samples by property, and we’ll use multiple x-scales to group them along the x-axis.&lt;/p&gt;

&lt;!--more--&gt;

&lt;blockquote&gt;
  &lt;div id=&quot;plot_previous&quot;&gt;&lt;/div&gt;
  &lt;p&gt;Our graph at the end of the previous section.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;div id=&quot;plot_previous_new_data&quot;&gt;&lt;/div&gt;
  &lt;p&gt;This is the same plot-generating code, but we’ve added some more data to demonstrate grouping by property.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;nesting&quot;&gt;Nesting&lt;/h2&gt;

&lt;p&gt;A common desire when laying out a plot is to have data grouped along the x-axis by some property.  We can accomplish this by &lt;strong&gt;nesting&lt;/strong&gt; our data according to the property we would like to group by.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;57&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;five&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;six&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;seven&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;eight&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;nine&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;81&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ten&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;62&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;     
              &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;What does our nested output look like?  We can &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log&lt;/code&gt; the nested data to take a look.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;s2&quot;&gt;&quot;values&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;property&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// additional values removed for readability      &lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;key&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;values&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;property&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;property&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;57&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//...&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// additional values removed for readability&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, we now have an array of objects, where each object has two keys: a &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; that corresponds to the property name we nested by, and a &lt;code class=&quot;highlighter-rouge&quot;&gt;values&lt;/code&gt; that holds an array of all the data matching that property.&lt;/p&gt;

&lt;p&gt;Now that our data is nested, how do we place it appropriately on our graph?  This is where &lt;strong&gt;Ordinal Scale Bands&lt;/strong&gt; comes in.  Each property group will correspond to a single band, with individual samples distributed within it.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeRoundBands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;outerPadding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Our X-scale has two locations now: one for each of our two properties (“a” or “b”).  Our next scale needs to map to &lt;strong&gt;within one of these domains&lt;/strong&gt; based on the &lt;strong&gt;sample name&lt;/strong&gt;.  Most of the examples I could find online use a uniform set of samples within each band: (&lt;a href=&quot;https://bl.ocks.org/mbostock/3887051&quot;&gt;see here for an example&lt;/a&gt;).  For some data this will be the case: each property group is made of male/female, or the same set of time points.  In our case, we don’t know that the each sample won’t appear in each group.  In fact, we don’t even know if we have even property groups.  How can we deal with this?&lt;/p&gt;

&lt;p&gt;The solution I came up with is to build a scale index.  Each property group gets its &lt;strong&gt;own scale&lt;/strong&gt; in addition to the main scale.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;nx&quot;&gt;x2Scales&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//create a scale tracker&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//go through the data and generated an individual scale for each group.&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;propertyGroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;entriesInProperty&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;               &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;propertyGroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;propertyGroup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;entriesInProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;newScale&lt;/span&gt;      &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entriesInProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeRoundPoints&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeBand&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()])&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;x2Scales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;newScale&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now our &lt;code class=&quot;highlighter-rouge&quot;&gt;x2Scales&lt;/code&gt; object holds all the scales we need, index by the property group name.&lt;/p&gt;

&lt;h3 id=&quot;inputing-nested-data&quot;&gt;Inputing nested data&lt;/h3&gt;

&lt;p&gt;Something you may find confusing is how to access our nested data.  We input our nested data the same way we do our unnested data: using the &lt;code class=&quot;highlighter-rouge&quot;&gt;selectAll('.newGroupClass').data(data).enter().append()&lt;/code&gt; chain.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;barGroups&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.barGroup'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'transform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'translate('&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;',0)'&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Where before the &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt; object was the individual entry, now it’s actually an object with a &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;values&lt;/code&gt; index, with the entries we want to loop through under &lt;code class=&quot;highlighter-rouge&quot;&gt;values&lt;/code&gt;.  How do we access them?  By performing &lt;strong&gt;another&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;selectAll().data().enter().append()&lt;/code&gt; chain!  Rather than passing in a data object into the &lt;code class=&quot;highlighter-rouge&quot;&gt;.data()&lt;/code&gt; call, we pass in a function that retrieves the entry!&lt;/p&gt;

&lt;p&gt;Once the data is entered, it’s a matter of styling each bar in the bargroup: setting the height and fill, as before, but also transforming the x-value &lt;strong&gt;again&lt;/strong&gt; to compensate for its locatio&lt;/p&gt;

&lt;p&gt;Notice that we use the &lt;code class=&quot;highlighter-rouge&quot;&gt;barGroups&lt;/code&gt; variable we defined earlier, and then append &lt;code class=&quot;highlighter-rouge&quot;&gt;.bar&lt;/code&gt; elements.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;barGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;values&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fill'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colorScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'transform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x2Scales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//fetch the scale&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//shift this bar by its location in the scale&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'translate('&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;',0)'&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'height'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;div id=&quot;plot_three&quot;&gt;&lt;/div&gt;
  &lt;p&gt;Our plot now separates samples into groups.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;An interesting challenge is dealing with uneven groups.  With this approach, every group has the same bandwidth, and the spacing within groups are calculated for each one individually.  This can be result in tightly packed groups and dispersed groups in the same plot.  We can adjust the padding for each group based on the number of samples, but we’re still left with unused space in our plot for smaller groups.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Chado 1.4 at the 2018 GMOD hackathon</title>
   <link href="http://bradfordcondon.com/2018/01/12/gmod_day_1_2018/"/>
   <updated>2018-01-12T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2018/01/12/gmod_day_1_2018</id>
   <content type="html">&lt;p&gt;As a Tripal developer, one of the fun things I get to do is contribute not only to the Tripal project, but also other parts of GMOD, the &lt;a href=&quot;http://gmod.org/wiki/Main_Page&quot;&gt;Generic Model Organism Database Project&lt;/a&gt;.  I attended the January 10th 2018 GMOD hackathon at the &lt;a href=&quot;http://www.intlpag.org/2018/program/program-overview&quot;&gt;Plant and Animal Genome XXVI conference&lt;/a&gt; hoping to make a few small changes to Chado, the SQL database schema that &lt;a href=&quot;http://hardwoodgenomics.org/&quot;&gt;HardwoodGenomics&lt;/a&gt; uses with Tripal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/gmod/GMOD.png&quot; alt=&quot;GMOD&quot; /&gt;
&lt;img src=&quot;/assets/img/gmod/chado_logo.png&quot; alt=&quot;CHADO&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;It was a really great day and I learned a lot about both Chado and SQL working with Stephen Ficklin, Scott Cain, and Emily Grau (others were in attendance, this was the Chado team).&lt;/p&gt;

&lt;p&gt;I wanted to outline a bit of what we accomplished and what it means for the 1.4 Chado release!  Check out the current progress and issues on &lt;a href=&quot;https://github.com/GMOD/Chado&quot;&gt;the project GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;conquering-issues&quot;&gt;Conquering Issues&lt;/h2&gt;

&lt;p&gt;We actually had a backlog of issues tracked in a &lt;a href=&quot;https://docs.google.com/document/d/1t_Jb4XxUPtgGRSKtznsqvjTjmR4vpFHPQROMQ0OZK9A/&quot;&gt;google spreadsheet&lt;/a&gt;, so the first order of business was to convert those into Github issues to easier delegate and discuss them.  Thinking about all of these issues for modules I had never used was really helpful in understanding Chado holistically, rather than as a ruleset I stuck my data into for no good reason.&lt;/p&gt;

&lt;p&gt;Learn about pushing out a new version of Chado!  It’s a bunch of perl scripts that combine all the modules into a single SQL file.&lt;/p&gt;

&lt;h2 id=&quot;new-in-chado-v14&quot;&gt;New In Chado v1.4&lt;/h2&gt;

&lt;p&gt;This list may continue to grow, but I was able to make the following contributions at the meeting!&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;CVterm for prop values not just type&lt;/li&gt;
  &lt;li&gt;Update the MAGE module table descriptions to describe expression data from not just Microarray experiments but Next Generation Sequencing, and hopefully future methods as well.&lt;/li&gt;
  &lt;li&gt;Type_id added to analysis table&lt;/li&gt;
  &lt;li&gt;New linker tables biomaterial_project and stock_biomaterial&lt;/li&gt;
  &lt;li&gt;Reached out to the community regarding the eimage table and all proposed linker tables&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’d like to talk a little more about the Controlled Vocabulary term (CVterm) prop values issue, because I think it’s a great improvement to Chado, especially as Tripal 3 embraces associating all content with CVterms.&lt;/p&gt;

&lt;h2 id=&quot;cvterm-support-for-values&quot;&gt;CVterm Support for Values&lt;/h2&gt;

&lt;p&gt;We &lt;a href=&quot;https://github.com/GMOD/Chado/issues/26&quot;&gt;created a &lt;strong&gt;cvalue_id&lt;/strong&gt; column for all prop tables&lt;/a&gt;!  This sounds like a simple change but it’s awesome.  Right now, if you have a property set, what it does is describe an Chado record with a CVterm and a value.  That value is free text.  Now, you can choose to specify a cvalue_id (cvterm value id) instead of free text.&lt;/p&gt;

&lt;p&gt;What does this actually mean?&lt;/p&gt;

&lt;p&gt;Imagine I am entering Biological samples into my Chado database, and I want to assign a record property for the tissue the sample was collected from.  I would use the CVterm tissue, and a value that says what tissue: leaf, bud, flower, stem, root.  Only tissue gets a CVterm: the others are free text!  Now I can easily leverage, say, the &lt;a href=&quot;http://www.obofoundry.org/ontology/to.html&quot;&gt;Plant Trait Ontology&lt;/a&gt;, so I can use a Cvterm to set not just tissue by the tissue value!&lt;/p&gt;

&lt;p&gt;The Tripal Analysis Expression module currently allows you to assign biosample property types to CVterms.  With this change, I look forward to implementing property &lt;strong&gt;value&lt;/strong&gt; CVterm assignment as well.&lt;/p&gt;

&lt;p&gt;As we keep on working on v1.4, hopefully I can write more posts on Chado updates and what Tripal developers need to know.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>D3 part two: flipping the plot</title>
   <link href="http://bradfordcondon.com/2017/12/31/d3_part2_flipping/"/>
   <updated>2017-12-31T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2017/12/31/d3_part2_flipping</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/img/d3/d3_logo.png&quot; alt=&quot;D3 logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In our &lt;a href=&quot;/2017/12/22/plotting_with_d3/&quot;&gt;previous lesson&lt;/a&gt;, we created this rudimentary plot.&lt;/p&gt;

&lt;p&gt;D3 considers the &lt;strong&gt;upper left&lt;/strong&gt; corner of the SVG to be 0,0.  This means that the part of our code defining y values needs to be corrected.&lt;/p&gt;

&lt;p&gt;To correct our inverted plot, let’s introduce &lt;a href=&quot;https://github.com/d3/d3-3.x-api-reference/blob/master/Quantitative-Scales.md&quot;&gt;D3 scales&lt;/a&gt;.  As a quick reminder, we’re using the D3-3.x package: the latest version has slightly different scale function calls.&lt;/p&gt;

&lt;!--more--&gt;

&lt;blockquote&gt;
  &lt;div id=&quot;starting_plot&quot;&gt;&lt;/div&gt;
  &lt;p&gt;This is our plot from the previous lesson.  It’s upside-down!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;what-are-scales&quot;&gt;What Are Scales?&lt;/h2&gt;

&lt;p&gt;Scales are used to define how values will map to the plot.  Your plot might make use of several different scales.  There is mapping the x and y value of your data, for example.  You might also define a scale that &lt;strong&gt;colors&lt;/strong&gt; your datapoint based on a category.&lt;/p&gt;

&lt;p&gt;Let’s start with the y-axis, where we want to translate a numerical value to a place on the plot.  The simplest type of scale is a &lt;strong&gt;linear&lt;/strong&gt; scale, where the input values will be mapped to an output value via a linear function.&lt;/p&gt;

&lt;p&gt;For a linear scale, we need to understand the &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;domain()&lt;/code&gt;&lt;/strong&gt; and the &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;range()&lt;/code&gt;&lt;/strong&gt;.  Both domain and range take an array of numbers as their input.  The domain corresponds to the &lt;strong&gt;input values&lt;/strong&gt; for your plot.  For a continuous plot, you might set the domain to the minimum and maximum value in your dataset for the y-axis.  The range corresponds to the output coordinates in your SVG.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//note the range is inverted&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We need to set two things for each bar: the &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; attribute and the &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt;.  The &lt;code class=&quot;highlighter-rouge&quot;&gt;y&lt;/code&gt; value will simply be the returned yScale value.  The height must compensate for our inverted range: it should be the figure height minus the yScale value. I’ve also declared a &lt;code class=&quot;highlighter-rouge&quot;&gt;height&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;width&lt;/code&gt; value to keep track of the size of my plot. Using named constants makes it much easier to reuse code and keep track of things like borders and margins.&lt;/p&gt;

&lt;p&gt;The resulting code looks like this:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; 
&lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//note the range is inverted&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'transform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'translate('&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;',0)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;div id=&quot;plot_mk_1&quot;&gt;&lt;/div&gt;
  &lt;p&gt;Our y-axis scale accounts for the upside-down nature of D3.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our plot is now situated at the bottom of the SVG, where it belongs.&lt;/p&gt;

&lt;h3 id=&quot;x-axis&quot;&gt;x-axis&lt;/h3&gt;

&lt;p&gt;The x-axis can be a simple or complex affair.  Our original plot used the transform attribute to shift each &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt; element.  We can instead use an X scale. Let’s plot out each sample in a different location based on its name.  Again, we’ll define a &lt;code class=&quot;highlighter-rouge&quot;&gt;domain()&lt;/code&gt; and a &lt;code class=&quot;highlighter-rouge&quot;&gt;range()&lt;/code&gt;, but instead of a linear scale, we’ll map each name to a specific place on the map with an &lt;strong&gt;Ordinal&lt;/strong&gt; scale.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeRoundBands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;As you can see, the domain consists of the discrete values along the x-axis.  Setting the range for an ordinal scale is actually a bit more involved, and we’ll discuss options below.  For now, let’s also update our &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt; elements to use the x-axis to place each bar:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'transform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'translate('&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;',0)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fill'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;div id=&quot;plot_mk_2&quot;&gt;&lt;/div&gt;
  &lt;p&gt;Using x &amp;amp; y scales makes our plots easier to develop.  This default plot is a little spread out: let’s learn about padding to fix this.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;understanding-ordinal-scale-ranges&quot;&gt;Understanding Ordinal Scale Ranges&lt;/h3&gt;

&lt;p&gt;You might &lt;a href=&quot;https://github.com/d3/d3-3.x-api-reference/blob/master/Ordinal-Scales.md&quot;&gt;benefit from reading the API here&lt;/a&gt;.  You can use range, rangePoints, rangeRoundPoints, rangeBands, rangeRoundBands. You should typically use the &lt;em&gt;rounded&lt;/em&gt; flavor of each range: it will round the location of each group to an integer, preventing anti-aliasing artifacts at the cost of some extra padding.&lt;/p&gt;

&lt;p&gt;As for using points or bands, the difference is in how the spacing is calculated.  RangePoints will simply return evenly spaced points, whereas RangeBands will define a &lt;strong&gt;band&lt;/strong&gt; spaced out according to the padding argument.&lt;/p&gt;

&lt;h4 id=&quot;range-points&quot;&gt;Range Points&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/1f2b6fd134f82ce192002ec3944eccb09c748abe/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f3233303534312f3533383638392f34366438373131382d633139332d313165322d383361622d3230303864663763333661612e706e67&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;rangePoints()&lt;/code&gt; takes two arguments: the range, and the padding with the edge of the axis.  This padding is expressed as a &lt;em&gt;multiple of the space between points&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&quot;range-bands&quot;&gt;Range Bands&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://camo.githubusercontent.com/12675eaff20815f41bccd4d1c50643c2b531052e/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f3233303534312f3533383638382f34366332393863302d633139332d313165322d396137652d3135643961626366616239622e706e67&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Rather than splitting the axis into dispersed points, &lt;code class=&quot;highlighter-rouge&quot;&gt;rangeRoundBands()&lt;/code&gt; splits the axis into bands, with regular padding between each.&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;rangeRoundBands()&lt;/code&gt; accepts an array to define the range, as well as &lt;strong&gt;two&lt;/strong&gt; padding values: the outer padding (which is similar to the padding defined in rangePoints) and the step padding.  The step padding is the spacing between bands.  When no argument was supplied above, we used the defaults, which was equivalent to this:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;padding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//default padding values are 0&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;outerpadding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeRoundBands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;outerPadding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Confusing?  Let’s try adding some outer padding.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nx&quot;&gt;padding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;outerpadding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeRoundBands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;outerPadding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;blockquote&gt;
  &lt;div id=&quot;plot_mk_3&quot;&gt;&lt;/div&gt;
  &lt;p&gt;Adding some outer padding pushes our plot together&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We’ll come back to changing the band padding once we group our data.&lt;/p&gt;

&lt;h3 id=&quot;color-scale&quot;&gt;Color scale&lt;/h3&gt;

&lt;p&gt;Let’s say we want to color each of our bars by the category of the sample.  To do this, we’ll define an ordinal scale like our x-axis, except rather than setting the range output to an axis, we’ll set it to a &lt;em&gt;discrete set of colors&lt;/em&gt;.  Our output range will now be quite simple: an array of colors.   We can define the output color range manually, or we can use predefined palettes like those provided by the ColorBrewer package.  Keep in mind that &lt;em&gt;accessibility&lt;/em&gt; is an important consideration here: approximately one in twelve adult males (one in 200 females) is colorblind.  Packages like ColorBrewer are designed to be universally accessible.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colorScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;colorScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;colorScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Alternatively you can use scales with pre-defined color ranges.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colorScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;category10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;colorScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Next, simply call the scale when setting the &lt;code class=&quot;highlighter-rouge&quot;&gt;fill&lt;/code&gt; style.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fill'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colorScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 	&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;putting-it-back-together&quot;&gt;Putting it back together&lt;/h2&gt;

&lt;p&gt;Here is our new code utilizing x, y, and color scales.&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;axis&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/style&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;960&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;500&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/svg&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://d3js.org/d3.v3.min.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;57&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;svg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 
&lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;outerPadding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;padding&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ordinal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;three&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rangeRoundBands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;outerPadding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colorScale&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;category10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;colorScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
      
 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'transform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'translate('&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;',0)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fill'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colorScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'y'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yScale&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;div id=&quot;plot_final&quot;&gt;&lt;/div&gt;
  &lt;p&gt;The plot with x, y, and color scales.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;In the &lt;a href=&quot;/2018/01/17/d3_part3_nesting/&quot;&gt;next segment&lt;/a&gt;, we’ll look at using a multi-level x-axis to group our plot by category.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Plotting with D3 part 1</title>
   <link href="http://bradfordcondon.com/2017/12/22/plotting_with_d3/"/>
   <updated>2017-12-22T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2017/12/22/plotting_with_d3</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/img/d3/d3_logo.png&quot; alt=&quot;D3 logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://d3js.org/&quot;&gt;D3js (Data-Driven Documents)&lt;/a&gt; is a Javascript library that manipulates the DOM and is often used to build SVG plots.  I recently created an interactive plot for differential expression data as part of the &lt;a href=&quot;https://github.com/tripal/tripal_analysis_expression/&quot;&gt;Tripal Analysis Expression module&lt;/a&gt;. Because other Tripal modules use D3 v3.x, I was required to do the same (as opposed to v4, the latest version).  While the &lt;a href=&quot;https://github.com/d3/d3-3.x-api-reference/blob/master/API-Reference.md&quot;&gt;API is available&lt;/a&gt;, I’m the sort of person who learns best from tutorials and examples, and I struggled to find enough v3 examples.&lt;/p&gt;

&lt;!--more--&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/d3/taexp_plot.png&quot; alt=&quot;Tripal Analysis Expression plot&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;The Tripal Analysis Expression module groups and colors data based on user selection. Each group can be dragged and rearranged.  By the end of this series, you’ll be able to create higher order plots like this in D3.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;With that in mind, I am writing this basic D3js v3 tutorial. This is installment one, where we create a very basic and unimpressive plot using just &lt;code class=&quot;highlighter-rouge&quot;&gt;data()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;enter()&lt;/code&gt;.  I recommend some starting resources below, but this tutorial is aimed at beginners.&lt;/p&gt;

&lt;p&gt;The code for this lesson is available as a &lt;a href=&quot;https://gist.github.com/bradfordcondon/317fe6b4edd66ba3904ed2248f8b6134&quot;&gt;GitHub gist&lt;/a&gt;, or visualized with &lt;a href=&quot;https://bl.ocks.org/bradfordcondon/317fe6b4edd66ba3904ed2248f8b6134&quot;&gt;Bl.ocks&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;background-reading&quot;&gt;Background reading&lt;/h3&gt;

&lt;p&gt;Before we get started, you should understand the basics of&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.javascript.com/&quot;&gt;Javascript&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jquery.com/&quot;&gt;jQuery&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;https://www.w3schools.com/js/js_htmldom.asp&quot;&gt;DOM model&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/graphics/svg_intro.asp&quot;&gt;SVG&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A browser developer console such as &lt;a href=&quot;https://developer.chrome.com/devtools&quot;&gt;Google Chrome&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’d also recommend looking over the &lt;a href=&quot;https://d3js.org/&quot;&gt;D3 website&lt;/a&gt; and reading the introduction/gaining inspiration from the plots.&lt;/p&gt;

&lt;h3 id=&quot;why-d3&quot;&gt;Why D3?&lt;/h3&gt;

&lt;p&gt;There are other plotting solutions for javascript.  I like D3 because it strikes a nice balance between ease of use and flexibility.  It might be easier to get results plotting something with, for example, &lt;a href=&quot;https://plot.ly/javascript/&quot;&gt;plot.ly&lt;/a&gt; (which is built on top of D3), but the higher layer of abstraction leaves you with fewer options.&lt;/p&gt;

&lt;h2 id=&quot;d3-the-basics&quot;&gt;D3: the basics&lt;/h2&gt;

&lt;p&gt;I recommended reading about jQuery in the introduction because they share the same fundamental goal: select objects in the DOM and manipulate them.  jQuery is much broader in scope: it’s a general purpose javascript library.  D3’s twist is revealed in it’s name: Data-Driven Documents.  The assumption is that you’ve got data (represented in an array) and you want to &lt;em&gt;apply&lt;/em&gt; that data to the DOM.  Typically, that means visualize it in some way!&lt;/p&gt;

&lt;h3 id=&quot;show-me-the-data&quot;&gt;Show me the data&lt;/h3&gt;

&lt;p&gt;How does D3 communicate your data to the DOM?  Using the &lt;code class=&quot;highlighter-rouge&quot;&gt;data()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;enter()&lt;/code&gt; methods!&lt;/p&gt;

&lt;p&gt;Let’s make a simple example.  You can follow along by pasting the code into text editor and opening the file in a web browser.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DOCTYPE&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;axis&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;domain&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/style&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;960&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;500&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/svg&amp;gt;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://d3js.org/d3.v3.min.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;one&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
              &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;two&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;four&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;57&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
  
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;select&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;svg&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    
 &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'transform'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'translate('&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;',0)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
  &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'rect'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'fill'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'width'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Below is the resulting plot.&lt;/p&gt;

&lt;div id=&quot;output_plot&quot;&gt;&lt;/div&gt;

&lt;p&gt;There’s a couple of problems here, but let’s see what we are trying to do.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;We define a data array consisting of objects with some simple key =&amp;gt; value pairs.  For now we just use the &lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; property.&lt;/li&gt;
  &lt;li&gt;We define and select the &lt;code class=&quot;highlighter-rouge&quot;&gt;svg&lt;/code&gt; element which holds our graphics.&lt;/li&gt;
  &lt;li&gt;We enter our data into the &lt;code class=&quot;highlighter-rouge&quot;&gt;svg&lt;/code&gt; using the &lt;code class=&quot;highlighter-rouge&quot;&gt;data()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;enter()&lt;/code&gt; calls.&lt;/li&gt;
  &lt;li&gt;We append &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt; elements to each &lt;code class=&quot;highlighter-rouge&quot;&gt;.bar&lt;/code&gt; object.&lt;/li&gt;
  &lt;li&gt;We transform each &lt;code class=&quot;highlighter-rouge&quot;&gt;g&lt;/code&gt; object by translating it, shifting it along the x-axis.&lt;/li&gt;
  &lt;li&gt;We append a &lt;code class=&quot;highlighter-rouge&quot;&gt;rect&lt;/code&gt; element.&lt;/li&gt;
  &lt;li&gt;We transform the  &lt;code class=&quot;highlighter-rouge&quot;&gt;rect&lt;/code&gt; element based on the data.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pay special attention to &lt;code class=&quot;highlighter-rouge&quot;&gt;function (d, i) {//code}&lt;/code&gt;.  Because we’ve entered our data, we can define a function that takes the &lt;em&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;th&lt;/em&gt; element of the &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; array as &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt; as an input, and outputs what we want.&lt;/p&gt;

&lt;h3 id=&quot;chaining&quot;&gt;Chaining&lt;/h3&gt;
&lt;p&gt;D3 allows for &lt;em&gt;chaining&lt;/em&gt; method calls together, much like jQuery.  In the above example, we took advantage of chaining several times.  For example…&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What’s important to understand is that the chain is executed in order, and each link in the chain passes down its selection to the next member.  This means that subsequent calls after &lt;code class=&quot;highlighter-rouge&quot;&gt;.append('g')&lt;/code&gt; will &lt;em&gt;affect that g element&lt;/em&gt;.  On the other hand, setting the &lt;code class=&quot;highlighter-rouge&quot;&gt;style&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;attr&lt;/code&gt; of an element will pass on the reference element, meaning you can execute several &lt;code class=&quot;highlighter-rouge&quot;&gt;style&lt;/code&gt; calls in a row on the same element (as we do above)&lt;/p&gt;

&lt;p&gt;If chaining confuses you, the above code could be written without chaining, as&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selectAll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'.bar'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
 &lt;span class=&quot;nx&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'g'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;entering-data-with--selectalldataenterappend&quot;&gt;Entering data with  &lt;code class=&quot;highlighter-rouge&quot;&gt;.selectAll().data().enter().append()&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;This chain will look very familiar to you the more you use D3.  The &lt;code class=&quot;highlighter-rouge&quot;&gt;data&lt;/code&gt; method requires a selection to bind data to.  It might be confusing that we select all &lt;code class=&quot;highlighter-rouge&quot;&gt;.bar&lt;/code&gt; elements in the above example: what &lt;code class=&quot;highlighter-rouge&quot;&gt;.bar&lt;/code&gt;?  They &lt;strong&gt;dont exist yet!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That’s where &lt;code class=&quot;highlighter-rouge&quot;&gt;.enter()&lt;/code&gt; comes in.  It compares the data in &lt;code class=&quot;highlighter-rouge&quot;&gt;data()&lt;/code&gt; and the selection, and creates new placeholder elements for the entered data.&lt;/p&gt;

&lt;h3 id=&quot;looping-through-data&quot;&gt;Looping through data&lt;/h3&gt;

&lt;p&gt;You may be confused how each element gets “told” what its height and x-position should be.  The answer lies in how D3 has created an element for each element in our data array.&lt;/p&gt;

&lt;p&gt;Consider how we style the height in the above code:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Rather than returning a fixed height, we use a &lt;strong&gt;function&lt;/strong&gt; to dynamically return the height based on &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;.  &lt;code class=&quot;highlighter-rouge&quot;&gt;d&lt;/code&gt; is the individual data entry, and &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; is its key.  In our example code, when &lt;code class=&quot;highlighter-rouge&quot;&gt;i = 2&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;d = {name: &quot;two&quot;, property: &quot;a&quot;, value: 50}&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Because our data structure has a &lt;code class=&quot;highlighter-rouge&quot;&gt;value&lt;/code&gt; key, simply returning &lt;code class=&quot;highlighter-rouge&quot;&gt;d.value&lt;/code&gt; will set the height of the bar based on the value of that element!  If you are getting confused, I recommend including a &lt;code class=&quot;highlighter-rouge&quot;&gt;console.log(d)&lt;/code&gt; in your function.  You’ll see in your console that each data object in the array is returned one by one.&lt;/p&gt;

&lt;h2 id=&quot;building-a-better-plot&quot;&gt;Building a better plot&lt;/h2&gt;

&lt;p&gt;This is clearly not an award winning plot.  We have no axes, scaling, grouping, labels, legends, or titles.  The colors are uniform.  Oh, and it’s upside down (a surprisingly persistent problem with D3!)&lt;/p&gt;

&lt;p&gt;We’ll cover the rest in later lessons.  But for now, try to define your own dataset and bind it to the DOM using &lt;code class=&quot;highlighter-rouge&quot;&gt;data()&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;enter()&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Continue reading with &lt;a href=&quot;/2017/12/31/d3_part2_flipping/&quot;&gt;part two: implementing scales&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Did you enjoy this article?  Looking for more information?  Please feel free to contact me on twitter @bradfordcondon&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Lessons From Planning My First Software Carpentry Workshop</title>
   <link href="http://bradfordcondon.com/2017/12/18/12-18-17_swc_lessons/"/>
   <updated>2017-12-18T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2017/12/18/12-18-17_swc_lessons</id>
   <content type="html">&lt;h1 id=&quot;introduction&quot;&gt;introduction&lt;/h1&gt;

&lt;p&gt;I hosted my first Software Carpentry workshop on December 18th and 19th 2017 in Knoxville Tennessee with my co-instructors Meg Staton and Drew Steen.&lt;/p&gt;

&lt;p&gt;I tried to follow the general recommendations and most things worked out great.  Here are some lessons learned.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/carpentry/s_carp.png&quot; alt=&quot;The Software Carpentry logo&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;preparation&quot;&gt;Preparation&lt;/h2&gt;

&lt;h3 id=&quot;consider-digital-and-print-flyers&quot;&gt;Consider digital and print flyers&lt;/h3&gt;

&lt;p&gt;I liked the inclusion of “tear off” tags for our flyer workshop.  When I saw it on this digital display, I had to laugh.  Next time we’ll distribute &lt;em&gt;print&lt;/em&gt; and &lt;em&gt;digital&lt;/em&gt; versions of the flyer.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/carpentry/swc_flyer_tearoff.jPG&quot; alt=&quot;Our flyer&quot; /&gt;
Our flyer had tear offs which sounds great until you see it on one of those digital bulletin board displays around campus.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;charging-a-registration-fee&quot;&gt;Charging a registration fee&lt;/h3&gt;

&lt;p&gt;The Software Carpentry recommends charging a nominal registration fee to reduce no-shows.  Unfortunately this added a layer of administrative red tape for us, so we kept registration free.  How did that work out for us?&lt;/p&gt;

&lt;p&gt;Well, we sold out for 35 tickets within 24 hours, with a waitlist of 25.  I emailed out a week before and 72 hours before asking for people to cancel if they could not make it.  This netted me 11 cancellations, but the workshop started on a Monday!  This meant that most waitlisters were notified over the weekend and did not end up claiming their tickets.  This is in addition to the five students who no-showed without notice.&lt;/p&gt;

&lt;p&gt;So ultimately we ended up with 31 out of 35 seats filled, which isn’t so bad.&lt;/p&gt;

&lt;h3 id=&quot;using-eventbrite&quot;&gt;Using Eventbrite&lt;/h3&gt;

&lt;p&gt;Because our workshop was free, there was no fee for using Eventbrite.  Eventbrite provides the basic functions necessary to manage the event: you can download an attendee list including email, or you can contact attendees via Eventbrite.&lt;/p&gt;

&lt;p&gt;Eventbrite also has a waitlist functionality.  After the tickets sold out, I enabled the waitlist and people could join the waitlist, managed entirely by Eventbrite.  When I received cancellations, I just had to “release the tickets” and the waitlister has a set period of time (i set it to 24 hours) to respond and claim their ticket.&lt;/p&gt;

&lt;p&gt;Eventbrite also has a widget that lets participants purchase tickets right on your course website.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/carpentry/eventbrite_widget.png&quot; alt=&quot;The Eventbrite widget on our software carpentry website&quot; /&gt;
The Eventbrite widget will allow your users to purchase tickets right on your website (or in this case, join the waitlist).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;All together this is great.  Managing an attendee list and waitlist via emails is a deceptively time consuming task.  Even though its quite easy, not getting barraged with emails (almost 70 emails with people registering alone!) is a great perk.  I would use Eventbrite again, at least for free events.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/carpentry/eventbrite.png&quot; alt=&quot;The Eventbrite page&quot; /&gt;
The Eventbrite event management page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;preparing-your-lectures&quot;&gt;Preparing Your Lectures&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Pre-generate your ether pad with questions.  I am sharing my pre-generated etherpads: Unix, R, Git&lt;/li&gt;
  &lt;li&gt;Create slides for the images in the material.&lt;/li&gt;
  &lt;li&gt;Look at the github repo for the lessons and know the issues and alternatives.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The carpentry workshops are live code only without slides.  The thing is, graphics are great for mental models, and slides can help with instructor pacing a lot better than the free-text of the lesson plans.&lt;/p&gt;

&lt;p&gt;The open-source nature of Software Carpentry materials means that people have all sorts of suggestions for how to do things differently.  Some lessons may have variants available online that you will prefer.  The Git lesson, for example, is command-line heavy.&lt;/p&gt;

&lt;h2 id=&quot;day-of-suggestions&quot;&gt;Day of suggestions&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Share links liberally.  In the chatbox of etherpad, on the website, within each etherpad.  Link to data downloads, the etherpads, the course website.&lt;/li&gt;
  &lt;li&gt;Encourage your students to share a bit about themselves and why they are attending.  If the workshop is too big to do this verbally, do it digitally.  Knowing what your students expect to learn can help you trim topics if (when) you run out of time.&lt;/li&gt;
  &lt;li&gt;Plan on running out of time!  The Software Carpentry workshops have time estimates but they are beyond optimistic.&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Upcoming Software Carpentry Workshop: December 18th &amp; 19th</title>
   <link href="http://bradfordcondon.com/2017/11/27/swc_workshop_announce_december_2017/"/>
   <updated>2017-11-27T00:00:00-05:00</updated>
   <id>http://bradfordcondon.com/2017/11/27/swc_workshop_announce_december_2017</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/img/carpentry/s_carp.png&quot; alt=&quot;Software Carpentry&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am happy to announce I will be instructing a Software Carpentry Workshop at the University of Tennessee Knoxville.  The workshop will be taught by myself, Meg Staton, and Drew Steen on December 18th and 19th, 2017 in 702 Strong Hall.&lt;/p&gt;

&lt;p&gt;This workshop will cover the basics of:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Unix Shell&lt;/li&gt;
  &lt;li&gt;Git&lt;/li&gt;
  &lt;li&gt;R&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please visit the &lt;a href=&quot;https://statonlab.github.io/2017-12-18-carpentry-workshop/&quot;&gt;workshop website for more information and registration links&lt;/a&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Software Carpentry TakeAways</title>
   <link href="http://bradfordcondon.com/2017/10/05/carpentry_lessons/"/>
   <updated>2017-10-05T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/10/05/carpentry_lessons</id>
   <content type="html">&lt;p&gt;In a &lt;a href=&quot;/2017/09/25/Software_Data_Carpentry/&quot;&gt;previous blog post&lt;/a&gt;, I announced my excitement for becoming a certified Software and Data Carpentry instructor.  As I complete my checkout process, I also wanted to recap the most important points from the training.  &lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vQDtbUsYpFS5-I_66uKSixgSKQSSWrQSlmkZ9HdMMiKY8U449nyFwDkzQ14WAEDYf4xiFaZRV70xX9A/pub?start=false&amp;amp;loop=false&amp;amp;delayms=3000&quot;&gt;A lab meeting presentation of this recap cis available on google slides here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Looking forward to teaching my first workshop in the next few months!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/carpentry/d_carp.png&quot; alt=&quot;Data Carpentry&quot; /&gt; &lt;img src=&quot;/assets/img/carpentry/s_carp.png&quot; alt=&quot;Software Carpentry&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;!--more--&gt;&lt;/p&gt;

&lt;h1 id=&quot;teaching-techniques&quot;&gt;Teaching Techniques&lt;/h1&gt;

&lt;p&gt;The current goal in higher education is to create an &lt;a href=&quot;https://teachingcommons.stanford.edu/resources/learning-resources/promoting-active-learning&quot;&gt;active learning environment&lt;/a&gt; in the classroom.  This is not new, and in fact I spent 2 years working with the &lt;a href=&quot;https://www.cte.cornell.edu/&quot;&gt;Cornell Center for Teaching Excellence&lt;/a&gt; designing workshops using this philosophy.  Often, higher education utilizes passive learning environments.  The professor is the expert, and they lecture for 50 minutes alongside powerpoint slides.  This format is easy to teach, it matches the traditional academic presentation style, and its fairly easy to prepare because the instructor focuses on the question: &lt;strong&gt;“What material should I cover?”&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;learning-objectives&quot;&gt;Learning Objectives&lt;/h2&gt;
&lt;p&gt;A wonderful outcome of active learning is that the instructor is encourage to instead ask &lt;strong&gt;“What should the outcome of this lesson be?”&lt;/strong&gt;  These outcomes are called &lt;a href=&quot;https://www.cmu.edu/teaching/designteach/design/learningobjectives.html&quot;&gt;learning objectives&lt;/a&gt;, and without them, you are teaching just to cover material.  Learning Objectives describe what your students will be able to &lt;strong&gt;do&lt;/strong&gt; after finishing the lesson.  Learning objectives can be foundational (recite this fact, describe this model) or higher order (choose and apply the correct model to solve a real world problem).&lt;/p&gt;

&lt;p&gt;It should be no surprise that Software and Data Carpentry workshops clearly state their learning objectives at the start of each lesson: communicating these to your students is very helpful!&lt;/p&gt;

&lt;h2 id=&quot;the-human-brain&quot;&gt;The Human Brain&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/c/ca/Memory_module_DDRAM_20-03-2006.jpg&quot; alt=&quot;RAM&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The human brain has limited space for short term memory, not unlike Random Access Memory (RAM) in a computer.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Software and Data Carpentry subscribes to a model of working memory with limited cognitive load.  Your working memory is fast and effective, but small.  To test the limits of your working memory, you can take &lt;a href=&quot;https://cat.xula.edu/thinker/memory/working/serial&quot;&gt;this test&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Most people can remember 5-7 things in the above exercise, give or take.  Keep in mind that for true novices, every piece of a single concept will constitute one “thing”!  Picking one higher order learning objective per lesson, and including the foundational skills required to achieve it, will almost always meet, or exceed, this limit.&lt;/p&gt;

&lt;h2 id=&quot;evaluations&quot;&gt;Evaluations&lt;/h2&gt;
&lt;p&gt;When we think of school, we think tests.  Tests are a great form of evaluation, but they should just be the tip of the iceberg.  Sprinkling a lesson with evaluations has many benefits, such as :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Gives students a chance to “handle” the content, improving retention&lt;/li&gt;
  &lt;li&gt;Corrects student misconceptions&lt;/li&gt;
  &lt;li&gt;Tests for gaps in lesson plan&lt;/li&gt;
  &lt;li&gt;Slows down instruction, giving students time to process and &lt;strong&gt;retain&lt;/strong&gt; information.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;activities&quot;&gt;Activities&lt;/h2&gt;

&lt;p&gt;Prudent use of in-class activities will allow you to &lt;em&gt;evaluate your students’ learning&lt;/em&gt; while also &lt;em&gt;working to overcome the limits of short term memory&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In-class activities include all of the following examples:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Show of Hands&lt;/li&gt;
  &lt;li&gt;Multiple Choice&lt;/li&gt;
  &lt;li&gt;Short answer reflection&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.readingrockets.org/strategies/think-pair-share&quot;&gt;Think-Pair-Share&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;technology&quot;&gt;Technology&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://etherpad.org/img/screenshot.png&quot; alt=&quot;etherpad&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;etherpad is an excellent group notepad.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The most interesting portion of this training for me was the use of technology.  Active learning is so difficult in an on-line session: how do you stop for evaluations or encourage students to interact?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The video conference software Zoom allowed &lt;strong&gt;breakout rooms&lt;/strong&gt; where we were paired off in small groups to discuss questions and present it back to the group.&lt;/li&gt;
  &lt;li&gt;The collaborative note program &lt;strong&gt;Ether Pad&lt;/strong&gt; served as the roadmap for the lesson.  The software has a chatbox, and colored text for tracking who writes what.  The frequent activities had us type our responses into Ether Pad where we could comment on one another’s answers.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I was also delighted that Workshops use a Jekyll template and github hosting for the website.  This site is powered by the same tools!&lt;/p&gt;

&lt;h1 id=&quot;conclusions&quot;&gt;Conclusions&lt;/h1&gt;

&lt;p&gt;There were many other topics covered in the workshop, but these were my favorite.  If you are interested in learning more, please visit the &lt;a href=&quot;https://software-carpentry.org/&quot;&gt;Software Carpentry&lt;/a&gt; and &lt;a href=&quot;http://www.datacarpentry.org/&quot;&gt;Data Carpentry&lt;/a&gt; websites.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Software and Data Carpentry</title>
   <link href="http://bradfordcondon.com/2017/09/25/Software_Data_Carpentry/"/>
   <updated>2017-09-25T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/09/25/Software_Data_Carpentry</id>
   <content type="html">&lt;p&gt;This week(September 25th &amp;amp; 26th 2017), I will be certified as a Software and Data Carpentry instructor.  As of 2017-06-26, there were 968 instructors.  Am I lucky number 1,000?  Probably not.  Still, exciting.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/carpentry/d_carp.png&quot; alt=&quot;Data Carpentry&quot; /&gt; &lt;img src=&quot;/assets/img/carpentry/s_carp.png&quot; alt=&quot;Software Carpentry&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;a href=&quot;https://software-carpentry.org/lessons/&quot;&gt;Software Carpentry&lt;/a&gt; and its sister organisation &lt;a href=&quot;http://www.datacarpentry.org/&quot;&gt;Data Carpentry&lt;/a&gt; are really impressive.  All of their lessons are on GitHub, so you can access them for free, contribute, or see older versions.  If you are an instructor, you’d be crazy not to at least look at the lessons.  You can use them in your own class, for free, under a &lt;a href=&quot;https://software-carpentry.org/license/&quot;&gt;Creative Commons - Attribution License&lt;/a&gt;!  Not only that but there are video recordings of the lessons available online.&lt;/p&gt;

&lt;p&gt;Looking forward to the instructor workshop!  I hope to post some thoughts and learning outcomes here next week.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>TreeSnap release press</title>
   <link href="http://bradfordcondon.com/2017/07/20/treesnapReleasePress/"/>
   <updated>2017-07-20T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/07/20/treesnapReleasePress</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/img/TreeSnap/TreesnapFullLogo_x3.png&quot; alt=&quot;TreeSnap&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Early this year, I joined Meg Staton’s group at the University of Tennessee as a mobile and web developer.  My major project since then has been designing, coding, and releasing the mobile citizen science app TreeSnap.  I think it’s a fantastic project, and I’d love it if you &lt;a href=&quot;https://treesnap.org&quot;&gt;visited the app’s website&lt;/a&gt; to learn more.&lt;/p&gt;

&lt;p&gt;&lt;!--more--&gt;&lt;/p&gt;

&lt;h1 id=&quot;what-is-treesnap&quot;&gt;What is TreeSnap?&lt;/h1&gt;

&lt;p&gt;In short, the app aims to connect tree lovers and scientists by asking citizens to report “survivor” tree species threatened by pests and disease.  Users answer a few question, snap a few pictures, and the app sends the information, along with GPS coordinates, to &lt;a href=&quot;https://treesnap.org/map&quot;&gt;the TreeSnap server&lt;/a&gt;.  There, scientists who study disease resistance or run tree breeding programs can use the collected data for their research, or follow up and collect tissue/pollen/seed for their research!&lt;/p&gt;

&lt;h1 id=&quot;treesnap-in-the-news&quot;&gt;TreeSnap in the news&lt;/h1&gt;

&lt;p&gt;I’m grateful to Carol Spence for interviewing Dr. Ellen Crocker (the extension specialist on TreeSnap) and myself about TreeSnap.  The original article was published in &lt;a href=&quot;http://news.ca.uky.edu/article/new-tree-app-builds-partnerships-between-citizens-and-scientists#.WW-idVr9wng.twitter&quot;&gt;UK Ag News&lt;/a&gt; on July 18th 2017.&lt;/p&gt;

&lt;p&gt;The story has since appeared in:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://uknow.uky.edu/research/new-tree-app-builds-partnerships-between-citizens-and-scientists?utm_medium=social&quot;&gt;UKNOW&lt;/a&gt;July 20th 2017&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.eforester.org/Main/News/New_Tree_App_Builds_Partnerships_Between_Citizens_and_Scientists.aspx&quot;&gt;Eforester&lt;/a&gt; July 22nd 2017&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://blog.extension.uga.edu/climate/2017/07/new-tree-app-builds-partnerships-between-citizens-and-scientists/&quot;&gt;UGA extension&lt;/a&gt; July 22 2017&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://protecttnforests.org/&quot;&gt;protect TN forests&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;blog-posts-mentioning-treesnap&quot;&gt;Blog posts mentioning TreeSnap&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.techwell.com/techwell-insights/2017/08/citizen-scientist-project-saving-trees-apps&quot;&gt;Techwell, Pamela Rentz&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Understanding Discovar output</title>
   <link href="http://bradfordcondon.com/2017/07/15/discovarOutput/"/>
   <updated>2017-07-15T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/07/15/discovarOutput</id>
   <content type="html">&lt;p&gt;This post is part 10 of a series on bioinformatics file formats, written for the 2017 UK-KBRIN Essentials of Next 
Generation Sequencing Workshop at the University of Kentucky.&lt;/p&gt;

&lt;h2 id=&quot;discovar&quot;&gt;Discovar&lt;/h2&gt;

&lt;p&gt;DISCOVAR is a new genome assembler and variant caller developed by the broad institute. As of this writing,it takes as input Illumina reads of length 250 or longer produced on MiSeq or HiSeq 2500.  To learn more, read the entire DISCOVAR manual &lt;a href=&quot;https://docs.google.com/document/d/1U_o-Z0dJ0QKiJn86AV2o_YHiFzUtW9c57eh3tYjkINc/edit&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-assembly-output&quot;&gt;The assembly output&lt;/h3&gt;

&lt;p&gt;The final output assembly will take the form of &lt;code class=&quot;highlighter-rouge&quot;&gt;OUT_HEAD.final.*&lt;/code&gt;, where &lt;code class=&quot;highlighter-rouge&quot;&gt;OUT_HEAD&lt;/code&gt; is set by the user.  Below let’s assume we’ve set &lt;code class=&quot;highlighter-rouge&quot;&gt;OUT_HEAD&lt;/code&gt; to out.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h4 id=&quot;intermediate-assemblies&quot;&gt;Intermediate assemblies&lt;/h4&gt;

&lt;p&gt;DISCOVAR also generates a number of intermediate assembly files, named &lt;code class=&quot;highlighter-rouge&quot;&gt;out.n.*&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The final assembly is a graph, the edges of which are contained in two fasta files: &lt;code class=&quot;highlighter-rouge&quot;&gt;out.final.fasta0&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;out.final.fasta&lt;/code&gt;.  &lt;code class=&quot;highlighter-rouge&quot;&gt;fasta0&lt;/code&gt; contains the non-overlapping edges, whereas &lt;code class=&quot;highlighter-rouge&quot;&gt;out.final.fasta&lt;/code&gt; extends the edges to overlap by K-1 bases.&lt;/p&gt;

&lt;p&gt;Which you choose to use will depend on your specific needs.  In either case, the FASTA header generated takes the form of:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;edge-name	start-node:end-node k-size	edge-size&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;edge_10 1:100 K=80 bases=330
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Note that the &lt;code class=&quot;highlighter-rouge&quot;&gt;fasta0&lt;/code&gt; file does not have a k parameter and is omitted.&lt;/p&gt;

&lt;h3 id=&quot;visualizing-the-output-graph&quot;&gt;Visualizing the output graph&lt;/h3&gt;

&lt;p&gt;The assembly graph can be visualized using GraphViz using the below commands:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dot -Tps -o assembly.final.ps assembly.final.dot
gv assembly.final.ps
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The resulting visualization will show each edge with its edgeID color coded by length.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/discovar/discovar_graph.png&quot; alt=&quot;Edge illustration&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;Example visualization of a DISCOVAR edge, &lt;a href=&quot;https://docs.google.com/document/d/1U_o-Z0dJ0QKiJn86AV2o_YHiFzUtW9c57eh3tYjkINc/edit&quot;&gt;from the DISCOVAR manual&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

</content>
 </entry>
 
 <entry>
   <title>Examining bowtie output</title>
   <link href="http://bradfordcondon.com/2017/07/13/bowtie2/"/>
   <updated>2017-07-13T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/07/13/bowtie2</id>
   <content type="html">&lt;p&gt;This post is part 8 of a series on bioinformatics file formats, written for the 2017 UK-KBRIN Essentials of Next Generation Sequencing Workshop at the University of Kentucky.&lt;/p&gt;

&lt;h3 id=&quot;bowtie-output&quot;&gt;Bowtie output&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://bowtie-bio.sourceforge.net/bowtie2/manual.shtml&quot;&gt;The Bowtie 2 manual is available here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bowtie 2 outputs SAM format.  A detailed explanation of the SAM format output is available &lt;a href=&quot;http://samtools.sourceforge.net/SAM1.pdf&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;example-output&quot;&gt;Example output&lt;/h3&gt;
&lt;p&gt;This example output is from &lt;a href=&quot;http://genome.sph.umich.edu/wiki/SAM&quot;&gt;the University of Michigan Center for Statistical Genomics&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;header&quot;&gt;Header&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@HD	VN:1.0	SO:coordinate
@SQ	SN:1	LN:249250621	AS:NCBI37	UR:file:/data/local/ref/GATK/human_g1k_v37.fasta	M5:1b22b98cdeb4a9304cb5d48026a85128
@SQ	SN:2	LN:243199373	AS:NCBI37	UR:file:/data/local/ref/GATK/human_g1k_v37.fasta	M5:a0d9851da00400dec1098a9255ac712e
@SQ	SN:3	LN:198022430	AS:NCBI37	UR:file:/data/local/ref/GATK/human_g1k_v37.fasta	M5:fdfd811849cc2fadebc929bb925902e5
@RG	ID:UM0098:1	PL:ILLUMINA	PU:HWUSI-EAS1707-615LHAAXX-L001	LB:80	DT:2010-05-05T20:00:00-0400	SM:SD37743	CN:UMCORE
@RG	ID:UM0098:2	PL:ILLUMINA	PU:HWUSI-EAS1707-615LHAAXX-L002	LB:80	DT:2010-05-05T20:00:00-0400	SM:SD37743	CN:UMCORE
@PG	ID:bwa	VN:0.5.4
@PG	ID:GATK TableRecalibration	VN:1.0.3471	CL:Covariates=[ReadGroupCovariate, QualityScoreCovariate, CycleCovariate, DinucCovariate, TileCovariate], default_read_group=null, default_platform=null, force_read_group=null, force_platform=null, solid_recal_mode=SET_Q_ZERO, window_size_nqs=5, homopolymer_nback=7, exception_if_no_tile=false, ignore_nocall_colorspace=false, pQ=5, maxQ=40, smoothing=1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;body&quot;&gt;Body&lt;/h4&gt;

&lt;p&gt;The below example shows four alignments in SAM format.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1:497:R:-272+13M17D24M	113	1	497	37	37M	15	100338662	0	CGGGTCTGACCTGAGGAGAACTGTGCTCCGCCTTCAG	0;==-==9;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;=&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;=&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;	XT:A:U	NM:i:0	SM:i:37	AM:i:0	X0:i:1	X1:i:0	XM:i:0	XO:i:0	XG:i:0	MD:Z:37
19:20389:F:275+18M2D19M	99	1	17644	0	37M	=	17919	314	TATGACTGCTAATAATACCTACACATGTTAGAACCAT	&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&amp;gt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;4::&amp;gt;&amp;gt;:&amp;lt;9	RG:Z:UM0098:1	XT:A:R	NM:i:0	SM:i:0	AM:i:0	X0:i:4	X1:i:0	XM:i:0	XO:i:0	XG:i:0	MD:Z:37
19:20389:F:275+18M2D19M	147	1	17919	0	18M2D19M	=	17644	-314	GTAGTACCAACTGTAAGTCCTTATCTTCATACTTTGT	;44999;499&amp;lt;8&amp;lt;8&amp;lt;&amp;lt;&amp;lt;8&amp;lt;&amp;lt;&amp;gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;gt;&amp;lt;7&amp;lt;;&amp;lt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&amp;lt;&amp;lt;	XT:A:R	NM:i:2	SM:i:0	AM:i:0	X0:i:4	X1:i:0	XM:i:0	XO:i:1	XG:i:2	MD:Z:18^CA19
9:21597+10M2I25M:R:-209	83	1	21678	0	8M2I27M	=	21469	-244	CACCACATCACATATACCAAGCCTGGCTGTGTCTTCT	&amp;lt;;9&amp;lt;&amp;lt;5&amp;gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;gt;&amp;lt;&amp;lt;&amp;lt;&amp;gt;&amp;gt;&amp;lt;&amp;lt;&amp;gt;&amp;lt;&amp;gt;&amp;gt;&amp;lt;9&amp;gt;&amp;gt;&amp;lt;&amp;gt;&amp;gt;&amp;gt;9&amp;gt;&amp;gt;&amp;gt;&amp;lt;&amp;gt;	XT:A:R	NM:i:2	SM:i:0	AM:i:0	X0:i:5	X1:i:0	XM:i:0	XO:i:1	XG:i:2	MD:Z:35
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let’s look at just the first alignment.&lt;/p&gt;

&lt;p&gt;The below table describes each field for the first alignment.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Field&lt;/th&gt;
      &lt;th&gt;Alignment 1 Value&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;QNAME&lt;/td&gt;
      &lt;td&gt;1:497:R:-272+13M17D24M&lt;/td&gt;
      &lt;td&gt;Query name&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;FLAG&lt;/td&gt;
      &lt;td&gt;113&lt;/td&gt;
      &lt;td&gt;A bitwise FLAG.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;RNAME&lt;/td&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Reference name&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;POS&lt;/td&gt;
      &lt;td&gt;497&lt;/td&gt;
      &lt;td&gt;Lefmost mapping position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MAPQ&lt;/td&gt;
      &lt;td&gt;37&lt;/td&gt;
      &lt;td&gt;Mapping quality&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CIGAR&lt;/td&gt;
      &lt;td&gt;37M&lt;/td&gt;
      &lt;td&gt;CIGAR string ( see below)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MRNM/RNEXT&lt;/td&gt;
      &lt;td&gt;15&lt;/td&gt;
      &lt;td&gt;Reference of the mate/next read&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MPOS/PNEXT&lt;/td&gt;
      &lt;td&gt;100338662&lt;/td&gt;
      &lt;td&gt;Position of mate/next read&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ISIZE/TLEN&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;Template length&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SEQ&lt;/td&gt;
      &lt;td&gt;CGGGTCTGACCTGAGGAGAACTGTGCTCCGCCTTCAG&lt;/td&gt;
      &lt;td&gt;Sequence&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;QUAL&lt;/td&gt;
      &lt;td&gt;0;==-==9;»»&amp;gt;=»»»»»&amp;gt;=»»»»»&lt;/td&gt;
      &lt;td&gt;Phred-based quality score&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TAGS&lt;/td&gt;
      &lt;td&gt;XT:A:U	NM:i:0	SM:i:37	AM:i:0	X0:i:1	X1:i:0	XM:i:0	XO:i:0 XG:i:0	MD:Z:37&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;flags-cigars-and-tags&quot;&gt;FLAGs, CIGARs, and TAGS&lt;/h4&gt;

&lt;p&gt;The FLAG, CIGAR, and TAGS fields all describe metadata associated with the alignment.  It’s likely that if you are interested in this information, you will search for a particular code, or perhaps will want to translate a code.  To that end, there are tools available to decode these fields.  For example, the broad institute has a &lt;a href=&quot;https://broadinstitute.github.io/picard/explain-flags.html&quot;&gt;FLAG-decoder in picard tools&lt;/a&gt; that can convert FLAGs into human readable properties.&lt;/p&gt;

&lt;p&gt;The FLAG and CIGAR fields are included as seperate apendices in the workshop.&lt;/p&gt;

&lt;h5 id=&quot;tags&quot;&gt;TAGs&lt;/h5&gt;

&lt;p&gt;TAGs take the form &lt;code class=&quot;highlighter-rouge&quot;&gt;[A-Za-z][A-za-z]:[AifZH]:.*&lt;/code&gt;.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Guide to newblr output</title>
   <link href="http://bradfordcondon.com/2017/07/11/newblr/"/>
   <updated>2017-07-11T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/07/11/newblr</id>
   <content type="html">&lt;p&gt;This post is part 8 of a series on bioinformatics file formats, written for the 2017 UK-KBRIN Essentials of Next 
Generation Sequencing Workshop at the University of Kentucky.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Newbler is a software package for &lt;em&gt;de novo&lt;/em&gt; assembly of 454 sequencing data.  It is available for free from Roche as part of the GS &lt;em&gt;de novo&lt;/em&gt; Assembler package.  While Roche may have discontinued support for it, you may still find yourself working with output from this assembler.&lt;/p&gt;

&lt;p&gt;It outputs many files.  I’ve excerpted the description from the manual, and a table of the column labels and their meaning for each file.&lt;/p&gt;

&lt;h2 id=&quot;assembly-projectxml&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Assembly project.xml&lt;/code&gt;&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Tab-delimited file giving position-by position consensus base and flow signal information.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We will not be going over this file, as its intended to be machine-readable.&lt;/p&gt;

&lt;h2 id=&quot;454alignmentinfotsv&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;454AlignmentInfo.tsv&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;The 454AlignmentInfo.tsv file contains position-by-position summary information about the consensus
sequence for the contigs generated by the GS De Novo Assembler application, listed one nucleotide per line (in a tabdelimited
format). Output conditionally (using the -info/-infoall/-noinfo options or the selection made on the GUI
Parameters Tab Output Sub-tab). By default, this file is only output if there are fewer than 4 million input reads and
the total length of assembled contigs is less than 40 Mbp. For larger projects, -info or -infoall or the corresponding
GUI Output selection for Alignment Info must be used to generate this file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;column&lt;/th&gt;
      &lt;th&gt;Label&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Position&lt;/td&gt;
      &lt;td&gt;Position in the contig&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Consensus&lt;/td&gt;
      &lt;td&gt;Consensus nucleotide at that position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Quality Score&lt;/td&gt;
      &lt;td&gt;Quality score of consensus base&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Unique Depth&lt;/td&gt;
      &lt;td&gt;Number of unique reads at that position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Align Depth&lt;/td&gt;
      &lt;td&gt;Number of reads at that position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;Signal&lt;/td&gt;
      &lt;td&gt;Average signal of the read flowgrams for the flows that correspond to that position&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;StdDeviation&lt;/td&gt;
      &lt;td&gt;Standard deviation of the read flowgram signals at that position&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;454readstatustxt&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;454readstatus.txt&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Tab-delimited text file providing a perread
report of the status of each read in
the assembly. The 3’ and 5’ positions of
each read’s alignment within the contig
are also reported.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Column&lt;/th&gt;
      &lt;th&gt;Label&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Accno&lt;/td&gt;
      &lt;td&gt;Accession number of the input read&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Read status&lt;/td&gt;
      &lt;td&gt;Status of the read in the assembly. Can be ‘assembled’, ‘partially assembled’, ‘singleton’, ‘repeat’, ‘outlier’, or ‘too short (discarded)’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;5’ Contig&lt;/td&gt;
      &lt;td&gt;Accession number of the contig where the 5’ end of the read aligns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;5’ Position&lt;/td&gt;
      &lt;td&gt;The position in the 5’ contig where the 5’ end begins&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;5’ Strand&lt;/td&gt;
      &lt;td&gt;Orientation of the read relative to the 5’ contig.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;3’ Contig&lt;/td&gt;
      &lt;td&gt;Accession number of the contig where the 3’ end of the read aligns&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;3’ Position&lt;/td&gt;
      &lt;td&gt;The position in the 5’ contig where the 5’ end begins&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;3’ Strand&lt;/td&gt;
      &lt;td&gt;Orientation of the read relative to the 5’ contig&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;trimstatustxt&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;trimstatus.txt&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Tab-delimited text file providing a perread
report of the original and revised
trim points used in the assembly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Column&lt;/th&gt;
      &lt;th&gt;Label&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Accno&lt;/td&gt;
      &lt;td&gt;Accession number of the input read&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Trimpoints used&lt;/td&gt;
      &lt;td&gt;Portion of the read used (ie, 2-301)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Trimmed length&lt;/td&gt;
      &lt;td&gt;Final length&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Orig. trimpoints&lt;/td&gt;
      &lt;td&gt;The original trimpoints specified in the input&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Orig. trimmed length&lt;/td&gt;
      &lt;td&gt;Original trimmed length of the read&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;Raw length&lt;/td&gt;
      &lt;td&gt;Length of the read with no trimming&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;pairstatustxt&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pairstatus.txt&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;Tab-delimited text file providing a perpair
report of the location and status of
how each paired end pair of reads were
used in the assembly&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Column&lt;/th&gt;
      &lt;th&gt;Label&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Template&lt;/td&gt;
      &lt;td&gt;Template string for the pair (454 accession for 454 paired end reads)&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Status&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Same Contig:&lt;/code&gt; pairs are on same contig as expected.  &lt;code class=&quot;highlighter-rouge&quot;&gt;Link:&lt;/code&gt; pairs are on different contigs, but could perhaps link these contigs.  All other statuses are failures.&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Distance&lt;/td&gt;
      &lt;td&gt;Distance between linked reads&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Left contig&lt;/td&gt;
      &lt;td&gt;Contig where the left half assembled&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Left pos&lt;/td&gt;
      &lt;td&gt;5’ position on contig&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;Left dir&lt;/td&gt;
      &lt;td&gt;Forward + reverse -&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;Right contig&lt;/td&gt;
      &lt;td&gt;Contig where the right half assembled&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;Right pos&lt;/td&gt;
      &lt;td&gt;5’ position on contig&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;Right dir&lt;/td&gt;
      &lt;td&gt;Forward + reverse -&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;Left distance&lt;/td&gt;
      &lt;td&gt;Distance from Left pos to the end of the contig&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;Right distance&lt;/td&gt;
      &lt;td&gt;Distance from Right pos to the end of the contig&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;454pairaligntxt&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;454PairAlign.txt&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;A text file giving the pairwise
alignment(s) of the overlaps used in the
assembly computation (only produced
when using the –pair option [or –pairt
option for the tab-delimited version of
the file]).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Column&lt;/th&gt;
      &lt;th&gt;Label&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;Query Accno&lt;/td&gt;
      &lt;td&gt;accession number of the read&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;Query start&lt;/td&gt;
      &lt;td&gt;Starting position of alignment in query&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;Query end&lt;/td&gt;
      &lt;td&gt;Ending position of alignment in query&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;Query length&lt;/td&gt;
      &lt;td&gt;Length of the query&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Subj accno&lt;/td&gt;
      &lt;td&gt;Accession number of subject sequence&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;Subj start&lt;/td&gt;
      &lt;td&gt;Starting position of alignment in subject&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7&lt;/td&gt;
      &lt;td&gt;Subj end&lt;/td&gt;
      &lt;td&gt;Ending position of alignment in subject&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8&lt;/td&gt;
      &lt;td&gt;Subj length&lt;/td&gt;
      &lt;td&gt;Length of the subject&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9&lt;/td&gt;
      &lt;td&gt;Num ident&lt;/td&gt;
      &lt;td&gt;Number of matches in alignment&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;Align length&lt;/td&gt;
      &lt;td&gt;Length of the total alignment&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;11&lt;/td&gt;
      &lt;td&gt;Query align&lt;/td&gt;
      &lt;td&gt;Sequence of the query in the alignment&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;12&lt;/td&gt;
      &lt;td&gt;Subj align&lt;/td&gt;
      &lt;td&gt;Sequence of the subject in the alignment&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;454newblermetricstxt&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;454NewblerMetrics.txt&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;File providing various assembly metrics,
including the number of input runs and
reads, the number and size of the large
consensus contigs as well as all
consensus contigs&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Please see the manual for a full description of whats included in this file.&lt;/p&gt;

&lt;h2 id=&quot;contigsace&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;contigs.ace&lt;/code&gt;&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;ACE format file that can be loaded by
third-party viewer programs that support
the ACE format. The output can be a
single file for the entire project or a
folder containing individual files for each
contig in the assembly&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This file is not necessarily intended to be human readable.  Please see the manual for a full description of how to interpret this file.&lt;/p&gt;

&lt;h2 id=&quot;contiggraphtxt&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;contiggraph.txt&lt;/code&gt;&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;The 454ContigGraph.txt file contains a graph-based description of the branching structure of an assembly’s contigs,
where nodes represent the contigs and edges between contigs give the branching structure. When paired end reads
are included in the assembly, the file also shows scaffold edges, describing how the contigs have been linked together
into scaffolds. The entries in the file are grouped by type, of which there are six, but not all projects will contain
entries for every type. Two types of entries(“S” and “P”) are only present when paired end reads are included in the
assembly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This file is not necessarily intended to be human readable.  Please see the manual for a full description of how to interpret this file.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>qual format</title>
   <link href="http://bradfordcondon.com/2017/07/09/qual_format_phred/"/>
   <updated>2017-07-09T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/07/09/qual_format_phred</id>
   <content type="html">&lt;p&gt;This post is part 7 of a series on file formats, written for the 2017 UK-KBRIN Essentials of Next Generation Sequencing Workshop at the University of Kentucky.&lt;/p&gt;

&lt;h3 id=&quot;qual-format&quot;&gt;qual format&lt;/h3&gt;

&lt;p&gt;A &lt;code class=&quot;highlighter-rouge&quot;&gt;.qual&lt;/code&gt; file provides Phred-based quality scores for a set of sequences (often a corresponding FASTA file).  It looks something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;my_sequence1
4 39 8 4 50 1 100 5 0
&amp;gt;my_sequence2 
3 3 40 42 35
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Similar to FASTA format, each sequence is defined with a header starting with the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; character, and all subsequente characters after the line break describe the sequence.  Unlike FASTA, the individual nucleotides are not included in this file, only the corresponding quality Phred-format scores. 
At this point, all we need to understand is what are &lt;a href=&quot;https://en.wikipedia.org/wiki/Phred_quality_score&quot;&gt;Phred quality scores&lt;/a&gt;.  Every nucleotide in a sequence will have a quality score associated with it.  The score &lt;code class=&quot;highlighter-rouge&quot;&gt;Q&lt;/code&gt; describes the probability &lt;code class=&quot;highlighter-rouge&quot;&gt;P&lt;/code&gt; that the base is called in correctly:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Q = –10 log(P)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Let’s look at some example Phred scores below:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Phred score&lt;/th&gt;
      &lt;th&gt;Probability incorrect&lt;/th&gt;
      &lt;th&gt;% likelihood correct call&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;1 in 2&lt;/td&gt;
      &lt;td&gt;50%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10&lt;/td&gt;
      &lt;td&gt;1 in 10&lt;/td&gt;
      &lt;td&gt;90%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;20&lt;/td&gt;
      &lt;td&gt;1 in 100&lt;/td&gt;
      &lt;td&gt;99%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;30&lt;/td&gt;
      &lt;td&gt;1 in 1000&lt;/td&gt;
      &lt;td&gt;99.9%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;40&lt;/td&gt;
      &lt;td&gt;1 in 10,000&lt;/td&gt;
      &lt;td&gt;99.99%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;50&lt;/td&gt;
      &lt;td&gt;1 in 100,000&lt;/td&gt;
      &lt;td&gt;99.999%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;60&lt;/td&gt;
      &lt;td&gt;1 in 1,000,000&lt;/td&gt;
      &lt;td&gt;99.9999%&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Phred scores typically range from 2-40 with current sequencing technology.  As you can see, setting a cutoff somewhere around &lt;code class=&quot;highlighter-rouge&quot;&gt;30&lt;/code&gt; or higher results in fairly strict confidence in invidual base calls.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>ZFF annotations for SNAP</title>
   <link href="http://bradfordcondon.com/2017/07/02/ZFF/"/>
   <updated>2017-07-02T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/07/02/ZFF</id>
   <content type="html">&lt;p&gt;This post is part 6 of a series on file formats, written for the 2017 UK-KBRIN Essentials of Next Generation Sequencing Workshop at the University of Kentucky.&lt;/p&gt;

&lt;h3 id=&quot;snap-and-zff&quot;&gt;SNAP and ZFF&lt;/h3&gt;

&lt;p&gt;SNAP stands &lt;em&gt;for Semi-HMM-based Nucleic Acid Parser&lt;/em&gt;, it is a general purpose gene-finding utility.
The ZFF file is generated with &lt;code class=&quot;highlighter-rouge&quot;&gt;maker2zff&lt;/code&gt; and is fed into the &lt;code class=&quot;highlighter-rouge&quot;&gt;fathom&lt;/code&gt; command&lt;/p&gt;

&lt;p&gt;To read more, read the &lt;code class=&quot;highlighter-rouge&quot;&gt;README&lt;/code&gt; file distributed with SNAP.  Examples are taken from https://crc.ibest.uidaho.edu/help/Applications/SNAP.html.&lt;/p&gt;

&lt;h3 id=&quot;zff-format&quot;&gt;ZFF format&lt;/h3&gt;

&lt;p&gt;Gene structure files are in &lt;code class=&quot;highlighter-rouge&quot;&gt;ZFF&lt;/code&gt;format.  Confusingly, this is the file with the &lt;code class=&quot;highlighter-rouge&quot;&gt;.ann&lt;/code&gt; extension.  It is a non-standard file format that resembles both &lt;code class=&quot;highlighter-rouge&quot;&gt;FASTA&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;GFF&lt;/code&gt;.  There is both a short and long format.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Short format&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;sequence-1
Einit    201    325   Y73E7A.6
Eterm   2175   2319   Y73E7A.6
&amp;gt;sequence-2
Einit    201    462   Y73E7A.7
Exon    1803   2031   Y73E7A.7
Exon    2929   3031   Y73E7A.7
Exon    3467   3624   Y73E7A.7
Exon    4185   4406   Y73E7A.7
Eterm   5103   5280   Y73E7A.7
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Long format&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;Y73E7A.6
Einit    201    325   +    90   0   2   1   Y73E7A.6
Eterm   2175   2319   +   295   1   0   2   Y73E7A.6
&amp;gt;Y73E7A.7
Einit    201    462   +   263   0   1   1   Y73E7A.7
Exon    1803   2031   +   379   2   2   0   Y73E7A.7
Exon    2929   3031   +   236   1   0   0   Y73E7A.7
Exon    3467   3624   +   152   0   2   0   Y73E7A.7
Exon    4185   4406   +   225   1   2   2   Y73E7A.7
Eterm   5103   5280   +    46   1   0   2   Y73E7A.7
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The below table describes each column&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ID&lt;/th&gt;
      &lt;th&gt;Type&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Label&lt;/td&gt;
      &lt;td&gt;Short&lt;/td&gt;
      &lt;td&gt;See zoeFeature.h for a complete list of possible values&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Begin&lt;/td&gt;
      &lt;td&gt;Short&lt;/td&gt;
      &lt;td&gt;Start location&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;End&lt;/td&gt;
      &lt;td&gt;Short&lt;/td&gt;
      &lt;td&gt;End location&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Group&lt;/td&gt;
      &lt;td&gt;Short (optional)&lt;/td&gt;
      &lt;td&gt;All exons must share a group name&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Strand&lt;/td&gt;
      &lt;td&gt;Long&lt;/td&gt;
      &lt;td&gt;Plus or minus strand&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Score&lt;/td&gt;
      &lt;td&gt;Long&lt;/td&gt;
      &lt;td&gt;A float type integer for score.  This score depends on the method used to generate the file.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5’-overhang&lt;/td&gt;
      &lt;td&gt;Long&lt;/td&gt;
      &lt;td&gt;Number of bp of incomplete codon 5’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3’-overhang&lt;/td&gt;
      &lt;td&gt;Long&lt;/td&gt;
      &lt;td&gt;Number of bp of incomplete codon 3’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Frame&lt;/td&gt;
      &lt;td&gt;Long&lt;/td&gt;
      &lt;td&gt;Reading frame (0, 1, 2)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</content>
 </entry>
 
 <entry>
   <title>BLAST output</title>
   <link href="http://bradfordcondon.com/2017/06/14/BLAST_format_explained/"/>
   <updated>2017-06-14T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/06/14/BLAST_format_explained</id>
   <content type="html">&lt;p&gt;This post is part 5 of a series on file formats, written for the 2017 UK-KBRIN Essentials of Next Generation Sequencing Workshop at the University of Kentucky.&lt;/p&gt;

&lt;h2 id=&quot;blast&quot;&gt;BLAST&lt;/h2&gt;

&lt;p&gt;The full BLAST manual is avialable here: &lt;a href=&quot;https://www.ncbi.nlm.nih.gov/books/NBK279675/&quot;&gt;https://www.ncbi.nlm.nih.gov/books/NBK279675/&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;blast-output-formats&quot;&gt;BLAST output formats&lt;/h3&gt;

&lt;p&gt;BLAST output options are chosen with the &lt;code class=&quot;highlighter-rouge&quot;&gt;--outfmt&lt;/code&gt; flag.  For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;blastn --outfmt 0&lt;/code&gt;.
The out format options are:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0 = pairwise,
1 = query-anchored showing identities,
2 = query-anchored no identities,
3 = flat query-anchored, show identities,
4 = flat query-anchored, no identities,
5 = XML Blast output,
6 = tabular,
7 = tabular with comment lines,
8 = Text ASN.1,
9 = Binary ASN.1
10 = Comma-separated values
11 = BLAST archive format (ASN.1)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The “long-form” formats, 0-4, can be good for looking at individual alignments, but they quickly become overwhelming when performing large BLAST queries.&lt;/p&gt;

&lt;p&gt;Other formats are more machine-readable, but are harder for humans to look at.  XML and ASN.1 fall in this category.  You can read more about ASN.1 format at &lt;a href=&quot;http://www.itu.int/en/ITU-T/asn1/Pages/introduction.aspx&quot;&gt;http://www.itu.int/en/ITU-T/asn1/Pages/introduction.aspx&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The best compromise between human readability and machine parsing is probably &lt;em&gt;tabular&lt;/em&gt; or &lt;em&gt;Comma-seperated&lt;/em&gt; format, which produces a table that can be imported into excel for manual sorting or easily parsed with a scripting langauge such as python or perl.  Let’s look at the tabular format below.&lt;/p&gt;

&lt;h2 id=&quot;outfmt-6&quot;&gt;outfmt 6&lt;/h2&gt;

&lt;p&gt;Out format 6 outputs a single line per entry, where each column is seperated by a tab character &lt;code class=&quot;highlighter-rouge&quot;&gt;/t&lt;/code&gt;.  The columns are as follows:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;label&lt;/th&gt;
      &lt;th&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;qseqid&lt;/td&gt;
      &lt;td&gt;query sequence id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sseqid&lt;/td&gt;
      &lt;td&gt;subject (e.g., reference genome/hit) sequence id&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pident&lt;/td&gt;
      &lt;td&gt;percentage of identical matches&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;length&lt;/td&gt;
      &lt;td&gt;alignment length&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;mismatch&lt;/td&gt;
      &lt;td&gt;number of mismatches&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;gapopen&lt;/td&gt;
      &lt;td&gt;number of gap openings&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;qstart&lt;/td&gt;
      &lt;td&gt;start of alignment in query&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;qend&lt;/td&gt;
      &lt;td&gt;end of alignment in query&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;sstart&lt;/td&gt;
      &lt;td&gt;start of alignment in subject&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;send&lt;/td&gt;
      &lt;td&gt;end of alignment in subject&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;evalue&lt;/td&gt;
      &lt;td&gt;expect value&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;bitscore&lt;/td&gt;
      &lt;td&gt;bit score&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Remember that the query and subject ID depend on the annotations in your query and target FASTA files.  Also remember that everything after the first space in the FASTA header is considered a description.  In the below example, gene1 and gene2 would have a &lt;code class=&quot;highlighter-rouge&quot;&gt;qseqid&lt;/code&gt; of genomeA in both cases.  A simple fix would be to replace spaces with underscores.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt;genomeA gene1
AAAATTTGAAAATATATATACCATTACAG
&amp;gt;genomeA gene2
GGGATATAGAGGCCCCCAACCACACCCCT
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Velvet assembly output files</title>
   <link href="http://bradfordcondon.com/2017/06/13/velvet_out/"/>
   <updated>2017-06-13T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/06/13/velvet_out</id>
   <content type="html">&lt;p&gt;This post is part 4 of a series on file formats, written for the 2017 UK-KBRIN Essentials of Next 
Generation Sequencing Workshop at the University of Kentucky.&lt;/p&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The velvet manual is hosted online in wiki format.  You can find the section on output files &lt;a href=&quot;https://github.com/dzerbino/velvet/wiki/Manual#output-files&quot;&gt;here&lt;/a&gt;.  I’ll be including relevant quotes from the manual.  I also found &lt;a href=&quot;http://davetang.org/wiki/tiki-index.php?page=Velvet&quot;&gt;this site&lt;/a&gt; helpful, and some of the examples are taken from here.
Ultimately the stats files included with the assembly can be more confusing than helpful.  Don’t be too concerned if you don’t understand all of the metrics.&lt;/p&gt;

&lt;p&gt;Below is a brief guide to the files included in the output.&lt;/p&gt;

&lt;h2 id=&quot;contigsfa&quot;&gt;contigs.fa&lt;/h2&gt;

&lt;p&gt;From the manual:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This fasta file contains the sequences of the contigs longer than 2k, where k is the word-length used in velveth. If you have specified a min_contig_lgth threshold, then the contigs shorter than that value are omitted.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;statstxt&quot;&gt;stats.txt&lt;/h2&gt;

&lt;p&gt;This file describes the nodes in the assembly and will look like the below example.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;ID&lt;/th&gt;
      &lt;th&gt;lgth&lt;/th&gt;
      &lt;th&gt;out&lt;/th&gt;
      &lt;th&gt;in&lt;/th&gt;
      &lt;th&gt;long_cov&lt;/th&gt;
      &lt;th&gt;short1_cov&lt;/th&gt;
      &lt;th&gt;short1_Ocov&lt;/th&gt;
      &lt;th&gt;short2_cov&lt;/th&gt;
      &lt;th&gt;short2_Ocov&lt;/th&gt;
      &lt;th&gt;long_nb&lt;/th&gt;
      &lt;th&gt;short1_nb&lt;/th&gt;
      &lt;th&gt;short2_nb&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;153&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;118.790850&lt;/td&gt;
      &lt;td&gt;118.790850&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;N/A&lt;/td&gt;
      &lt;td&gt;N/A&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;55&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;14.581818&lt;/td&gt;
      &lt;td&gt;14.581818&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0.000000&lt;/td&gt;
      &lt;td&gt;0&lt;/td&gt;
      &lt;td&gt;N/A&lt;/td&gt;
      &lt;td&gt;N/A&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;A table describing the headers is below&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Column header&lt;/th&gt;
      &lt;th&gt;Full name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;ID&lt;/td&gt;
      &lt;td&gt;ID&lt;/td&gt;
      &lt;td&gt;Node ID&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;lgth&lt;/td&gt;
      &lt;td&gt;length&lt;/td&gt;
      &lt;td&gt;length (in k-mers)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;out&lt;/td&gt;
      &lt;td&gt;3’ arcs&lt;/td&gt;
      &lt;td&gt;Number of arcs 3’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;in&lt;/td&gt;
      &lt;td&gt;5’ arcs&lt;/td&gt;
      &lt;td&gt;Number of arcs 5’&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;long_cov&lt;/td&gt;
      &lt;td&gt;coverage short 1&lt;/td&gt;
      &lt;td&gt;coverage in long reads&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;short1_cov&lt;/td&gt;
      &lt;td&gt;coverage short 1&lt;/td&gt;
      &lt;td&gt;coverage in short reads (including divergent sequences)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;short1_Ocov&lt;/td&gt;
      &lt;td&gt;coverage short 2&lt;/td&gt;
      &lt;td&gt;coverage in short reads (conform to consensus only, strict)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;short2_cov&lt;/td&gt;
      &lt;td&gt;coverage short 2&lt;/td&gt;
      &lt;td&gt;coverage in short reads (including divergent sequences)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;short2_Ocov&lt;/td&gt;
      &lt;td&gt;coverage short 2&lt;/td&gt;
      &lt;td&gt;coverage in short reads (conform to consensus only, strict)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;long_nb&lt;/td&gt;
      &lt;td&gt;long reads in node&lt;/td&gt;
      &lt;td&gt;number of long reads in node&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;short1_nb&lt;/td&gt;
      &lt;td&gt;short 1 reads in node&lt;/td&gt;
      &lt;td&gt;number of short1 reads in node&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;short2_nb&lt;/td&gt;
      &lt;td&gt;short 2 reads in node&lt;/td&gt;
      &lt;td&gt;number of short2 reads in node&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;velvet_asmafg&quot;&gt;velvet_asm.afg&lt;/h2&gt;
&lt;p&gt;This file is meant to be read by the AMOS assembly package, so we will not be concerned with it.&lt;/p&gt;

&lt;h2 id=&quot;lastgraph&quot;&gt;LastGraph&lt;/h2&gt;

&lt;p&gt;This file describes the graph produced by velvet to create the assembly.&lt;/p&gt;

&lt;p&gt;There is one header line for the entire graph, which lists the number of nodes, number of sequences, and the total hash length.&lt;/p&gt;

&lt;p&gt;Then, each node has a block with the following format:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; NODE $NODE_ID $COV_SHORT1 $O_COV_SHORT1 $COV_SHORT2 $O_COV_SHORT2 $ENDS_OF_KMERS_OF_NODE $ENDS_OF_KMERS_OF_TWIN_NODE 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;These should look familiar to whats in the &lt;code class=&quot;highlighter-rouge&quot;&gt;stats.txt&lt;/code&gt; file.  The ends of K-mers values are the last nucleotides of the k-mers in that node.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>GTF (General Transfer Format)</title>
   <link href="http://bradfordcondon.com/2017/05/24/GTF/"/>
   <updated>2017-05-24T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/05/24/GTF</id>
   <content type="html">&lt;p&gt;This post is part 3 of a series on file formats, written for the 2017 UK-KBRIN Essentials of Next Generation Sequencing Workshop at the University of Kentucky.  The conference website is hosted &lt;a href=&quot;http://www.endophyte.uky.edu/ngs/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;General transfer format (GTF), also known as General Feature Format (GFF) 2.0, is the format for transcripts in exercise 4, &lt;strong&gt;RNAseq&lt;/strong&gt;.
For more details, please see the &lt;a href=&quot;http://www.ensembl.org/info/website/upload/gff.html?redirect=no&quot;&gt;ensembl guide to GFF&lt;/a&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;GTF/GFF2.0 is fairly straightforward.  Understand that is can describe a variety of sequence features, not just transcripts.  All components of a gene’s structure, such as introns, exons, and protein CDS, can be described with GTF using the correct feature type (column 3).&lt;/p&gt;

&lt;h2 id=&quot;format&quot;&gt;Format&lt;/h2&gt;

&lt;p&gt;Each feature takes up one line, with &lt;strong&gt;9&lt;/strong&gt; columns per line (plus optional track definition lines).&lt;/p&gt;

&lt;h3 id=&quot;columns&quot;&gt;Columns&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;seqname&lt;/strong&gt;  Chromosome or scaffold name.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;source&lt;/strong&gt; Database, project, or program name.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;feature&lt;/strong&gt;  Feature type (eg Gene)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;start&lt;/strong&gt;  Start position&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;end&lt;/strong&gt;  End position&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;score&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;strand&lt;/strong&gt; + (forward) or - (reverse)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;frame&lt;/strong&gt; 0, 1, 2&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;attribute&lt;/strong&gt;  Tag “value” ; tag “value”&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1 transcribed_unprocessed_pseudogene  gene        11869 14409 . + . gene_id &quot;ENSG00000223972&quot;; gene_name &quot;DDX11L1&quot;; gene_source &quot;havana&quot;; gene_biotype &quot;transcribed_unprocessed_pseudogene&quot;; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;In the above sample &lt;code class=&quot;highlighter-rouge&quot;&gt;GTF&lt;/code&gt; file from ensembl, for example, the name is &lt;em&gt;(chromosome) 1&lt;/em&gt;, the source is &lt;em&gt;transcribed_unprocessed_pseudogene&lt;/em&gt;, the feature type is &lt;em&gt;gene&lt;/em&gt;, the start-end is &lt;em&gt;11869-14409&lt;/em&gt;, there is no applicable score (.), it’s on the forward (+) strand, there is no frame data, and there are four attributes.  The first attribute, for example, is gene_name with the value &lt;em&gt;DDX11L1&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;track-lines&quot;&gt;Track lines&lt;/h3&gt;

&lt;p&gt;The optional track lines start with the word ‘track’, followed by space-seperated key=value pairs.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Expanding Your Horizons Kentucky 2017</title>
   <link href="http://bradfordcondon.com/2017/05/14/EYHpress/"/>
   <updated>2017-05-14T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/05/14/EYHpress</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/assets/img/EYH2017/EYHbanner.gif&quot; alt=&quot;Expanding your horizons header&quot; /&gt; 
&lt;img src=&quot;/assets/img/EYH2017/sponsor_image.jpg&quot; alt=&quot;NSF epscor&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On April 29th 2017, the Expanding Your Horizons conference came to Kentucky for the first time.  The conference was funded by an NSF EPSCoR (National Science Foundation Experimental Program to Stimulate Competitive Research for Education and Outreach)  grant which I, along with Ellen Crocker and Susan Odom, was a PI on.
I’m very grateful for all of the volunteers, corporate partners, parents, teachers, and students who made this conference a success.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The deprecated site is available &lt;a href=&quot;http://www.expandingyourhorizons.org/conferences/UKLex/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;about-the-conference&quot;&gt;About the conference&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;Expanding Your Horizons (EYH) is a conference for girls in middle school and their parents/ guardians. 
This day-long event will include hands-on activities in science, technology, engineering, and math (STEM) for girls and educational sessions for parents/ guardians. At the conference, girls will get a chance to meet STEM role models and learn more about careers in those fields. Our ultimate goal is to motivate girls to become innovative and creative thinkers ready to meet 21st Century challenges.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To learn more about EYH, visit the &lt;a href=&quot;http://www.eyhn.org/&quot;&gt;national website&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;press&quot;&gt;Press&lt;/h2&gt;

&lt;h4 id=&quot;post-conference&quot;&gt;Post Conference&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://news.ca.uky.edu/article/out-box-future&quot;&gt;Out of the Box, Into the Future, UK Ag News, May 11 2017&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Why are you all here?” Crocker asked the participants. “We need you. If we’re going to solve the world’s problems, if we’re going to find solutions to safe drinking water, healthy air, continue being a country that is a research powerhouse, we need the best and the brightest.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://uknow.uky.edu/campus-news/expanding-your-horizons-introduces-middle-school-girls-stem&quot;&gt;Expanding Your Horizons Introduces Middle School Girls to STEM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;pre-conference&quot;&gt;Pre-conference&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://uknow.uky.edu/uk-happenings/stem-conference-middle-school-girls-welcomes-participants-and-uk-volunteers&quot;&gt;STEM Conference for Middle School Girls Welcomes Participants and UK Volunteers&lt;/a&gt;, &lt;strong&gt;UKnow&lt;/strong&gt; April 3, 2017&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://uknow.uky.edu/campus-news/uk-students-faculty-encourage-middle-school-girls-expand-their-horizons&quot;&gt;UK Students, Faculty Encourage Middle School Girls to ‘Expand Their Horizons’&lt;/a&gt; &lt;strong&gt;UKnow&lt;/strong&gt; April 25, 2017&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;photos&quot;&gt;Photos&lt;/h2&gt;

&lt;p&gt;Below are some of my favorite photos from the event.  Please follow the links for photo credits and the full albums.&lt;/p&gt;

&lt;h4 id=&quot;undergraduate-and-graduate-student-workshop-preparation&quot;&gt;Undergraduate and graduate student workshop preparation&lt;/h4&gt;

&lt;p&gt;Photo credits: &lt;a href=&quot;https://uknow.uky.edu/campus-news/uk-students-faculty-encourage-middle-school-girls-expand-their-horizons&quot;&gt;UKnow article by Jenny Wells&lt;/a&gt; jenny.wells@uky.edu&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/EYH2017/IMG_7101.jpg&quot; alt=&quot;EYH prep image 1&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;Ellen Crocker teaching the undergraduate/graduate student workshop leaders.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/EYH2017/IMG_7112.jpg&quot; alt=&quot;EYH prep image 2&quot; /&gt;&lt;/p&gt;

  &lt;p&gt;Students discussing the workshop they are preparing.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;set-2&quot;&gt;Set 2&lt;/h4&gt;

&lt;p&gt;The full album is avialable at &lt;a href=&quot;https://www.flickr.com/photos/ukagriculture/sets/72157683329558835&quot;&gt;the UkAg Flickr page, credits UK College of Agriculture&lt;/a&gt;.  These photos are under a &lt;a href=&quot;https://creativecommons.org/licenses/by-nc-nd/2.0/&quot;&gt;CC BY-NC-ND 2.0 license&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/EYH2017/ukAgGasp.png&quot; alt=&quot;EYH Gasp&quot; /&gt;
&lt;img src=&quot;/assets/img/EYH2017/UKAgBlender.png&quot; alt=&quot;EYH Microscope&quot; /&gt;
&lt;img src=&quot;/assets/img/EYH2017/UKAgScope.png&quot; alt=&quot;picture 3&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;materials&quot;&gt;Materials&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;/assets/img/EYH2017/EYH%20flyer.pdf&quot;&gt;Flyer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>FASTQ format explained</title>
   <link href="http://bradfordcondon.com/2017/05/14/fastq_format_explained/"/>
   <updated>2017-05-14T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/05/14/fastq_format_explained</id>
   <content type="html">&lt;p&gt;This post is part 2 of a series on file formats, written for the 2017 UK-KBRIN Essentials of Next Generation Sequencing Workshop at the University of Kentucky.  The conference website is hosted &lt;a href=&quot;http://www.endophyte.uky.edu/ngs/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;#FastQ sequence format&lt;/p&gt;

&lt;p&gt;FASTQ was originally developed by the Wellcome Trust Sanger Institute to bind together FASTA sequences with their respective quality data.  It is now the standard for high-throughput sequencing output.&lt;/p&gt;

&lt;h2 id=&quot;the-format&quot;&gt;The format&lt;/h2&gt;

&lt;p&gt;FASTQ is a four-line per sequence format.  If it looks like the raw sequence of your read takes up more than four lines, you probably have word-wrapping enabled.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@SEQ_ID
GATTTGGGGTTCAAAGCAGTATCGATCAAATAGTAAATCCATTTGTTCAACTCACAGTTT
+
!''*((((***+))%%%++)(%%%%).1***-+*''))**55CCF&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;CCCCCCC65

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;!--more--&gt;

&lt;h3 id=&quot;line-1&quot;&gt;Line 1&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@SEQ_ID&lt;/code&gt; is  analogous to the &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;SEQ_ID&lt;/code&gt; line of a FASTA file.  Like a FASTA title line, everything before the space is the sequence &lt;em&gt;identifier&lt;/em&gt; and everything after the first space is the optional sequence &lt;em&gt;description&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Note that different sequence sources have different standards for the description line here.
Sequences off of an illumina machine will follow this format:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Instrument_name:flow_cell_lane:tile_number_in_flowcell:x-coordinate:y-coordinate#index/pair1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So for example,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@myInstrument:1:3:100:200#2/2&lt;/code&gt; describes a read off of myInstrument.  The read was on tile number 3 of flowcell lane 1, located at X=100 Y=200, index number 2, pair #2 of a paired-end read.&lt;/p&gt;

&lt;p&gt;Note that these standards do change: for example, in Casava 1.8 extra information is added and the description is as follows:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@Instrument_name:runID:flow_cell_ID:flow_cell_lane:tile_number_in_flowcell:x-coordinate:y-coordinate&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;pair:filtered/not_filtered:index_sequence&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you need to examine the description line of your reads, make sure you know what format is being used.&lt;/p&gt;

&lt;h3 id=&quot;line-2&quot;&gt;Line 2&lt;/h3&gt;

&lt;p&gt;Line 2 is the actual sequence.&lt;/p&gt;

&lt;h3 id=&quot;line-3&quot;&gt;Line 3&lt;/h3&gt;

&lt;p&gt;Line 3 begins with the &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; character followed by the sequence identifier (and description).  This identifeir and description is optional: the &lt;code class=&quot;highlighter-rouge&quot;&gt;+&lt;/code&gt; is not.&lt;/p&gt;

&lt;h3 id=&quot;line-4&quot;&gt;Line 4&lt;/h3&gt;

&lt;p&gt;Line 4 contains the quality values for the sequence detailed in line 2.  This line must therefore contain the exact same number of characters as line 2: each base has a corresponding sequence score.&lt;/p&gt;

&lt;p&gt;Ordered from lowest quality (&lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt;) to highest quality (&lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;), these are the quality score characters&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;!&quot;#$%&amp;amp;'()*+,-./0123456789:;&amp;lt;=&amp;gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</content>
 </entry>
 
 <entry>
   <title>Introduction to BLAST</title>
   <link href="http://bradfordcondon.com/2017/05/03/remoteBlast/"/>
   <updated>2017-05-03T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/05/03/remoteBlast</id>
   <content type="html">&lt;h4 id=&quot;uk-blast-workshop-2016&quot;&gt;UK-BLAST workshop 2016&lt;/h4&gt;

&lt;p&gt;This tutorial was developed for Dr. Mark Farman at the University of Kentucky for Undergraduate students participating in UK-BLAST.  If you are trying to learn how to run applications from the command line but are feeling lost, this guide is for you.&lt;/p&gt;

&lt;p&gt;UK-BLAST is a bioinformatics working group for undergraduate researchers.  In small labs, students often tackle the bioinformatician role in with little to no technical guidance.  The group may not have anyone with a computer science background, or the task may be beyond the skills of current personnel.  In these cases, a working group headed by a technical mentor (myself) allows students to bypass some of the pitfalls and headaches associated with learning computer science all alone.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;what-is-blast&quot;&gt;What is BLAST?&lt;/h2&gt;

&lt;p&gt;BLAST, or Basic Local Alignment Search Tool, is a program compares a protein or nucleotide query sequence against a database of known sequences.  BLAST has many different applications for many fields of biology.  For example, BLAST is commonly used…&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To compare sequences from different genomes.&lt;/li&gt;
  &lt;li&gt;To compare similar genes within a genome.&lt;/li&gt;
  &lt;li&gt;To create phylogenetic trees.&lt;/li&gt;
  &lt;li&gt;To identify species given a DNA sample of unknown origin.&lt;/li&gt;
  &lt;li&gt;To infer function of an unknown protein.&lt;/li&gt;
  &lt;li&gt;To map DNA to a reference.&lt;/li&gt;
  &lt;li&gt;To identify repeated sequences (self BLAST).&lt;/li&gt;
  &lt;li&gt;To find conserved motifs in a protein (PSI-BLAST)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When most users access BLAST, they do so via the &lt;a href=&quot;http://blast.ncbi.nlm.nih.gov/Blast.cgi&quot;&gt;NCBI BLAST web portal&lt;/a&gt;.  Here, one can paste in a sequence and search against GenBank or other comprehensive databases.  As of 2013, Genbank includes sequences from almost 260,000 formally described species.
Note: for an extremely in depth summary of how BLAST works, see &lt;a href=&quot;http://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html&quot;&gt;the NCBI course here&lt;/a&gt;. Be warned: there is a lot of higher math in this link.&lt;/p&gt;

&lt;h3 id=&quot;using-blast-remotely&quot;&gt;Using BLAST remotely&lt;/h3&gt;

&lt;p&gt;Accessing data: let’s go to GenBank and access some protein sequences by pointing a browser to http://www.ncbi.nlm.nih.gov/genbank/&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/BLASTremote/rblast1.png&quot; alt=&quot;Blast remote&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Search for a protein you are interested in. For starters, let’s look for ABC transporters in &lt;em&gt;Magnaporthe oryzae&lt;/em&gt;, the fungus which causes a variety of blast diseases on different “grass” plants (including wheat and rice).&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is a top hit.  Note that the Accession number, ELQ65981.1 as well as the gene ID 440486081 both serve to uniquely identify this protein.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/BLASTremote/rblast2.png&quot; alt=&quot;Your first BLAST hit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Clicking on the FASTA link for this sequence will display the protein’s sequence in FASTA format.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/BLASTremote/rblast3.png&quot; alt=&quot;Your first BLAST hit, in FASTA format&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Download a protein sequence and save it to its own FASTA file.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Be careful copy-pasting and opening sequence files in programs like Microsoft Word - they will introduce hidden characters that will corrupt bioinformatic analyses.   It’s best to download files directory, or to use “safe” text editors like Textwrangler or SublimeText.&lt;/p&gt;

&lt;h4 id=&quot;searching-the-blast-database&quot;&gt;Searching the BLAST database&lt;/h4&gt;

&lt;p&gt;The National Institute of Health hosts a fantastic BLAST database at their website, available at http://blast.ncbi.nlm.nih.gov/Blast.cgi 
&lt;em&gt;Note&lt;/em&gt;:  if your websession fails, you can access previous results by clicking on the “Recent Results” link.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Visit the NCBI blast database.  Explore the different types of BLAST available and make sure you understand the different BLAST “flavors”&lt;/li&gt;
    &lt;li&gt;Paste or upload your FASTA file into the protein BLAST search form (careful about giving them too many options). For now, we will use the default search parameters. Make sure that the database you are querying is the non-redundant protein database.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;A view of the BLAST results is provided below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/BLASTremote/rblast4.png&quot; alt=&quot;BLAST query interface&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;conserved domains&lt;/em&gt; section gives us an overview of the protein.  You can click on individual regions of the protein to learn more about each domain.  Because we searched with an ABC protein, we see an ATP-binding cassette (ABC) domain, a ABC_membrane domain, and a second ABC domain.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Click on the conserved domains of your protein.  Write down each domain name, and what function you think each domain might perform for the protein.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;We will learn more about predicting protein domains, and understanding conserved domains, in a later lesson.
Navigate back to the blast results page (back on your browser), and scroll down to the colored alignments section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/BLASTremote/rblast5.png&quot; alt=&quot;BLAST query interface close up&quot; /&gt;&lt;/p&gt;

&lt;p&gt;BLAST will list results in descending order.  In the example of the first six results above, our query protein is given at the top, and each result is drawn as a series of colored boxes.  The higher the alignment score for a region, the more similar that protein is.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;From which species are the top 10 hits?&lt;/li&gt;
    &lt;li&gt;How many hits retrieved have a percent identity greater than 95%?&lt;/li&gt;
    &lt;li&gt;Are the hits with low % identity still listed as ABC transporters?&lt;/li&gt;
    &lt;li&gt;Look at the header rows in the Descriptions section.  What does each column mean?  Translate each header below.  If you need help, you can look up the term in the BLAST glossary.
      &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Max score
Total Score
Query Cover
E value
Ident
Accession
&lt;/code&gt;&lt;/pre&gt;
      &lt;/div&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;
&lt;h4 id=&quot;storing-blast-results&quot;&gt;Storing BLAST results&lt;/h4&gt;
&lt;p&gt;Let’s say we wanted to store the sequences of proteins retrieved in our BLAST.  To do this, scroll down to the list of hits, click “select all”, then Download, and hit “continue” with the FASTA (complete sequence) option checked.  This will download all of our hit sequences to a single FASTA file.  By selecting Text, on the other hand, we can download the BLAST output itself (the alignments, e values, etc).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/BLASTremote/rblast6.png&quot; alt=&quot;batch download BLAST results&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Download all sequences matched by BLAST to a single FASTA file.&lt;/li&gt;
    &lt;li&gt;In your UNIX terminal, create a working directory for this tutorial.  Move your downloaded sequences to that folder (on OS X, your default download location is /Users/yourname/Downloads/) using the &lt;code class=&quot;highlighter-rouge&quot;&gt;mv&lt;/code&gt; command.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;There are many things we can do with this dataset. We could look for conserved domain structures in ABC proteins, align the sequences, build a phylogenetic tree, or search new genomes for more ABC transporter sequences.  Storing the data with clear names, typically with a corresponding notebook describing what the data contains and the goal of your project, is essential for keeping track of your work!
In the second part of this walkthrough, we will use a single ABC sequence to identify all candidate ABC transporters in a genome.&lt;/p&gt;

&lt;h3 id=&quot;downloading-genomes-from-genbank&quot;&gt;Downloading genomes from Genbank&lt;/h3&gt;
&lt;p&gt;Alternatively, we may want to download an entire genome to work with later.  Typically, we want either the protein catalogue (a single FASTA file with all of the predicted amino acid sequences for a genome, corresponding to each gene) and/or the assembly (the nucleotide sequence of the entire genome, broken up into contigs or scaffolds [sets of smaller nucleotide sequence “pieces” stitched together and assembled as best as possible.  The best possible assembly will have a single scaffold for each chromosome]).&lt;/p&gt;

&lt;h3 id=&quot;navigating-from-a-blast-result-to-a-genome&quot;&gt;Navigating from a BLAST result to a genome&lt;/h3&gt;

&lt;p&gt;Finding this raw data can sometimes be challenging.  Let’s say we’re interested in finding our top BLAST hit above in the &lt;em&gt;Magnaporthe oryzae&lt;/em&gt; (species name) Y34 (strain name) assembly.   If we click on it’s name, this brings us to the alignment, where we can click on the sequence ID &lt;a href=&quot;http://www.ncbi.nlm.nih.gov/protein/440470910?report=genbank&amp;amp;log$=protalign&amp;amp;blast_rank=1&amp;amp;RID=DWCKYC6P014&quot;&gt;ELQ39949.1&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;How many amino acids long is this protein?&lt;/li&gt;
    &lt;li&gt;If we wanted to read the article describing this sequence (and likely this genome) what journal and issue would we find it in?&lt;/li&gt;
    &lt;li&gt;What evidence on this page confirms this protein is an ABC transporter?    &lt;em&gt;Hint: try clicking on the links labeled INTERPRO and CDD.&lt;/em&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you click on &lt;strong&gt;ORGANISM&lt;/strong&gt; &lt;a href=&quot;http://www.ncbi.nlm.nih.gov/Taxonomy/Browser/wwwtax.cgi?id=1143189&quot;&gt;&lt;em&gt;Magnaporthe oryzae&lt;/em&gt; Y34&lt;/a&gt; at the top of the page, you will arrive at NCBI’s taxonomy browser.  From here we can find many useful resources, but for right now, let’s focus on the “Entrez records” on the right hand side of the screen.  We’d like to download the “Assembly” and all of the associated proteins.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Click on the “1” next to “Assembly” to go to the Entrez assembly record.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We’re almost there!
The assembly page has even more information about this strain’s genome sequence.  Of particular interest is the genome coverage, the sequencing technology, the total sequence length, and the number of scaffolds.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Click on the “Download the Genbank assembly” link to access the genome download page.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;At this point, you should be pointed at ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA_000292585.1_MoY34_2.0.  This is an FTP site, which means we could connect to this site via the terminal to download from the command line!  It may look like a lot of stuff here: if you’re confused, check the README.TXT file.  It’s common practice for people to include a README file explaining the contents of these repositories.  We want the nucleotide sequences in FASTA format and the protein sequences in FASTA format, which correspond to the files ending in protein.faa and genomic.fna.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Download the nucleotide assembly and the full protein catalogue of this genome.&lt;/li&gt;
    &lt;li&gt;In UNIX, make a folder for your whole genome assemblies.  You may like to keep one folder for proteins, and another for nucleic acids.&lt;/li&gt;
    &lt;li&gt;Create a table (for example in excel) to keep track of your downloaded genomes.  Be sure to have a column for the file name (on your system), species name, strain name, where you downloaded the data from, reference, date downloaded, and version.  If you aren’t sure of this information, it should be on the reference page.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;building-a-database-relevant-to-your-project&quot;&gt;Building a database relevant to your project&lt;/h3&gt;
&lt;p&gt;Now that you’ve downloaded a genome, you may want to have a database of genomes relevant to your own project.  To get started on this, go back to your original BLAST search (or perform a new search if you’ve lost the page).&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;Following the above steps, attempt to download another organism’s full nucleotide assembly and protein catalogue.    Be sure to add its information to your genome database spreadsheet.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Genbank is one of many data repositories where datasets are available.  Depending on your project, you may download assemblies from other sources.  Databases and assemblies are updated and change, which is why its important to &lt;em&gt;keep track of what version you are using, and where you got it from&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;In the next lesson, we’ll go over installing and running BLAST locally.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>PATH, a guide to finding one's way</title>
   <link href="http://bradfordcondon.com/2017/04/23/exploringPATH/"/>
   <updated>2017-04-23T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/04/23/exploringPATH</id>
   <content type="html">&lt;h4 id=&quot;uk-blast-workshop-2016&quot;&gt;UK-BLAST workshop 2016&lt;/h4&gt;

&lt;p&gt;These exercises were developed for Dr. Mark Farman at the University of Kentucky for Undergraduate students participating in UK-BLAST.  If you are trying to learn how to run applications from the command line but are feeling lost, this guide is for you.&lt;/p&gt;

&lt;p&gt;UK-BLAST is a bioinformatics working group for undergraduate researchers.  In small labs, students often tackle the bioinformatician role in with little to no technical guidance.  The group may not have anyone with a computer science background, or the task may be beyond the skills of current personnel.  In these cases, a working group headed by a technical mentor (myself) allows students to bypass some of the pitfalls and headaches associated with learning computer science all alone.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h1 id=&quot;path-a-guide-to-finding-ones-way&quot;&gt;PATH: A guide to finding one’s way&lt;/h1&gt;

&lt;p&gt;Written by Bradford Condon, PhD.  Farman Labratory, University of Kentucky, 2016&lt;/p&gt;

&lt;h2 id=&quot;background-what-is-a-path&quot;&gt;Background: What is a PATH?&lt;/h2&gt;

&lt;p&gt;In computing, &lt;a href=&quot;https://en.wikipedia.org/wiki/Path_(computing)&quot;&gt;a PATH&lt;/a&gt; is the absolute name of a file or directory, specifiying its unique location within a file system.  When you navigate to a file on your computer, locate a song in your music library, or navigate to a website, you do so using this absolute file structure.&lt;/p&gt;

&lt;h2 id=&quot;getting-started&quot;&gt;Getting started&lt;/h2&gt;

&lt;p&gt;To begin, you must first access the command line.  On Mac, this is through the Terminal: on Windows, you need to use a program like &lt;a href=&quot;http://kb.site5.com/shell-access-ssh/putty/putty-how-to-start-a-ssh-session-from-the-command-line/&quot;&gt;PuTTY&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Open up your Terminal (press CMD-SPACE top open spotlight and type terminal) and you should be greeted by a command prompt like this:
&lt;img src=&quot;assets/img/PATH/path2.png&quot; alt=&quot;Welcome to the command line&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Where are we?  What files and folders are located where we are?  The word immediately preceeding the $ symbol is the name of my current working directory.  The next section will explain some simple commands to look around your file structure.&lt;/p&gt;

&lt;h3 id=&quot;pwd-print-working-directory&quot;&gt;&lt;em&gt;PWD&lt;/em&gt;: print working directory&lt;/h3&gt;

&lt;p&gt;Our first essential command is PWD.  PWD stands for print working directory.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Type in &lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt; and make note of where you are located.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Bradfords-MacBook-Pro:Documents chet&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;pwd&lt;/span&gt;
/Users/chet/Desktop/Documents
Bradfords-MacBook-Pro:Documents chet&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This is called our starting directory or HOME directory, and is where we will begin every time we open a new terminal.&lt;br /&gt;
This is an &lt;strong&gt;essential&lt;/strong&gt;  command to learn!
The dollar sign $ is called the prompt.  It lets you know that your computer is ready to receive input commands.  Notice how in the first line I typed ‘pwd’ and hit enter.  The computer processed the command and gave me an output on the second line.  The third line shows, again, my current working directory and the prompt, letting me know it is ready receive another command.&lt;/p&gt;

&lt;p&gt;The value returned by PWD on my computer was &lt;code class=&quot;highlighter-rouge&quot;&gt;/Users/chet/Desktop/Documents&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This is where my terminal is currently located, and is referred to as my working directory.  &lt;strong&gt;Yours will look different&lt;/strong&gt; but it will mean the same thing: There are a series of folders within folders telling you how to find your current working directory.  on OSX, the /Users/ directory contains the home directory for all the users of that computer.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Write the full PATH pwd returns for you below.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;PATH to my home directory:&lt;/p&gt;

  &lt;p&gt;/&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;Let’s go over a few quick commands so we can practice navigating our file structure.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;LS&lt;/strong&gt; - lists files and folders in your current directory&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;CD&lt;/strong&gt; - Changes directory.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;MKDIR&lt;/strong&gt;-  Creates a directory.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Try each of the above commands yourself and see what happens.  Write what happens for each in the box below.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls
cd
mkdir
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;blockquote&gt;

&lt;/blockquote&gt;

&lt;p&gt;What did &lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt; do?  It gave us a &lt;em&gt;usage&lt;/em&gt; message, which means we didn’t use the program properly.  We tried to create a directory without specifying the name of the directory.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Let’s create a directory called test:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Try the excercises below.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Which of the above commands will let us check if our newly made directory exists? Execute this command.
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;What is the full path of this new folder?&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Create another folder called test.  What happens?
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt; failed because we cannot have two files with the same name in the same location.&lt;/p&gt;

&lt;p&gt;If you ever need guidance figuring out how to run a program, type the program name with the help option/flag for documentation (&lt;code class=&quot;highlighter-rouge&quot;&gt;-h&lt;/code&gt; after the command: see the code box below).  As you use more and more elaborate programs, this will become very useful!&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd -h
ls -h
mkdir -h
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;cd-change-directories&quot;&gt;&lt;em&gt;CD&lt;/em&gt;: change directories&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; changes the directory we are in.  If we only type in&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It will automatically move us to our &lt;em&gt;home directory&lt;/em&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;To navigate into our new test folder, type  issue the following two commands.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd test
ls
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;this will move us into the test folder, and list the files in this folder.  We just made it, so it’s empty.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Next, make a new folder in this directory and use ls to see if the command was successful.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir test
ls
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;We can have two folders named test in separate locations, but we cannot have two folders named test in the same location.  This is because each folder has its own ABSOLUTE PATH.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use pwd and cd to answer the question below.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;What is the full PATH of the first test directory we made?  The second?
&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;While located in the this second test folder, issue these three commands:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pwd
cd
pwd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, the &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; command returns us to our home directory when we dont supply an argument (write something after the command name).&lt;/p&gt;

&lt;p&gt;If we want to navigate back , we could type&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd test
cd test
pwd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Alternatively: we can navigate there in one jump by typing&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd test/test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This command changes directory from our current directory to a folder called test, and then to the next folder inside of that.  What’s important to understand is that we can do this from &lt;em&gt;anywhere on the computer&lt;/em&gt; by specifying the full path.&lt;/p&gt;

&lt;p&gt;Even more importantly, we can issue a command on files in other directories by giving their full PATH!  The below command would list the contents of my test folder no matter what my current working directory is.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls /Users/chet/Desktop/Documents/test/test
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Try listing the contents of a folder &lt;em&gt;that is not your current working directory&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;relative-and-absolute-paths&quot;&gt;Relative and absolute paths&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Try the following example below (on a mac).&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /usr
pwd 
ls
cd /Users/_yourNameHere_/Desktop/Documents/test/test
pwd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Notice that by typing &lt;code class=&quot;highlighter-rouge&quot;&gt;cd /FOLDER&lt;/code&gt;, we are telling &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; the &lt;em&gt;absolute&lt;/em&gt; path of a file.  before, we typed &lt;code class=&quot;highlighter-rouge&quot;&gt;cd FOLDER&lt;/code&gt; (without the backslash first).  This specified the &lt;em&gt;relative&lt;/em&gt; path.  The absolute path of a file never changes.  The relative path is really the path &lt;em&gt;from our current working directory&lt;/em&gt;.&lt;/p&gt;

&lt;h5 id=&quot;comprehension-questions&quot;&gt;Comprehension questions&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;What is the absolute path of our second test folder?&lt;/li&gt;
  &lt;li&gt;What is the relative path of our test folder from the home directory?&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;shortcuts&quot;&gt;Shortcuts&lt;/h4&gt;
&lt;p&gt;Below are two very useful shortcuts.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-{bash}&quot;&gt;cd ..   ##One directory up.  Very useful for quickly navigating directories.
cd ../anotherfolder  ##navigates one folder backwards, and then into another folder 
cd ~   #~ is a shortcut to the home directory.  It's not useful here because cd also returns us to our home directory but....
cd ~/Desktop/Documents	## Very useful when specifying the ABSOLUTE PATH of a file or folder.

	## The hash symbol indicates a comment. 
	# Most programming langauge ignore everything appearing in a line after a # 
	#(or a different character used for this purpose): it is for human eyes to &quot;annotate&quot; code.

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;From Your home directory, where does &lt;code class=&quot;highlighter-rouge&quot;&gt;cd ..&lt;/code&gt; take you?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;command-line-completionautofill&quot;&gt;Command line completion/autofill&lt;/h2&gt;

&lt;p&gt;The final essential tip of this lesson is command line completion or autofill.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Bradfords-MacBook-Pro:Desktop chet$ pwd
/Users/chet/Desktop
Bradfords-MacBook-Pro:Desktop chet$ ls
$RECYCLE.BIN
Documents
Screen Shot 2016-02-05 at 10.44.47 AM.png
Solved Tests
images_for_PATH
Bradfords-MacBook-Pro:Desktop chet$ 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, I’m currently located in &lt;code class=&quot;highlighter-rouge&quot;&gt;/Users/chet/Desktop&lt;/code&gt;.  If I’d like to move into my test folders located in documents I could type &lt;code class=&quot;highlighter-rouge&quot;&gt;cd Documents/test/test&lt;/code&gt;  However, this is a confusing file path.  It’s very easy to make mistakes typing out something like this.  Command line autofill is an extremely powerful tool to get around this.  To access it, start typing your command and press tab &lt;em&gt;after writing a few characters&lt;/em&gt;. It will automatically fill in the rest of the file name if it is unambiguous.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;From your home directory, navigate back to your test folder by using autocomplete.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sometimes, we’ll have two files with similar names.  Suppose we have two folders, test1 and test2.  How can we quickly navigate into test2?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Make two similarly named directories in current folder.  Begin using autocomplete to cd into one.  What happens?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Try pressing pressing tab &lt;strong&gt;twice&lt;/strong&gt; after typing in a few letters.  What happens?&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can use autocomplete not only to change directories quickly, but correctly navigate confusing directories.&lt;/p&gt;

&lt;h2 id=&quot;final-exercise&quot;&gt;Final exercise&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Note: do not experiment deleting, moving, or modifying files in your root directory.&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Navigate to the root of your file structure by typing &lt;code class=&quot;highlighter-rouge&quot;&gt;cd /&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;What files are located here?&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;What is the easiest way to return to your home directory?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Try navigating from your root directory to your test directory created earlier using a single command!  You can make use of the shortcuts listed above, especially tab autocomplete.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Keep in mind that being familiar with the absolute PATH of files is useful for more than just navigating around your computer.  &lt;strong&gt;We can issue commands in folders where we are not currently located using the PATH&lt;/strong&gt;.  This works with both relative, and absolute, paths.&lt;/p&gt;

&lt;p&gt;for example, to list the files in a new folder, we can type&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /Users/chet/Desktop
mkdir test_folder
ls test_folder
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;comprehension-questions-1&quot;&gt;Comprehension questions&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;Make a new test folder and navigate into it.&lt;/li&gt;
  &lt;li&gt;From here, how can you list the contents of your home directory using…&lt;/li&gt;
  &lt;li&gt;Absolute path&lt;/li&gt;
  &lt;li&gt;Relative path&lt;/li&gt;
  &lt;li&gt;How can you make a new folder in your home directory from this remote location?&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>fixing tabs</title>
   <link href="http://bradfordcondon.com/2017/04/19/fixHeaderTabs/"/>
   <updated>2017-04-19T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/04/19/fixHeaderTabs</id>
   <content type="html">&lt;p&gt;As you can see below, the navigation tabs I’m using at the top of my page didn’t properly update depending on what page the user is at.  While on the CV page, the CV tab should be selected, not home.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/tabsFix2017/tabIssue.png&quot; alt=&quot;tabs not working!&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So how do we fix it?&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;The header is defined in the &lt;code class=&quot;highlighter-rouge&quot;&gt;/_includes&lt;/code&gt; folder in a hero-footer element.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hero-foot&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tabs is-boxed nav-menu has-shadow&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-center&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;is-active&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Home&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/about/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;About&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/cv.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;CV&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The list element &lt;code class=&quot;highlighter-rouge&quot;&gt;class=&quot;is-active&quot;&lt;/code&gt; is what tells the styling to make a particular tab active.&lt;/p&gt;

&lt;p&gt;We can test if we are on a particular page using this snippet: ``.  So, let’s replace &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;li class=&quot;is-active&quot;&amp;gt;&lt;/code&gt; with &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;li &amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hero-foot&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;nav&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;tabs is-boxed nav-menu has-shadow&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nav-center&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;ul&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Home&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/about/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;About&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/cv.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;CV&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/ul&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Reload the site and voila, our header now updates based on our page.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;img src=&quot;/assets/img/tabsFix2017/tabsFixed.png&quot; alt=&quot;tabs working!&quot; /&gt;&lt;br /&gt;Liquid tags make it easy to conditionally change the class of our header tab element to active or not.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If you’d like to learn more we have been working with &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; tags.  There are a variety of handy tags to make your static page more dynamic.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Floracliff mushroom workshop</title>
   <link href="http://bradfordcondon.com/2017/04/17/floraCliffUpdate/"/>
   <updated>2017-04-17T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/04/17/floraCliffUpdate</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.bradfordcondon.com/fun/science/2016/08/25/upcoming-workshop-mushrooms-101-at-floracliff-nature-conservatory/&quot;&gt;I previously announced a Workshop we hosted at Floracliff on mushroom identification In October 2016&lt;/a&gt;.  It’s been a while but I wanted to share a little bit about the experience and post materials.&lt;/p&gt;

&lt;p&gt;&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;First of all, a big thank you to Beverly and Josie at Floracliff.  It was a joy working with you all.  Same goes to our wonderful participants, we couldn’t have asked for a better audience.&lt;/p&gt;

&lt;p&gt;I’m sharing photos from the workshop and material below. Special thanks to &lt;a href=&quot;https://www.instagram.com/klutesphoto/&quot;&gt;Kevin Lutes&lt;/a&gt; for taking professional photographs and for permission to link them here.&lt;/p&gt;

&lt;p&gt;Hope to see you all again soon!&lt;/p&gt;

&lt;h2 id=&quot;workshop-photos&quot;&gt;Workshop photos&lt;/h2&gt;
&lt;p&gt;Photos were taken by Kevin Lutes and used with permission.  Check out the &lt;a href=&quot;https://www.facebook.com/pg/KevinLutesPhotography/photos/?tab=album&amp;amp;album_id=1236718489722797&quot;&gt;facebook album of Keivn’s photos&lt;/a&gt; and also find &lt;a href=&quot;https://www.instagram.com/klutesphoto/&quot;&gt;Kevin on instagram&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/floracliff2016/groupPhoto.png&quot; alt=&quot;Group photo&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Group photo of those who were able to attend the day 2 hike.  We could not have asked for better students.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/floracliff2016/CondonTeaching.png&quot; alt=&quot;Bradford Condon teaching&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Dr. Bradford Condon doing his best to make sense of a field guide.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/floracliff2016/groupWork.png&quot; alt=&quot;Bradford Condon teaching&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Identifying our haul.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;workshop-material&quot;&gt;Workshop material&lt;/h2&gt;
&lt;p&gt;Below are links to slides for presentations.  If you &lt;em&gt;really&lt;/em&gt; need one of the other presentations let me know and I can share them.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Fungal basics&lt;/li&gt;
  &lt;li&gt;What are mushrooms?&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/secret/mbmbrs65F01bqf&quot;&gt;Mushroom characteristics&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Introduction to mushroom hunting&lt;/li&gt;
  &lt;li&gt;Introduction to using a mushroom ID key&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/secret/A5dfznRqFXF0mE&quot;&gt;Safety and mushroom poisoning&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.slideshare.net/secret/cgjEaomQ3RUlfu&quot;&gt;Mushroom classification&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Knitting to Jekyll</title>
   <link href="http://bradfordcondon.com/2017/04/11/testKnitr/"/>
   <updated>2017-04-11T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/04/11/testKnitr</id>
   <content type="html">&lt;h2 id=&quot;knitting-r-markdown-to-jekyll&quot;&gt;Knitting R Markdown to Jekyll&lt;/h2&gt;

&lt;p&gt;This is a test of the Knittr package and Jekyll.&lt;/p&gt;

&lt;p&gt;It looks like the original package for using knitr with Jekyll &lt;a href=&quot;https://github.com/yihui/knitr-jekyll&quot;&gt;here&lt;/a&gt; has fallen out of favor for Hugo, a GO-based static web-site generator.  Pretty cool, but let’s see how easy it is to knit into Jekyll without using any packages.&lt;/p&gt;

&lt;h2 id=&quot;load-in-some-libraries-and-data&quot;&gt;Load in some libraries and data&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;require(ggplot2)
require(knitr)
attach(mtcars)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;do-some-plots&quot;&gt;Do some plots&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;head(mtcars)

##                    mpg cyl disp  hp drat    wt  qsec vs am gear carb
## Mazda RX4         21.0   6  160 110 3.90 2.620 16.46  0  1    4    4
## Mazda RX4 Wag     21.0   6  160 110 3.90 2.875 17.02  0  1    4    4
## Datsun 710        22.8   4  108  93 3.85 2.320 18.61  1  1    4    1
## Hornet 4 Drive    21.4   6  258 110 3.08 3.215 19.44  1  0    3    1
## Hornet Sportabout 18.7   8  360 175 3.15 3.440 17.02  0  0    3    2
## Valiant           18.1   6  225 105 2.76 3.460 20.22  1  0    3    1

qplot(mpg, drat, data=mtcars, color=cyl, main=&quot;mpg vs drat mtcars&quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/assets/knitr/unnamed-chunk-2-1.svg&quot; alt=&quot;plot of chunk unnamed-chunk-2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Behold my beautiul plot!&lt;/p&gt;

&lt;h2 id=&quot;render&quot;&gt;Render&lt;/h2&gt;

&lt;p&gt;Next we need to get our RMD to MD, with the image paths sorted.  To do this I’ll stand on the shoulders of &lt;a href=&quot;https://chepec.se/2014/07/16/knitr-jekyll.html&quot;&gt;chepec&lt;/a&gt; who has implemented a solution.  I created a &lt;code class=&quot;highlighter-rouge&quot;&gt;_knitr&lt;/code&gt; directory in my Jekyll site, and I included a &lt;code class=&quot;highlighter-rouge&quot;&gt;knitr&lt;/code&gt; folder in my &lt;code class=&quot;highlighter-rouge&quot;&gt;assets&lt;/code&gt; folder.  Make sure you update the necessary paths in the &lt;code class=&quot;highlighter-rouge&quot;&gt;render_post.r&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Now its a matter of simply sourcing the file and running &lt;code class=&quot;highlighter-rouge&quot;&gt;KnitPost&lt;/code&gt;.  Make sure that your post titles match Jekyll requirements (start with &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD&lt;/code&gt; format date).  The result is a very rapid R-studio to web post!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Moving to Jekyll</title>
   <link href="http://bradfordcondon.com/2017/04/09/introToJekyll/"/>
   <updated>2017-04-09T00:00:00-04:00</updated>
   <id>http://bradfordcondon.com/2017/04/09/introToJekyll</id>
   <content type="html">&lt;h2 id=&quot;switching-to-jekyll&quot;&gt;Switching to Jekyll&lt;/h2&gt;

&lt;p&gt;This weekend I switched my site from a Wordpress site hosted by bluehost to a Jekyll site hosted on githubpages.  I’m excited about this for plenty of reasons.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Free hostings on GithubPages&lt;/li&gt;
  &lt;li&gt;Manage all aspects of the site, including layout and posts, on github&lt;/li&gt;
  &lt;li&gt;Write in Markdown&lt;/li&gt;
  &lt;li&gt;Use R plugins to script in R Markdown (I’ll share my experience with this later!)&lt;/li&gt;
  &lt;li&gt;An excuse to practice CSS and Ruby&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s pretty win-win.&lt;/p&gt;

&lt;p&gt;If you’re looking to try this out for yourself, you’ll want Ruby/RVM, Jekyll, and github set up.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;migrating-my-old-wordpress-posts&quot;&gt;Migrating my old Wordpress posts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;http://ben.balter.com/&quot;&gt;Ben Balter&lt;/a&gt; has created a Wordpress plugin that exports existing posts to Jekyll Markdown.&lt;/p&gt;

&lt;p&gt;It’s simple: download and enable the plugin, then use the &lt;code class=&quot;highlighter-rouge&quot;&gt;export to Jekyll&lt;/code&gt; command on the toolbar.&lt;/p&gt;

&lt;p&gt;All of my Wordpress posts are now neatly in my &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder, and all associated assets are in &lt;code class=&quot;highlighter-rouge&quot;&gt;wp-content/uploads/[date]/&lt;/code&gt;.  I need to cull some of the images to cut down on space, and I have to redo the formatting of my old Wordpress posts.  For example, the MD headers have more info than we would possibly care about (such as review requests) and there are some wonky tags in the pages.  All in all, though, this works extremely well.&lt;/p&gt;

&lt;h2 id=&quot;working-with-drafts&quot;&gt;Working with drafts&lt;/h2&gt;

&lt;p&gt;I suggest reading through the Jekyll docs, but the simple gist is that we’ll write our posts directly in Markdown as drafts in &lt;code class=&quot;highlighter-rouge&quot;&gt;_drafts&lt;/code&gt;.  Executing &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve --drafts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.hongkiat.com/blog/jekyll-plugin/&quot;&gt;This post on Hongkiat’s blog&lt;/a&gt; pointed me to a plugin created by &lt;a href=&quot;http://jeffreysambells.com/&quot;&gt;Jeffrey Sambells&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We write posts in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_drafts&lt;/code&gt; folder, and mark them as &lt;code class=&quot;highlighter-rouge&quot;&gt;date: unpublished&lt;/code&gt; in the header (note that having &lt;code class=&quot;highlighter-rouge&quot;&gt;unpublished&lt;/code&gt; posts in _&lt;code class=&quot;highlighter-rouge&quot;&gt;drafts&lt;/code&gt; folder will mess with running the –draft server.  I recommend just commenting the line out until moving to &lt;code class=&quot;highlighter-rouge&quot;&gt;_publish&lt;/code&gt;)&lt;/p&gt;

&lt;p&gt;So,&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: &quot;Moving to Jekyll&quot;
  &amp;lt;!-- date: unpublished --&amp;gt;
---

# Introduction

This is my post that I get to write in *Markdown*!  

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;When we’re ready to publish the post, we move it to the &lt;code class=&quot;highlighter-rouge&quot;&gt;_publish&lt;/code&gt; folder (and uncomment the date).  Our plugin will fix the date and move it to the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder.&lt;/p&gt;

&lt;h2 id=&quot;configuring-the-site-layout&quot;&gt;Configuring the site layout&lt;/h2&gt;

&lt;p&gt;Hooboy.  As someone who has almost zero experience doing this, I’d recommend starting with an existing Jekyll theme if you feel overwhelmed.  If not, pick a CSS framework and mess around, there’s no better way to learn.  You can always use &lt;a href=&quot;https://github.com/bradfordcondon/bradfordcondon.github.io&quot;&gt;this site as a starting point&lt;/a&gt; if you’re totally lost.&lt;/p&gt;

&lt;h2 id=&quot;start-posting&quot;&gt;Start posting!&lt;/h2&gt;

&lt;p&gt;I’m really hopeful that The joy of writing in Markdown (and R Markdown) will get me back in the blogging game.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Expanding Your Horizons comes to Kentucky</title>
   <link href="http://bradfordcondon.com/outreach/science/2017/01/10/expanding-your-horizons-comes-to-kentucky/"/>
   <updated>2017-01-10T14:00:07-05:00</updated>
   <id>http://bradfordcondon.com/outreach/science/2017/01/10/expanding-your-horizons-comes-to-kentucky</id>
   <content type="html">&lt;p&gt;I’m excited to announce that, a collaboration between Dr. Ellen Crocker, Dr. Susan Odom and myself has secured an NSF EPSCoR (National Science Foundation Experimental Program to Stimulate Competitive Research) grant to bring a science conference for young girls to University of Kentucky.  The conference, an extension of the &lt;a href=&quot;http://www.eyhn.org/&quot;&gt;Expanding Your Horizons (EYH) network&lt;/a&gt;, is a great opportunity for young girls, as well as undergraduate and graduate students.  The conference will be held April 29, 2017.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;aligncenter size-full wp-image-606&quot; src=&quot;/wp-content/uploads/2017/01/logo_nonet.jpg&quot; alt=&quot;&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;To learn more, see the &lt;a href=&quot;http://uknow.uky.edu/campus-news/uk-host-stem-conference-middle-school-girls-april-29&quot;&gt;writeup in UKNow&lt;/a&gt;, or, &lt;a href=&quot;http://www.expandingyourhorizons.org/conferences/UKLex/&quot;&gt;visit the website.&lt;/a&gt;  We’re still collecting applications for activities- once we have our offerings together we will open registration to participants!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Upcoming workshop: Mushrooms 101 at Floracliff Nature Sanctuary</title>
   <link href="http://bradfordcondon.com/fun/science/2016/08/25/upcoming-workshop-mushrooms-101-at-floracliff-nature-conservatory/"/>
   <updated>2016-08-25T14:21:02-04:00</updated>
   <id>http://bradfordcondon.com/fun/science/2016/08/25/upcoming-workshop-mushrooms-101-at-floracliff-nature-conservatory</id>
   <content type="html">&lt;p&gt;I’m excited to announce that my wife &lt;a href=&quot;https://evcrockerblog.wordpress.com/&quot;&gt;Dr. Ellen Crocker&lt;/a&gt; and I will be teaching a workshop at the &lt;a href=&quot;http://www.floracliff.org/fieldstudies.html&quot;&gt;Floracliff Nature Sanctuary&lt;/a&gt; on Friday and Saturday, October 14th-15th 2016.  I’m particularly proud to partner with Floracliff: it’s a beautiful nature preserve with very cool educational opportunities available to the public.  Ellen has taken Rob Paratley’s fern workshop and she said it was fantastic.&lt;/p&gt;

&lt;p&gt;&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;No promises, but our last foray into the Daniel Boone National Forest was beautiful, and yielded a pound or two of some nice chanterelles.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2016/08/IMG_2027.jpg&quot; alt=&quot;Chanterelles&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Wild chanterelles harvested this summer in Kentucky.  Chanterelles are an example of an easy to identify edible wild mushroom.  The only poisonous look-a-like to the chanterelle is the Jack O’Lantern mushroom.  Beginning mushroom hunters will learn that chanterelles have false gills, unlike the Jack O’Lantern.  Additionaly, Jack O’Lanterns tend to grow in dense clusters, whereas chanterelles emerge distinctly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While the workshop is full, please think about signing up for the waitlist or contacting me to hear more about future mushroom forays.&lt;/p&gt;

&lt;p&gt;Participants can expect to learn the basics of fungal biology, the many ways in which fungi participate in their communities, and the principles of fungal identification.  We don’t claim to be mushroom identification experts (in fact we are routinely humbled when attending mycological forays).  However, we are trained mycologists who can teach you to appreciate the different types of fungi and the tools used to identify them.&lt;/p&gt;

&lt;p&gt;While we will talk about identification of wild mushrooms, collecting and eating wild mushrooms can be a dangerous, even deadly, past time.  In fact, &lt;a href=&quot;https://www2.ca.uky.edu/agcollege/plantpathology/ext_files/PPFShtml/PPFS-GEN-14.pdf&quot;&gt;Ellen has written an excellent fact sheet on the dangers of wild mushroom consumption.&lt;/a&gt;  I would recommend that novice mushroom hunters consult with an expert until they are extremely confident in their mushroom identification.  Even then, novice hunters should set aside 1 or 2 mushrooms if they plan to consume them.  This will be extremely useful for identifying the consumed mushroom in the event of an unintentional poisoning.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;A tentative itinerary can be found &lt;a href=&quot;http://www.floracliff.org/miscdocs/FFS_Mushrooms2016.pdf&quot;&gt;here.&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Society of Postdoctoral Scholars technical officer</title>
   <link href="http://bradfordcondon.com/2016/08/09/577/"/>
   <updated>2016-08-09T11:45:48-04:00</updated>
   <id>http://bradfordcondon.com/2016/08/09/577</id>
   <content type="html">&lt;p&gt;&lt;img class=&quot;size-full wp-image-578&quot; src=&quot;/wp-content/uploads/2016/08/Screen-Shot-2016-08-09-at-11.44.33-AM.png&quot; sizes=&quot;(max-width: 562px) 100vw, 562px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am now the technical officer for the University of Kentucky Society of Postdoctoral Scholars (SOPS).&lt;/p&gt;

&lt;p&gt;If you have any questions about SOPs, especially regarding the mailing list or &lt;a href=&quot;http://sops.as.uky.edu/&quot;&gt;the website&lt;/a&gt;, please let me know.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Where did MaCQIIME go?</title>
   <link href="http://bradfordcondon.com/2016/07/11/where-did-macqiime-go/"/>
   <updated>2016-07-11T14:29:34-04:00</updated>
   <id>http://bradfordcondon.com/2016/07/11/where-did-macqiime-go</id>
   <content type="html">&lt;p&gt;For those of you running MacQIIME on OSX El Capitan or higher, you may (like me) find that the MacQIIME executable is no longer in your path.&lt;/p&gt;

&lt;p&gt;I was a little confused:I couldn’t find it on my system, although I still had my MacQIIME installation in the default location.  What gives?&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;After reinstalling MacQIIME with no luck, I finally looked at the documentation (serves me right for being lazy).  &lt;a href=&quot;http://www.wernerlab.org/software/macqiime/macqiime-installation&quot;&gt;Turns out that the developers are aware of this issue, and plan to fix it soon.&lt;/a&gt;  For now, they offer the below line of code to execute the MacQIIME shell:&lt;/p&gt;

&lt;pre class=&quot;prettyprint hljs-dark&quot;&gt;&lt;code class=&quot;hljs gradle&quot;&gt;&amp;lt;span class=&quot;hljs-keyword&quot;&amp;gt;source&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;hljs-regexp&quot;&amp;gt;/macqiime/&amp;lt;/span&amp;gt;configs&amp;lt;span class=&quot;hljs-regexp&quot;&amp;gt;/bash_profile.txt &amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;More permanent solutions are also posted on their install page.  Thanks to the Werner lab for maintaining MacQIIME.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using the command line and perl to quickly trim files</title>
   <link href="http://bradfordcondon.com/2016/05/23/using-the-command-line-and-perl-to-quickly-trim-files/"/>
   <updated>2016-05-23T14:58:02-04:00</updated>
   <id>http://bradfordcondon.com/2016/05/23/using-the-command-line-and-perl-to-quickly-trim-files</id>
   <content type="html">&lt;p&gt;Sometimes, you have a task where the goal is to remove a certain phrase, set of characters, or trailing characters within a file. This happens all the time working with FASTA files. For whatever reason, the header description might be longer than you like. Some phylogenetics programs, for example, have a character limit on headers. Failure to fix this on your own can result in clipped headers, which in turn can result in non-unique headers and failed scripts.&lt;/p&gt;

&lt;p&gt;The simple solution is to use find and replace in your text editor. This works, but you need to type in exactly what you’d like to remove: there is no pattern matching. Furthermore, what if we have 100s of files to edit? Even if there is only one file to edit, the rule of wasted work states that if you do a task once, you’re going to have to redo it with slightly modified input data.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2016/05/Screen-Shot-2016-05-23-at-2.54.18-PM.png&quot; alt=&quot;manually searching files works, but it can be easier to automate at the command line&quot; /&gt;&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The solution: command line perl scripts. Look at the below script:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for f in *.fasta; do perl -i -pe 's/_(.*)fasta//g' &quot;$f&quot;; done&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;What does it do?&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;strong&amp;gt;for f in *.fasta;&amp;lt;/strong&amp;gt; do perl -i -pe 's/_(.*)fasta//g' &quot;$f&quot;; done&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This code block says ‘for every file ending in .fasta (the asterisk * is a wildcard), we’re going to do something. Let’s refer to the file as ‘f’.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;do perl -i -pe 's/_(.*)fasta//g' &quot;$f&quot;;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This code block runs perl on our file f (which is referred to as $f). The key part is &lt;code class=&quot;highlighter-rouge&quot;&gt;'s/_(.*)fasta//g'&amp;lt;code&amp;gt;. Character by character, here is what happens:&lt;/code&gt;&amp;lt;/code&amp;gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;s&lt;/code&gt; – this lets perl know we’re going to substitute something.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/_(.*)fasta/&lt;/code&gt; – this is the first part of perls regexp search. We look for any characters that fall between an underscore (_) and ‘fasta’. The &lt;code class=&quot;highlighter-rouge&quot;&gt;(.*)&lt;/code&gt; tells perl “any number of characters can be between the underscore and ‘fasta’ “.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/g&lt;/code&gt; Finally, this lets perl know we are doing a &lt;strong&gt;global&lt;/strong&gt; search. Without the g, perl will stop at the first match. Because my fasta files have lots and lots of headers I want to trim, I search globally.&lt;/p&gt;

&lt;p&gt;Notice there are two / characters in a row after the phrase ‘fasta’. This tells perl that we are going to replace the matched phrase with &lt;strong&gt;nothing&lt;/strong&gt;. We could just as easily write &lt;code class=&quot;highlighter-rouge&quot;&gt;'s/_(.*)fasta/lizard/g'&lt;/code&gt; which would replace the characters between the underscore and fasta with the word ‘lizard’&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;done&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This is the command that wraps up our shell script. It tells the loop to go back and work on the next file it can find.&lt;/p&gt;

&lt;p&gt;My hope is that even if you don’t fully understand how perl, regular expressions, or even the command line works, this walk through is enough for you to adapt my code above to accomplish what you need.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Plotting a SNP map by scaffold</title>
   <link href="http://bradfordcondon.com/2016/01/08/plotting-a-snp-map-by-scaffold/"/>
   <updated>2016-01-08T16:29:37-05:00</updated>
   <id>http://bradfordcondon.com/2016/01/08/plotting-a-snp-map-by-scaffold</id>
   <content type="html">&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I wanted to plot out SNPs along a chromosome. I was starting with SNP tables that were roughly equivalent to a .bed file:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scaffold00001   97859   97859
scaffold00001   176752  176752
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Where the first column is the scaffold # in the reference, and the second and third columns are SNP locations. I adapted the R code below to print out SNP densities for select scaffolds. Because we’re working with hundreds, if not thousands, of scaffolds, it’s necessary to filter out the scaffolds of interest in some way, either by number of SNPs or the specific scaffolds of interest.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;We do two quick things to help us out.  The first is use count() and match() to generate a column which essentially counts the number of SNPs for each scaffold.  Then we use order() to sort by this new SNP count column.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
    library(plyr)
    library(ggplot2)
    
    setwd(&quot;/your path&quot;)
    snps&amp;lt;-read.table(&quot;out.txt&quot;,sep=&quot;\t&quot;,header=F)
    
    colnames(snps)&amp;lt;-c(&quot;chr&quot;,&quot;start&quot;,&quot;end&quot;)
    
    #Column of # SNPs
    counts= count(snps[1])
    snps$Count &amp;lt;- counts[[2]][ match( snps$chr, counts[[1]] ) ]
    
    snpsorder= snps[order(-snps[,4]),] 
    
    subset= subset(snpsorder, Count &amp;gt; 40000)
    
    # Plot SNP density
    toprint&amp;lt;-ggplot(subset) + 
      geom_histogram(aes(x=start), binwidth=1000) + # binwidth will effectively set the printing window size.
      facet_wrap(~ chr,ncol=2) + # fiddle with number of columns depending on how many scaffolds you print
      ggtitle(&quot;SNPs&quot;) +
        xlab(&quot;nucleotide number&quot;) +   ylab(&quot;SNP density&quot;) +   theme_bw() 
    
    
    # save to .png
    png(&quot;snps.png&quot;,750,750)
    print(toprint)
    dev.off()
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The above R code will plot the only scaffold with over 40k SNP counts. I chose this number because it prints the below plot.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;alignnone&quot; src=&quot;https://i1.wp.com/i.imgur.com/x6qbUuU.png?resize=500%2C750&quot; alt=&quot;&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If I reduce the minimum to 20,000, I print a few more scaffolds&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://i1.wp.com/www.bradfordcondon.com/wp-content/uploads/2016/01/snpsall.png&quot; rel=&quot;attachment wp-att-542&quot;&gt;&lt;img class=&quot;alignnone size-full wp-image-542&quot; src=&quot;https://i1.wp.com/www.bradfordcondon.com/wp-content/uploads/2016/01/snpsall.png?fit=500%2C750&quot; alt=&quot;multiple SNP plots&quot; srcset=&quot;https://i1.wp.com/www.bradfordcondon.com/wp-content/uploads/2016/01/snpsall.png?w=500 500w, https://i1.wp.com/www.bradfordcondon.com/wp-content/uploads/2016/01/snpsall.png?resize=200%2C300 200w&quot; sizes=&quot;(max-width: 500px) 100vw, 500px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Hope this code is helpful to you!&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Metagenomics in R: Phyloseq</title>
   <link href="http://bradfordcondon.com/2015/12/26/metagenomics-in-r-phyloseq/"/>
   <updated>2015-12-26T12:36:19-05:00</updated>
   <id>http://bradfordcondon.com/2015/12/26/metagenomics-in-r-phyloseq</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://joey711.github.io/phyloseq/&quot;&gt;Phyloseq&lt;/a&gt; is a fantastic R package that really helped me get started in R.  If you need to process your metagenomic data but lack the experience in statistics/R to use, say, the ecology stats R package &lt;a href=&quot;https://cran.r-project.org/web/packages/vegan/vegan.pdf&quot;&gt;VEGAN&lt;/a&gt;, I highly recommend giving Phyloseq a try.  Running through the vignettes will produce great heatmaps, taxonomy plots, and PCA/NMDS plots.&lt;/p&gt;

&lt;p&gt; &lt;figure id=&quot;attachment_520&quot; style=&quot;width: 300px&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2015/12/vignette_nmds.png&quot; alt=&quot;NMDS&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As I became more comfortable in R, I found myself relying on Phyloseq less and using the VEGAN packages Phyloseq was wrapping more.  Still, Phyloseq is a fantastic stepping stone for scientists studying metagenomics who are not ecologists themselves.&lt;/p&gt;

&lt;p&gt;I’ll be posting some solutions to problems I’ve encountered working with my own data over the next few months.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0061217&quot;&gt;Official Phyloseq publication:&lt;/a&gt;  DOI: 10.1371/journal.pone.0061217&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>An unfortunate sweet tooth for sensationalism</title>
   <link href="http://bradfordcondon.com/science/2015/05/28/an-unfortunate-sweet-tooth-for-sensationalism/"/>
   <updated>2015-05-28T17:10:09-04:00</updated>
   <id>http://bradfordcondon.com/science/2015/05/28/an-unfortunate-sweet-tooth-for-sensationalism</id>
   <content type="html">&lt;p&gt;When I taught a science for non-science majors at Cornell University, my favorite lecture was on science in the popular media.  My learning objective was straight forward: I wanted students to pick up a newspaper, flip to the science section, and detect bullshit.&lt;/p&gt;

&lt;p&gt;This is such an important life skill because at this point in time, &lt;strong&gt;blogs, newspapers, and magazines print unscientific bullshit.&lt;/strong&gt;  They do it because it sells. &lt;strong&gt; &lt;/strong&gt;I have never seen an article so neatly package all of the problems that lead to this state of affairs than &lt;a href=&quot;http://io9.com/i-fooled-millions-into-thinking-chocolate-helps-weight-1707251800&quot;&gt;John Bohannon’s recent “Chocolate Diet” charade.&lt;/a&gt;  If you haven’t read it yet, please do.  I’ll wait.&lt;/p&gt;

&lt;p&gt;Amazing, right?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2015/05/screen-shot-2015-05-28-at-3-59-55-pm-255x300.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-study&quot;&gt;&lt;strong&gt;The study&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Here’s the breakdown: Diana Löbl and Peter Onneken are working on a “diet science” documentary, and want to show how diet news can get reported.  So they enlist Johannes to conduct a shoddy study.  Participants will either make no dietary changes, go on a diet, or go on a diet with a bar of chocolate.  By only including 15 people in their study, and measuring a wealth of factors, they were guaranteed to find that the chocolate dieters fared better in some way than the other groups.  The finding would be meaningless, but it would be “statistically significant” – within the confines of their prohibitively small study.  They lucked out, and the 5 chocolate eaters lost weight.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2015/05/untitled.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;How to Lie With Statistics, by Daryl Huff.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, they needed to publish their study somewhere.  Fortunately for Johannes, it’s getting harder and harder to distinguish “fake” publishers from real ones.  Real journals will conduct real peer review, where third-party scientists must evaluate the article before it can be published.  Due to the intentionally poor design of this study, it (hopefully) wouldn’t pass peer review in any credible journal.&lt;/p&gt;

&lt;p&gt;A fake publisher, on the other hand, will not conduct review.  Instead, it will collect a publication fee, then immediately accept and publish the article without review.  Bohannon’s paper was easily accepted into the &lt;a href=&quot;http://www.intarchmed.com/&quot;&gt;International Archives of Medicine&lt;/a&gt; without any peer review.&lt;/p&gt;

&lt;p&gt;Once the paper was published, it took off in the science and diet sections of many, many magazines, blogs, and newspapers.  You can easily understand why- “Chocolate helps you lose weight” is the sort of headline The Daily Mail and its ilk dream about.&lt;/p&gt;

&lt;h2 id=&quot;the-assignment&quot;&gt;&lt;strong&gt;The Assignment&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Back to my students.  To consider a news piece credible, students first needed to ask three questions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1.  Is the finding reported by a scientist?  Who?  Does the scientist work for a biased source?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2.  Was the finding published in a peer-reviewed journal?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3.  Can you find the article?  Do the conclusions the authors draw in the abstract reflect what is reported in the newspaper?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;How would my students fare if they were given this article?  It turns out, not so well.  Here are my answers, working from &lt;a href=&quot;http://instituteofdiet.com/2015/03/29/international-press-release-slim-by-chocolate/&quot;&gt;Bohannon’s press release&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question &lt;/strong&gt;&lt;strong&gt;1:  Is the finding reported by a scientist?  Does the scientist work for a biased source?&lt;/strong&gt;&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  Johannes Bohannon is presented as the research director of the nonprofit Institute of Diet and Health, a fictional institute.  They have a website that is intentionally minimalist.  It doesn&amp;#8217;t look incredibly legitimate, but it also doesn&amp;#8217;t scream crazy.  I imagine most students would give it a pass, despite the possibility that, say, this fictional institute is funded by Nestle.
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 2:&lt;/strong&gt;&lt;strong&gt;  Was the finding published in a peer-reviewed journal?&lt;/strong&gt;&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  Yes of course it was!  Here&amp;#8217;s the real problem predatory journals present to the common reader going forward.  &lt;a href=&quot;http://www.intarchmed.com/&quot;&gt;The International Archives of Medicine&lt;/a&gt; (IAM) is a legitimate enough sounding journal.  The Journal&amp;#8217;s website has an ISSN, citation metrics, and assurances that it is included in the JournalGuide whitelist of reputable titles.  As Bohannon reports, this journal &lt;em&gt;used &lt;/em&gt;to be reputable, as it was published under&lt;a href=&quot;http://www.biomedcentral.com/&quot;&gt; BioMed Central&lt;/a&gt;, a trustworthy open-access publisher.
&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  In short, one would need to do some serious digging to realize the journal is bogus.
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Question 3.  Can you find the article?  Do the conclusions the authors draw in the abstract reflect what is reported in the newspaper?&lt;/strong&gt;&lt;/p&gt;

&lt;p style=&quot;padding-left: 30px;&quot;&gt;
  Yes and yes.  This is an easy one, because Bohannon&amp;#8217;s wrote both the press release and the article.
&lt;/p&gt;

&lt;h2 id=&quot;the-solution&quot;&gt;&lt;strong&gt;The solution&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;It’s clear that we have a problem here.  What prevents someone from doing poor work (or fabricating work) and “publishing” the work in predatory journals?  Nothing.  And unless some sort of watchdog agency is set up to accredit peer-reviewed journals, this will not change any time soon.  If real scientists can’t distinguish a quality journal from a predatory one, what chance do non-scientists have?  As it is, I find Beall’s list of questionable publishers to be the most useful resource for investigating journals.  &lt;strong&gt;edit:  Beal’s list has been taken down.&lt;/strong&gt;   But this is a list built by a science librarian who saw a problem, and can’t be expected to be definitive or exhaustive.  The JournalGuide, cited on IAM’s website, appears to be a reasonable resource in its own right (it’s listed in &lt;a href=&quot;http://www.nature.com/news/rate-that-journal-1.17225&quot;&gt;this Nature article&lt;/a&gt; on resources for evaluating journals), but obviously it’s not perfect if IAM is listed.&lt;/p&gt;

&lt;p&gt;If policing publishers isn’t the answer, then what can be done?  Bohannon’s piece makes one thing abundantly clear: the popular media did not do their homework on this piece.  Many magazines ran the story without contacting Bohannon at all.  If he was contacted, he was never contacted by someone who knew enough about science to ask the right questions.  In short, science journalism lack skepticism.  It seems that most magazines will run an article without asking the three questions I listed above.  And even if they do, it’s clear that a more careful tact must be taken in the future to prevent spreading misinformation.&lt;/p&gt;

&lt;p&gt;Until that day arrives, I urge you, the reader, to bring a healthy dose of skepticism to every new miracle finding you read, especially related to human health, sexuality, and diet.  Do your homework, because no one else is doing it for you.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Gamification for positive habits</title>
   <link href="http://bradfordcondon.com/2015/01/30/gamification-in-science/"/>
   <updated>2015-01-29T20:30:27-05:00</updated>
   <id>http://bradfordcondon.com/2015/01/30/gamification-in-science</id>
   <content type="html">&lt;p style=&quot;text-align: left;&quot;&gt;
  For as long as I can remember, I&amp;#8217;ve enjoyed video games.  If there&amp;#8217;s leveling up, character optimization, or strategic battles to be had, I&amp;#8217;m in.  At my worst, I can burn an entire Sunday; I&amp;#8217;ll admit that I&amp;#8217;ve banned myself from playing &lt;a href=&quot;http://blog.dota2.com/&quot;&gt;DOTA2&lt;/a&gt; after one too many late nights.
&lt;/p&gt;

&lt;p style=&quot;text-align: left;&quot;&gt;
  At their best, video games can be a vehicle for me to work on my goals.  For example, I&amp;#8217;ve been changing the language settings on my videogames to Spanish.  I&amp;#8217;m not learning a ton of practical vocabulary, sure, but immersion is a great thing, even if it&amp;#8217;s silly.
&lt;/p&gt;
&lt;figure style=&quot;width: 310px&quot; class=&quot;wp-caption aligncenter&quot;&gt;

&lt;img class=&quot;&quot; src=&quot;https://i1.wp.com/hearthstone.blizzpro.com/wp-content/uploads/sites/4/2014/11/Guardian-de-Cobalto.png?resize=310%2C433&quot; alt=&quot;&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;figcaption class=&quot;wp-caption-text&quot;&gt;The vocabulary can be a little silly, but immersion is good.&lt;/figcaption&gt;&lt;/figure&gt;

&lt;p style=&quot;text-align: left;&quot;&gt;
  A newer concept for me is &lt;a href=&quot;http://en.wikipedia.org/wiki/Gamification&quot;&gt;Gamification&lt;/a&gt;.  At it&amp;#8217;s core, gamification is about turning stuff that you want to get done into a game.  &lt;a href=&quot;https://www.duolingo.com/&quot;&gt;Duolingo&lt;/a&gt; is a simple example of this.  Complete vocabulary lessons to level up and unlock new lessons.  When accomplishing tasks results in leveling up and earning rewards, the same compulsion that lead me to waste my teen years playing Everquest will now work in my favor.  That&amp;#8217;s the idea, at least, and I manage to keep up with Duolingo fairly well.
&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2015/01/screen-shot-2015-01-29-at-7-23-39-pm-680x510.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p style=&quot;text-align: left;&quot;&gt;
  &lt;a href=&quot;https://habitrpg.com/&quot;&gt;HabitRPG&lt;/a&gt; is &lt;strong&gt;MUCH&lt;/strong&gt; more ambitious with this concept.  It goes all out, giving you an avatar with the ability to earn mounts, group up with friends, and fight bosses.  You get to choose your &amp;#8220;quests&amp;#8221; so it can be tailored for whatever purpose you&amp;#8217;d like.  If you set a daily goal to study for one hour, you&amp;#8217;ll gain experience points and gold for completing it, but take damage each day you feel to check it off.  You can then spend accumulated gold to buy rewards that you specify, or in-game swag.

&lt;p style=&quot;text-align: left;&quot;&gt;
  There&amp;#8217;s no doubt that consistency and repetition are the keys to setting up positive habits.  This is where a tool like HabitRPG shines- it rewards positive habits in a fun and imaginative way.
&lt;/p&gt;

&lt;p style=&quot;text-align: left;&quot;&gt;
  I&amp;#8217;m setting up my HabitRPG account to encourage more productive use of my free time.  In a future blog post, I&amp;#8217;ll reflect on how gamification can be used in the laboratory.
&lt;/p&gt;
&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Lab notebook software</title>
   <link href="http://bradfordcondon.com/2014/10/29/lab-notebook-software/"/>
   <updated>2014-10-29T13:56:51-04:00</updated>
   <id>http://bradfordcondon.com/2014/10/29/lab-notebook-software</id>
   <content type="html">&lt;p&gt;Last year, I wrote about &lt;a href=&quot;http://bradfordcondon.wordpress.com/2013/07/18/a-digital-notebook/&quot; title=&quot;A digital notebook&quot;&gt;using Evernote as my digital lab notebook.&lt;/a&gt;  With the release of &lt;a href=&quot;http://findingsapp.com/&quot;&gt;Findings, a new digital notebook software&lt;/a&gt; from the people who created my &lt;a href=&quot;http://bradfordcondon.wordpress.com/2013/07/07/papers-as-a-reference-manager/&quot; title=&quot;Papers as a reference manager&quot;&gt;favorite reference management software Papers&lt;/a&gt;, I thought I would reflect on my digital notebook needs.&lt;/p&gt;

&lt;p&gt;A digital notebook should be:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Indexed and searchable&lt;/strong&gt;, with both automatic (embedded text searching)  and manual (tags) search functions.  Evernote handles this quite well- I can easily manage what tags I have available and organize them how I wish, but searching my notebook will also find terms in embedded word documents and PDFs, for example.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;OS integration.  &lt;/strong&gt;The great thing about drinking the Apple koolaid is these apps can work well across platforms.  We don’t tend to have our laptop on our experimental benchtop; being able to pull up a notebook on my iPhone is great.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Multimedia friendly.&lt;/strong&gt;  My notebook is a mix of text, snapshots, data annotated in Powerpoint, excel files, word documents, and PDFs.  Again, Evernote handles this quite well.  It falters a bit in flexibility when printing out my notebook- usually my images don’t come out formatted quite right and I end up with a single image per page.&lt;figure id=&quot;attachment_393&quot; style=&quot;width: 292px&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[&lt;img class=&quot;wp-image-393 &quot; src=&quot;/wp-content/uploads/2014/10/screen-shot-2014-10-29-at-11-56-28-am.png?resize=292%2C241&quot; alt=&quot;&quot; sizes=&quot;(max-width: 292px) 100vw, 292px&quot; data-recalc-dims=&quot;1&quot; /&gt;]&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A sample printout from my notebook. Note that I have a mix of media types (annotated powerpoint files, notebook scans, raw text). While Evernote holds them all seamlessly, printing to this PDF (and into a paper notebook) results in clunky blank pages. There is also no support for printing header information: ie experiment name, tags, dates… I have to manually write the file name on each page afterwards.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Traceable.  &lt;/strong&gt;Ultimately, a lab notebook is for tracing the lineage of data.  Whether this is at the troubleshooting or the writeup phase, I need to understand what the starting material, protocol, and resulting output were at each stage of the experiment.  Science is seldom perfect, and a good lab notebook can prevent some confusing mixups (was that DNA sample prepared before or after I optimized the pH of buffer X?)  Here is where Evernote isn’t perfect, largely because this is a science problem.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I’m looking forward to trying out &lt;a href=&quot;http://findingsapp.com/&quot;&gt;Findings&lt;/a&gt; and reporting back how it improves on these key issues (and others I haven’t thought about).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Who are CyberVor?</title>
   <link href="http://bradfordcondon.com/fun/2014/08/06/who-are-cybervor/"/>
   <updated>2014-08-06T17:22:27-04:00</updated>
   <id>http://bradfordcondon.com/fun/2014/08/06/who-are-cybervor</id>
   <content type="html">&lt;p&gt;Well, the &lt;a href=&quot;http://www.bbc.com/news/technology-28654613&quot;&gt;BBC&lt;/a&gt; and The &lt;a href=&quot;http://www.nytimes.com/2014/08/06/technology/russian-gang-said-to-amass-more-than-a-billion-stolen-internet-credentials.html?hp&amp;amp;action=click&amp;amp;pgtype=Homepage&amp;amp;version=LedeSum&amp;amp;module=first-column-region&amp;amp;region=top-news&amp;amp;WT.nav=top-news&amp;amp;_r=0&quot;&gt;New York Times&lt;/a&gt; have both published pieces on the Russian hackers “CyberVor”.  The claim is that  1.2 billion user names and passwords from some 420,000 websites have been hacked.  The sites/users affected, nature of the vulnerability, and severity of the threat have not been disclosed.&lt;/p&gt;

&lt;p&gt;Skeptics have pointed out that, well, &lt;a href=&quot;http://www.forbes.com/sites/kashmirhill/2014/08/05/huge-password-breach-shady-antics/&quot;&gt;things don’t really add up.&lt;/a&gt;  The biggest problem is that The New York Times was fed the CyberVor piece by Hold Security firm.  This is the very same firm that stands to profit from this security breach, by charging $120/year for their services.  The New York Times piece, to my eye, does not validate the information provided by Hold Security.  The truth is that its in Hold Security’s interest to exaggerate the breach, and in The New York Times’ interest to report the story as quickly as possible.  Without released facts or data, this entire story could have been fabricated by Hold Security.  This is unlikely, as The New York Times piece claims that two unaffiliated sources verified the database as authentic.  Still, experts seem to think the threat could be exaggerated.&lt;/p&gt;

&lt;p&gt;So what does Hold Security know about CyberVor?  According to The New York Times piece (which means according to Hold Security, who sell the solution to the CyberVor problem), CyberVor is made up of fewer than a dozen men in South Central Russia.  Hold Security knows this because they have been in communication with them.  Seriously.&lt;figure style=&quot;width: 293px&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;&quot; src=&quot;https://i0.wp.com/upload.wikimedia.org/wikipedia/en/6/67/Hackersposter.jpg?resize=293%2C434&quot; alt=&quot;&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ll be interested in seeing how this develops.  As it is, I see a lot of big claims with no evidence or specifics, and the group making the claim profiting from the resulting panic.  I also find it odd that CyberVor and Hold Security communicate.  Is that normal?  Do hackers usually chat with data security firms?  I can’t even verify that CyberVor is a thing from anyone other than Hold Security because, well, Hold Security coined the term CyberVor, and that is all we have to go on.&lt;/p&gt;

&lt;p&gt;As other skeptics have advised, however the threat plays out, taking cyber security seriously is a wise decision.  I recently invested in password management software, and highly recommend it.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>MOOCs and me</title>
   <link href="http://bradfordcondon.com/2014/07/04/moocs-and-me/"/>
   <updated>2014-07-04T15:52:41-04:00</updated>
   <id>http://bradfordcondon.com/2014/07/04/moocs-and-me</id>
   <content type="html">&lt;p&gt;MOOCs (Massive Open Online Courses)  are an interesting development in higher education.  At their most impressive, they are a way for brilliant educators to reach thousands of students at a time, all across the world.  MOOCs have the potential to remove educational barriers like learning disabilities, economic constraints, geographic realities, or busy life schedules.  My alma mater, Cornell, &lt;a href=&quot;http://www.news.cornell.edu/stories/2013/10/cornell-s-first-four-moocs-launch-next-semester&quot;&gt;launched their first wave of MOOCs last semester.&lt;/a&gt;  Cornell prides itself on catering to “any person, any study” and its not hard to see how MOOCs can drive this mission forward.&lt;/p&gt;

&lt;p&gt;Of course, MOOCs are entering the scene at a time when higher education is reconsidering its educational tenets.  A traditional classroom brings to mind stuffy tiered lecture halls with esteemed professors reciting knowledge to enraptured students (Tom Wolfe’s &lt;a href=&quot;http://www.amazon.com/Am-Charlotte-Simmons-Novel/dp/0312424442&quot;&gt;&lt;em&gt;I Am Charlotte Simmons&lt;/em&gt;&lt;/a&gt; comes to mind).  Educators have long suspected that these teaching methods are not ideal, but &lt;a href=&quot;http://www.pnas.org/content/early/2014/05/08/1319030111&quot;&gt;recent high profile publications&lt;/a&gt; have provided clear evidence that there are better ways to engage students.  Active learning is a broad term, but it encompasses classrooms where students participate in activities or discussions. Instead of tuning out a professor (intentionally or not), a student must engage the material.&lt;/p&gt;

&lt;p&gt;MOOCs certainly don’t have to embody one form of education or another.  They have the capacity to be very active educational formats.  Discussion boards, problem sets, live text or video chats, course projects, and peer review all require students to work alone or together to master material.  On the other end of the spectrum, a MOOC can be a string of youtube videos or reading assignments, with multiple choice quizzes at the end of each section.  The value of such courses is questionable.  When a MOOC is offered for free, it’s not a big problem.  But as institutions offer “online certificates” for participation, the issue becomes an important one.&lt;/p&gt;

&lt;p&gt;I’ve been participating in the &lt;a href=&quot;https://www.coursera.org/specialization/jhudatascience/1?utm_medium=courseDescripTop&quot;&gt;Data Science course track&lt;/a&gt; on Coursera, and am rounding the bend on the second module.  This sequence of courses is put together by Brian Caffo, Jeff Leek, and Roger Peng at John Hopkins University.  I think that theres a lot of positive examples in this course.  The community message board is quite active, with attentive TAs who field questions.  Much of the coursework is active- each week I’ve been asked to write my own code to accomplish certain tasks.  The course itself is crowdsourced for grading, a sort of peer-review lite.  The &lt;a href=&quot;http://swirlstats.com/&quot;&gt;swirl() modules&lt;/a&gt; deserve a special commendation- these educational R packages teach you how to perform tasks in R right within the R environment.&lt;/p&gt;

&lt;p&gt;On the other hand, the weekly video lectures don’t offer very much beyond some light structure for the course.  Skipping them and relying on a search engine for the quizzes is more economical and less frustrating (nothing is worse than listening to a lecture series and taking extensive notes, only to be quizzed on what I view as minutiae).&lt;/p&gt;

&lt;p&gt;Overall I’m very grateful to the professors for putting the course together, and even more grateful that they offer it for free online (coursera offers an optional paid certificate).  Where the course succeeds, it exemplifies the potential for active learning in MOOCs.  At the end of the day, we have to remember that this is the internet.  There are seemingly limitless resources for education available.  What we demand from formal instruction is mentorship, guideposts, motivation, and accountability.  We can watch a video lecture any day- coursework should ignite our curiosity to work with the material ourselves (or at least hold a deadline over us to demand we do!).  Ultimately, we won’t learn unless we’re motivated and take the time to do so.&lt;/p&gt;

&lt;p&gt;If you’re interested in learning more about active learning practices, I recommend using the resources that “Centers for Teaching Excellence” at various universities (including &lt;a href=&quot;http://www.cte.cornell.edu/&quot;&gt;Cornell&lt;/a&gt;) have put together.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Scientific writing is dry (but that&amp;#8217;s OK)</title>
   <link href="http://bradfordcondon.com/fun/2014/04/28/scientific-writing-is-dry-but-thats-ok/"/>
   <updated>2014-04-28T11:55:59-04:00</updated>
   <id>http://bradfordcondon.com/fun/2014/04/28/scientific-writing-is-dry-but-thats-ok</id>
   <content type="html">&lt;p&gt;This morning I was delighted to come across the &lt;a href=&quot;http://www.imafungus.org/&quot;&gt;IMA Fungus journal&lt;/a&gt;.  Put out by the International Mycological Association , the journal title (which primarily publishes species announcements and descriptions) playfully introduces each organism with a friendly “Hello, I’m a fungus!”  The truth is, scientific literature is seldom so fun and informal.&lt;/p&gt;

&lt;p&gt;When I submitted my PhD dissertation draft to my committee, perhaps the most common complaint I got was that I was having too much fun with the writing.  Given the choice, I  always prefer to be playful than bland in my writing.  In science, this isn’t necessarily a good thing.  Primary scientific writing values clarity and correctness.  In trying to evoke vivid descriptions, I like to describe science with flair, pushing my metaphors to the absurd.  For example, I wrote that fungi forge weapons to wield against the parapets of plant defense, or that they brew novel molecules in musty cellular laboratories.&lt;/p&gt;

&lt;p&gt;The problem is that while I have a lot of fun writing statements like this, it empowers organisms with sentience and intent.  It is incorrect.  So such statements are refined to purge embellishments (fungi produce molecules that specifically target host defenses, and produce diverse secondary metabolites in specialized cellular structures).&lt;figure id=&quot;attachment_315&quot; style=&quot;width: 300px&quot; class=&quot;wp-caption aligncenter&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;size-medium wp-image-315&quot; src=&quot;/wp-content/uploads/2014/04/screen-shot-2014-04-28-at-11-53-23-am-300x217.png?fit=300%2C217&quot; alt=&quot;Me being dangerously informal during my exit seminar.&quot; srcset=&quot;https://i2.wp.com/www.bradfordcondon.com/wp-content/uploads/2014/04/screen-shot-2014-04-28-at-11-53-23-am.png?w=1154 1154w, https://i2.wp.com/www.bradfordcondon.com/wp-content/uploads/2014/04/screen-shot-2014-04-28-at-11-53-23-am.png?resize=300%2C217 300w, https://i2.wp.com/www.bradfordcondon.com/wp-content/uploads/2014/04/screen-shot-2014-04-28-at-11-53-23-am.png?resize=1024%2C742 1024w&quot; sizes=&quot;(max-width: 300px) 100vw, 300px&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Me being dangerously informal during my exit seminar&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Obviously we should strive to be correct in our communication of science.  When publishing, it must be clear what we did, what we observed, and what we believe these results mean.  We must write knowing that english is not the primary language of those who are interested in our experiments.  But does this mean that we can’t have any fun?  I can’t speak for all scientists, but my love of biology is not sterile and precise.  It is colorful and messy.  It is most certainly anthropomorphized (despite my higher faculties being well aware that fungi are not sentient creatures).&lt;/p&gt;

&lt;p&gt;We scientists are a fun bunch.  This fact is more than evident from any academic conference (take the raging party that is the Fungal Genetics Conference).  But our writing is often denser than &lt;a href=&quot;http://www.amazon.com/Mestemacher-Fitness-Bread-17-6-Ounce-Packages/dp/B000LKZ7MA&quot;&gt;German fitness bread.&lt;/a&gt;  Maybe it’s impossible to get away from that in our formal writing without introducing ambiguity or compromising our professionalism.  I suppose some day I’ll find out.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How many copies of my thesis/dissertation should I order?</title>
   <link href="http://bradfordcondon.com/2014/03/17/how-many-copies-of-my-thesisdissertation-should-i-order/"/>
   <updated>2014-03-16T23:23:00-04:00</updated>
   <id>http://bradfordcondon.com/2014/03/17/how-many-copies-of-my-thesisdissertation-should-i-order</id>
   <content type="html">&lt;p&gt;You’re finished!  You’ve spent hours writing and rewriting your thesis or dissertation (such semantics!), braved your defense, and spent even more time addressing your committee revisions (to say nothing of the years of hard work that got you here).  Congratulations.  Time to submit and watch Buffy the Vampire Slayer for eight days straight, right?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2014/01/screen-shot-2014-01-17-at-1-52-17-pm.png&quot; alt=&quot;buffy&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This sums up my feelings on graduation nicely&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A couple of issues I hadn’t thought about came up before I clicked submit, however.  One of these was how many copies of my dissertation I should order.  I had no clue, and I was pretty braindead by this point.  So I thought I’d list some people who might want a copy for future generations of sleep-deprived and deadline flaunting scholars.  If you forget somebody, that’s OK- I was able to re-order a single copy for ~$80.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Family&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your parents, and perhaps grandparents, are a given.  After 4+ years of not being able to explain your work to anyone, having a 5 pound coffee table book to gesture at is going to make their day.  Don’t forget to include them in the acknowledgments!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Friends&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I didn’t order a copy for any friends, but that doesn’t mean you won’t want to.  Finish before a friend who started the same year?  Nothing rubs it in their face quite like a printed copy of your dissertation.  It sure is an expensive snub, though.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your advisor&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Do not forget a copy for your advisor.  Again, write something nice in the acknowledgements or pay the price.  I learned the hard way that “To my favorite advisor” isn’t acceptable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Your committee&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Did you receive a lot of guidance from your committee, or shed a lot of tears in their office?  This can be a nice gesture of thanks.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/wp-content/uploads/2014/01/screen-shot-2014-01-17-at-1-46-02-pm.png&quot;&gt;dissertation&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;I keep my dissertation on my person at all times (if only to stop bullets)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Your lab&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is the one place where someone might open your dissertation for very practical purposes.  Over the course of my time at Cornell I’ve consulted the dissertations of others surprisingly often, be it for a unique perspective on the literature or to see the nuances of methodology not written out in peer-reviewed publications.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The library&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Your campus library probably prints a copy of your dissertation for its own purposes, but its worth checking that this isn’t expected of you.  How else could you perform the infamous $20 experiment, hiding a crisp bill in the meat of your dissertation and returning year after year to see if its disturbed?  Also, some departments keep separate dissertation collections- see if you are expected to contribute!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Yourself&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This probably goes without saying.  You may feel like you never want to see this cursed book again, but you probably will.  Even if its only to drag it out as a war story, or to prove to your date that you really &lt;em&gt;can&lt;/em&gt; run a southern blot.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Celebrity burgers a reality</title>
   <link href="http://bradfordcondon.com/2014/02/28/celebrity-burgers-a-reality/"/>
   <updated>2014-02-28T12:53:03-05:00</updated>
   <id>http://bradfordcondon.com/2014/02/28/celebrity-burgers-a-reality</id>
   <content type="html">&lt;p&gt;Back in September last year, &lt;a href=&quot;/2013/09/14/ethical-implications-of-the-stem-cell-burger/&quot;&gt;I explored some possibilities that the “Stem Cell burger” opened up.&lt;/a&gt;  Perhaps the most far-fetched idea I had was to produce meat from cloned celebrity stem cells.&lt;/p&gt;

&lt;p&gt;It seems this idea wasn’t as absurd as I thought.  A new company has launched called &lt;a href=&quot;http://bitelabs.org/&quot;&gt;Bitelabs&lt;/a&gt;, claiming they will produce celebrity-derived meats in salami-form.&lt;figure style=&quot;width: 487px&quot; class=&quot;wp-caption alignnone&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot;size-full wp-image&quot; id=&quot;i-309&quot; alt=&quot;Image&quot; src=&quot;/wp-content/uploads/2014/02/screen-shot-2014-02-28-at-12-48-52-pm.png?resize=487%2C157&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So is it a hoax or a real company?  The &lt;a href=&quot;http://www.slate.com/blogs/future_tense/2014/02/26/bite_labs_is_probably_a_prank_artisanal_salami_from_celebrity_tissue_samples.html&quot;&gt;internet isn’t quite sure what to make of it.&lt;/a&gt;  My previous post covered the feasibility of such an endeavor, but the ethics remains a gray zone. In the meantime, I fully support the discussion, and I applaud Bitelabs’ understated strategy.  Personally I’d be interested in trying a cloned meat product, regardless of who the donor was.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Scoop.it! and content curation</title>
   <link href="http://bradfordcondon.com/2014/01/10/scoop-it-and-content-curation/"/>
   <updated>2014-01-10T11:35:07-05:00</updated>
   <id>http://bradfordcondon.com/2014/01/10/scoop-it-and-content-curation</id>
   <content type="html">&lt;p&gt;In the past, I’ve written about the importance of setting up custom newsfeeds for current publications in your field, and using CiteUlike to share references.  While these tools can be useful for discovering and archiving content, they are not ideal for sharing and disseminating it.  Gathering content and distilling it for others is an art: the art of content curation.&lt;/p&gt;

&lt;p&gt;Lately I’ve been using &lt;a href=&quot;http://www.scoop.it/&quot;&gt;Scoop.it&lt;/a&gt; for content curation and outreach.  I created two main channels: one for &lt;a href=&quot;http://www.scoop.it/t/popular-bioscience&quot;&gt;science stories in the news,&lt;/a&gt; and another for new research &lt;a href=&quot;http://www.scoop.it/t/fungal-genetics&quot;&gt;in my field of fungal genetics&lt;/a&gt;.  By picking a key paragraph from the discussion or abstract, as well as a catchy image, I can easily pin small blurbs for each article (called scoops) to a news stream.  Each feed is easy to skim through, can be tagged and annotated, and allows me to easily review articles I was interested in.  RSS feeds for each topic can be fed elsewhere, such as a &lt;a href=&quot;http://www.bradfordcondon.com/&quot;&gt;flagship brand&lt;/a&gt; website.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2014/01/screen-shot-2014-01-10-at-11-31-56-am-300x295.png&quot; alt=&quot;&amp;lt;img class=&amp;quot;size-medium wp-image-268&amp;quot; alt=&amp;quot;Aggregated scoops on a stream.&amp;quot; src=&amp;quot;/wp-content/uploads/2014/01/screen-shot-2014-01-10-at-11-31-56-am-300x295.png?fit=300%2C294&amp;quot; srcset=&amp;quot;https://i2.wp.com/www.bradfordcondon.com/wp-content/uploads/2014/01/screen-shot-2014-01-10-at-11-31-56-am.png?w=1278 1278w, https://i2.wp.com/www.bradfordcondon.com/wp-content/uploads/2014/01/screen-shot-2014-01-10-at-11-31-56-am.png?resize=300%2C295 300w, https://i2.wp.com/www.bradfordcondon.com/wp-content/uploads/2014/01/screen-shot-2014-01-10-at-11-31-56-am.png?resize=1024%2C1006 1024w&amp;quot; sizes=&amp;quot;(max-width: 300px) 100vw, 300px&amp;quot; data-recalc-dims=&amp;quot;1&amp;quot; /&amp;gt;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Aggregated scoops on a stream&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Perhaps most importantly, Scoop.it integrates other social media quite handily.  By default, I tweet all of my scoops.  Articles of general interest (generally from my science news stream) I often post to Facebook, which sometimes trigger a discussion.  This keeps me engaged in science communication, as well as in practice using social media (that I might otherwise let lie fallow).&lt;/p&gt;

&lt;p&gt;There are certainly other tools for content aggregation, but the free Scoop.it account works quite well (a subscription offers several handy features, including sharing curation duties for a topic with others).  Feel free to leave a comment recommending other services.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Consider the ostracod</title>
   <link href="http://bradfordcondon.com/2013/12/03/consider-the-ostracod/"/>
   <updated>2013-12-03T16:18:24-05:00</updated>
   <id>http://bradfordcondon.com/2013/12/03/consider-the-ostracod</id>
   <content type="html">&lt;p&gt;What does it mean to be a scientist?  I present to you some overly poetic thoughts on the topic.&lt;/p&gt;

&lt;p&gt;It was a soggy morning in early Fall when I encountered an ostracod.  I had just submitted my dissertation, I was unsure about my future, I was exhausted.  To celebrate, I went hiking with a party of undergraduate and graduate students led by the intrepid &lt;a href=&quot;http://www.plantpath.cornell.edu/labs/hodge/&quot;&gt;Kathie Hodge&lt;/a&gt; foraging for mushrooms.  We had chased the rain but missed its fungal fruit, finding only a small handful of mushroom gold, &lt;a href=&quot;http://en.wikipedia.org/wiki/Chanterelle&quot;&gt;Chanterelles&lt;/a&gt;.  We decided to return home, and on the walk back,  came across puddles housed in muddy tire tracks.  They were teeming with tiny life.  The sleek tadpoles, buzzing flies, and squirming larvae held our attention for a while, but we soon spotted a most unusual creature.&lt;/p&gt;

&lt;p&gt;Laying still, it looked like a small pebble the size of a grain of rice, its surface coated in slimy mud.  Careful observation found that the pebble scooted around the puddle in small circles, propelled as if by an onboard motor.  Enthralled, I plucked one and teased it on my finger.  What was this microscopic backwoods clam?  Amazingly, a tiny shrimp-like head poked out, with sweeping tendrils.  I immediately announced we had discovered a lost species of clam-shrimp, and found a nearby coca cola bottle to collect one.  Before we could gather another, an ATV rode by, crashing through the puddles and hopelessly clouding our view.&lt;/p&gt;

&lt;p&gt;Arriving at the lab, we armed ourselves with a microscope, and the knowledge of the scientific community.  Kathie immediately decided we were dealing with an &lt;a href=&quot;http://en.wikipedia.org/wiki/Ostracod&quot;&gt;ostracod&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;&quot; src=&quot;https://i0.wp.com/upload.wikimedia.org/wikipedia/commons/thumb/9/93/Ostracod.JPG/800px-Ostracod.JPG?resize=800%2C595&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;An ostracod. Photo from Wikipedia: http://en.wikipedia.org/wiki/File:Ostracod.JPG&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Observing our ostracod (we named her Sue) scooting around under the microscope was a joy.  My curiosity for Sue was fed by an excellent website by Robin James Smith at the Lake Biwa Museum&lt;strong&gt;edit&lt;/strong&gt; this website has since been taken down.  &lt;/p&gt;

&lt;p&gt;The amazing thing about biology is that a simple walk through the woods can ignite an entire afternoon of looking through a microscope and learning something new and bizarre.  I now know that ostracods can produce spermatozoa up to ten times their body length, can be bioluminescent, and can hunt in groups!  Every organism has an untold story, with so much left to learn and be discovered.  And thanks to the unbelievable scope and rigor of science, a discovery can easily climb the scaffolds of human knowledge.  We can just as easily reach the peak, and wonder at the reality just beyond our comprehension.&lt;/p&gt;

&lt;p&gt;I don’t think one needs a PhD to appreciate the beauty of the world.  Anyone who is excited to explore life, big or small, is a scientist in some way.  The life of a ‘real’ scientist is filled with lab notebooks, presentations, grant proposals, budget forms.  But these things are carried out in exchange for that spark of wonder that can be found in a muddy pond in the woods, in our blood, or floating in the Atlantic.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>The Tannosome</title>
   <link href="http://bradfordcondon.com/2013/09/26/the-tannosome/"/>
   <updated>2013-09-26T16:35:04-04:00</updated>
   <id>http://bradfordcondon.com/2013/09/26/the-tannosome</id>
   <content type="html">&lt;p&gt;An article posted on the &lt;a href=&quot;http://blogs.scientificamerican.com/food-matters/2013/09/20/tannosomes-and-the-trickle-around-effect/&quot;&gt;Scientific American blog&lt;/a&gt; caught my attention recently.  Researchers have discovered the existence of a new organelle, the tannosome, in plants.  It is this organelle that produces tannins, of great interest to wine lovers.  The scientific article in question, posted to &lt;a href=&quot;http://sco.lt/5b1zST&quot;&gt;my scoop.it&lt;/a&gt;, was officially published in the Annals of Botany on September 25th 2013, but it barely created a ripple in the news cycle.  Why not?&lt;/p&gt;

&lt;p&gt;Organelles are extraordinarily important in biology.  An organelle is, by definition, a membrane-bound compartment within a (eukaryotic) cell that performs some specialized function.  Much like each organ within the body performs a specific task, organelles within the cell include the DNA-replicating and transcribing nucleus, the “energy factory” mitochondria, and the “storage center” vacuole.  (Most) plants possess chloroplasts, organelles which house the photosynthetic machinery required to harness energy from light.&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot; &quot; src=&quot;https://i1.wp.com/upload.wikimedia.org/wikipedia/commons/thumb/1/11/Animal_Cell.svg/800px-Animal_Cell.svg.png?resize=560%2C323&quot; alt=&quot;&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A diagram of the organelles in a typical animal cell.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Tannins are known as secondary metabolites.  This term covers a huge range of array of chemically diverse molecules, lumped together for not being “primary” metabolites, such as proteins, sugars, or ribonucleic acids (such as DNA).  Often, but not always, secondary metabolites are important for “non-primary” processes, such as herbivory defense, pheremones, or pigmentation.  Tannins can be found in most plants, and may function in herbivory defense, pathogen defense, and UV-protection.  Humans are quite fond of tannins for their role in flavoring beverages&lt;a href=&quot;http://winefolly.com/review/what-are-tannins-in-wine/&quot;&gt;, particularly wine&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Prior to this publication, there were reports of Tannins being found in chloroplasts- but no one had the idea that these were specialized unique organelles.  Similarly, the authors point out that chloroplasts &lt;em&gt;still produce&lt;/em&gt; a number of secondary metabolites (phenolics, for example) despite this new organelle.  From what I can gather, the authors don’t make a case for this organelle producing anything other than tannins.&lt;/p&gt;

&lt;p&gt;So why the media silence?  &lt;a href=&quot;http://blogs.scientificamerican.com/food-matters/2013/09/20/tannosomes-and-the-trickle-around-effect/&quot;&gt;One article&lt;/a&gt;notes that with a lead-in to tea and wine, it really should have caught some buzz.  Not to mention the discovery of a new organelle (albeit derived from a known organelle) is noteworthy in anyone’s book, even if it doesn’t have obvious implications past tannin biosynthesis.  For whatever reason, it just isn’t the discovery that ignites people’s interest.  Science news is generally dominated by medicine, astronomy, sex, nutrition, and the cute or gross.  Perhaps if the finding had more implications for alcohol production or consumption, the media would have taken notice.  Maybe when tannosomes are harnessed to produce a new altered-tannin  wine, the world will take notice.  But without this study, one would not even know where to begin such a task.&lt;/p&gt;

&lt;p&gt;Sources:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Brillouet JM, Romieu C, Schoefs B, Solymosi K, Cheynier V, et al. (2013) The tannosome is an organelle forming condensed tannins in the chlorophyllous organs of Tracheophyta. Ann Bot 112: 1003–1014.
Organelle image: from wikimedia commons, http://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Animal_Cell.svg/800px-Animal_Cell.svg.png&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Ethical implications of the Stem Cell Burger</title>
   <link href="http://bradfordcondon.com/fun/2013/09/14/ethical-implications-of-the-stem-cell-burger/"/>
   <updated>2013-09-14T05:00:47-04:00</updated>
   <id>http://bradfordcondon.com/fun/2013/09/14/ethical-implications-of-the-stem-cell-burger</id>
   <content type="html">&lt;p&gt;I am  writing a short piece on the &lt;a href=&quot;http://www.cnn.com/2013/08/05/world/europe/europe-stem-cell-burger-ott&quot;&gt;Stem Cell Burger&lt;/a&gt; which was unveiled early last month.  The &lt;a href=&quot;http://culturedbeef.net/&quot;&gt;Cultured Beef website&lt;/a&gt; is eager to point out the many benefits this technology could have for global research usage and animal ethics.  &lt;a href=&quot;http://www.huffingtonpost.com/paul-knoepfler/test-tube-burger_b_3726288.html&quot;&gt;Opponents&lt;/a&gt; are just as quick to point out the possibility of unknown side-effects.&lt;/p&gt;

&lt;p style=&quot;text-align:left;&quot;&gt;
  Cultured Beef may change the world- but maybe not in ways people expect.  I&amp;#8217;ve jotted down a few of the more extreme implications for Cultured Beef.  I&amp;#8217;m not an actual proponent of all these ideas: this is really just a thought experiment for possible ethical issues downstream of culturing just beef.
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1)  Eating endangered species.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Why limit ourselves to cows?  If we can string together cow cells grown in culture, why not the cells of a Bald Eagle?  It would be arguably the most American burger possible, and wouldn’t require death or suffering from of our favorite bird of prey.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2)  Eating extinct species.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;With scientists pondering the implications of cloning extinct species, such as the &lt;a href=&quot;http://newsfeed.time.com/2012/03/14/the-woolly-mammoths-return-scientists-plan-to-clone-extinct-creature/&quot;&gt;woolly mammoth&lt;/a&gt;, why not clone these extinct species into the Cultured Beef pipeline?  I imagine lots of people would be very excited to eat woolly mammoth burgers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;span style=&quot;font-size:15px;line-height:1.6;&quot;&gt;3)  Eating people.&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Cannibalism is one of those taboos that people love to joke about, but when push comes to shove, few in our modern society would seriously consider.  But what if there was a meat you could buy that came from people, &lt;em&gt;without anyone being hurt or killed&lt;/em&gt;?  And we aren’t just limited to eating any old person.  Cultured cells of celebrities, dead and living.  Bill Clinton hot dogs.  Miley Cyrus patties.  American celebrity culture is ready.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/3.bp.blogspot.com/-zpL8KOupGIo/UR9KtdD9T6I/AAAAAAAAAzU/4KfZRfwLbA4/s320/miley-cyrus-quiff.jpg&quot; alt=&quot;&amp;lt;img alt=&amp;quot;&amp;quot; src=&amp;quot;https://i2.wp.com/3.bp.blogspot.com/-zpL8KOupGIo/UR9KtdD9T6I/AAAAAAAAAzU/4KfZRfwLbA4/s320/miley-cyrus-quiff.jpg?resize=207%2C320&amp;quot; data-recalc-dims=&amp;quot;1&amp;quot; /&amp;gt;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Forget energy drinks, stem cell burgers could be the next big endorsement.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;4)  Eating ourselves.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Why stop at eating other people?  We could custom-sell Cultured Beef to be made from an individual customer’s cells.  Depending on the source of broth nutrients, this could be an entirely new movement in veganism.  No more annoying jokes about murdering vegetables.  I’m 100% self-supporting, subsisting on only genuine Me-burgers grown in bacterial broth.&lt;/p&gt;

&lt;p&gt;Note that I don’t condone cannibalism, or Miley Cyrus, and I think that Cultured Beef is a great idea.  What about you?  If you could culture an organism’s cells and eat them, what would you pick and why?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Twitter bootcamp</title>
   <link href="http://bradfordcondon.com/2013/09/02/twitter-bootcamp/"/>
   <updated>2013-09-02T13:25:54-04:00</updated>
   <id>http://bradfordcondon.com/2013/09/02/twitter-bootcamp</id>
   <content type="html">&lt;p&gt;&lt;img class=&quot;alignnone&quot; alt=&quot;&quot; src=&quot;https://i2.wp.com/abs.twimg.com/a/1377795275/images/resources/twitter-bird-blue-on-white.png?resize=300%2C300&amp;#038;ssl=1&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twitbootcamp.tumblr.com/&quot;&gt;Twitter bootcamp&lt;/a&gt; starts today!  It’s &lt;a href=&quot;http://twitbootcamp.tumblr.com/about&quot;&gt;put together&lt;/a&gt; by my fellow Oberlin alumn Ma’ayan Plaut, who is a social media role model.  If you’ve never quite “gotten” Twitter, or if you feel like you aren’t getting enough out of it, check it out!  I’ll be participating!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>RSS readers</title>
   <link href="http://bradfordcondon.com/2013/09/02/rss-readers/"/>
   <updated>2013-09-02T13:18:56-04:00</updated>
   <id>http://bradfordcondon.com/2013/09/02/rss-readers</id>
   <content type="html">&lt;p&gt;(This post is a continuation of my science RSS series, found &lt;a href=&quot;/2013/05/10/let-the-literature-come-to-you-custom-pubmed-rss-feeds/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Once you’ve identified RSS feeds you’d like to follow, you need to choose an RSS reader.  This is where the fruits of selective RSS subscription are much sweeter than signing up for email notifications.  Notifications go to my inbox, where they are drowned out by the day-to-day requirements of the academic life.&lt;/p&gt;

&lt;p&gt;RSS feeds, on the other hand, wait patiently in the reader, separate, sorted, and ready to be skimmed.  Flipping through my reader every few days, and posting  articles of interest to &lt;a href=&quot;/2013/04/28/16/&quot;&gt;citeulike&lt;/a&gt;, or &lt;a href=&quot;http://www.scoop.it/t/fungal-genetics&quot;&gt;Scoop.it&lt;/a&gt; (which I haven’t written about yet, but will), I stay on top of the big news in the science world, and the details relevant to my research.  Your reader may sync up to the cloud, your social media, or other reading, storage, or notetaking apps.  You can use your RSS reader to skim headlines and send the interesting bits to other programs, or you can do all your reading in the reader, depending on your personal preference.&lt;/p&gt;

&lt;p&gt;But what reader to use?&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.google.com/reader/&quot;&gt;Google Reader&lt;/a&gt; used to be the reader of choice.  Unfortunately, Google is discontinuing reader, and several readers have risen to fill its shoes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/06/screen-shot-2013-06-04-at-7-01-28-pm.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I currently use &lt;a href=&quot;http://www.feedly.com/&quot;&gt;Feedly&lt;/a&gt;.  It syncs with my Google account, and lives in my browser, in harmony with my work and home computer.  I have my feeds roughly divided into peer reviewed publication, science news, and play/misc., which is good enough for me.  Feedly sports an &lt;a href=&quot;https://itunes.apple.com/us/app/feedly-your-google-reader/id396069556?mt=8&quot;&gt;ipad app&lt;/a&gt;, which is slick and intuitive.  Oh, and it’s free, which is a huge plus.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/06/screen-shot-2013-06-04-at-7-01-46-pm.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The feedly ipad interface, standard issue. I removed all the default categories.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;http://reviews.cnet.com/1990-10088_7-5143606-1.html?tag=txt&quot;&gt;Cnet has reviews&lt;/a&gt; of other RSS readers. They come in all shapes in sizes, from feature heavy standalone apps to minimalist browser integrated readers.  Shop around and go with what feels good- the most important thing is that you can integrate it into your work flow.  I used to use &lt;a href=&quot;http://www.rssowl.org/&quot;&gt;RSSowl&lt;/a&gt; for my feeds, which is also free.  But, as a standalone app, I used it less and less, until I stopped checking my feeds all together.  The most important rule for any app is that you use it!&lt;/p&gt;

&lt;p&gt;For me, I will use a program if it fits well into my existing workflow.  I skim headlines in my reader.  Items of interest are sent to either pocket, evernote, citeulike, or scoop.it, depending on if they are for my personal consumption, work-related, or science outreach and communication related.  I will expand on these specific avenues in a later post.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>A digital notebook</title>
   <link href="http://bradfordcondon.com/2013/07/18/a-digital-notebook/"/>
   <updated>2013-07-18T18:13:37-04:00</updated>
   <id>http://bradfordcondon.com/2013/07/18/a-digital-notebook</id>
   <content type="html">&lt;p&gt;When I first started graduate school, I kept an old-fashioned notebook.  A 4×4 quad ruled Roaring Spring Lab Notebook.&lt;/p&gt;

&lt;p&gt;It had gridlines, it had carbon paper (The carbon sheets remain, unperturbed, at the back of the notebook), it had Thomas Edison on the cover scienceing it up.  It was everything I thought science would and should be.&lt;/p&gt;

&lt;p&gt;As a tool for keeping track of what I did for later reference, however,it was a complete disaster.&lt;/p&gt;

&lt;p&gt;I’m not an organized person by nature.  I work in spurts, I don’t keep careful track of what I’m doing.  I often have to go back and fill in the details.  This means writeups I would intend to return to later were buried under experiments I would go ahead with in the meantime.&lt;/p&gt;

&lt;p&gt;I also am not a linear person (or perhaps science is not a linear endeavor).  One day I would work on project X, the next, project Y.  Science works that way, sometimes, project X needs a week to grow, sometimes project Y sits in the fridge while the primers are synthesized and delivered in the mail.&lt;/p&gt;

&lt;p&gt;Both of these traits make for a messy, and extremely confusing lab notebook.  Sure, I could have kept one notebook for each project I was working on.  But what about when I’d perform an experiment that fit into two projects?  Sometimes I will perform an assay using two sets of mutants, for two separate reasons.  Would I double-copy the experiment?  Perhaps this is when I should have actually used that carbon paper.&lt;/p&gt;

&lt;p&gt;No, instead, I switched to a standard 3-ring binder after my first year in graduate school.  I could re-define the boundaries of a given project easily, add and remove page dividers for each project, and easily add in printed pages.&lt;/p&gt;

&lt;p&gt;Looking back on my research project (and looking forward to where I may be next), I think if I could do it again, I would keep a digital notebook first and foremost.  I did keep a digital notebook, using the &lt;a href=&quot;https://www.macupdate.com/app/mac/10868/mori&quot;&gt;app Mori.&lt;/a&gt;  Unfortunately, development on Mori ceased long ago, and I used it exclusively for digital notes.&lt;/p&gt;

&lt;p&gt;No, I think the ideal thing to do would be to keep a purely digital notebook, with printed backups of results and summaries in a three-ring notebook.&lt;/p&gt;

&lt;p&gt;A digital notebook is searchable.  It doesn’t have to be linear.  I can look for all projects with a given gene or technique, and pull them all out.  A good notebook is tagable (and hopefully well tagged.)  I don’t have to decide if an experiment goes in notebook A or notebook B.  It just gets tagged AB, and goes into the digital notebook.&lt;/p&gt;

&lt;p&gt;I also don’t have to wait until my results are processed to add them to the notebook.  This is a big one.  Raw unprocessed data files (such as .nexml tree files that are a finished product, but need to be visualized, or microscopy experiments that take a fair amount of post processing effort) go right in the notebook.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/07/screen-shot-2013-07-18-at-6-05-46-pm.png&quot; alt=&quot;note&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;A sloppily generated note on media generation gets filed away digitally.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Scanning in the above sheet, for example, lets me find it no matter what project I’m working on in the future, rather than digging through years of failed and succesful experiments in different notebooks when writing my materials and methods later.  Note that I added a minimal number of tags, but wrote out the key media ingredients (different forms of iron) for search purposes.&lt;/p&gt;

&lt;p&gt;I’ll talk more about the best way to organize a digital notebook and tips for making the most of it (for example, sharing and compiling status updates for the boss).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Emotion matters: Zimmerman vs Alexander</title>
   <link href="http://bradfordcondon.com/2013/07/14/emotion-matters-zimmerman-vs-alexander/"/>
   <updated>2013-07-14T01:22:50-04:00</updated>
   <id>http://bradfordcondon.com/2013/07/14/emotion-matters-zimmerman-vs-alexander</id>
   <content type="html">&lt;p&gt;The Florida Stand Your Ground controversy has everyone talking (and nevermind that neither case officially invoked said law).  And a mother (Marissa Alexander) getting 20 years &lt;a href=&quot;http://www.huffingtonpost.com/2012/05/11/marissa-alexander-sentenced_n_1510113.html&quot;&gt;(a minimum sentence for firing a gun during a crime)&lt;/a&gt; for firing warning shots at an abusive husband looks pretty shitty next time a man (George Zimmerman) shooting a 17-year old boy and &lt;a href=&quot;http://www.nytimes.com/2013/07/14/us/george-zimmerman-verdict-trayvon-martin.html?pagewanted=all&quot;&gt;being acquitted of all charges&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What I find amazing here is the central role emotions play.  Not just in the public’s reaction to these verdicts in sentences: but in how those verdicts were reached.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Both&lt;/em&gt; verdicts, for Zimmerman and Alexander, came down to one thing: was the shooter angry, or fearful?  The jury found that Zimmerman was afraid when he shot and killed Treyvon Martin.  Marissa Alexander, on the other hand, was found to be angry.  Angry at her husband for beating her, but nonetheless, angry.  Because she was angry, she could not utilize Stand Your Ground, and was found guilty of assault (I encourage you to actually read the reports of both trials if you are interested in either case, as in both situations a jury reached that verdict somehow.  In the case of Alexander, the prosecution made a big deal over the “warning shots” fired, and the possibility that these shots could have hit one of her children.)&lt;/p&gt;

&lt;p&gt;&lt;img class=&quot; &quot; alt=&quot;&quot; src=&quot;https://i2.wp.com/upload.wikimedia.org/wikipedia/commons/6/6b/Portret_van_een_man005.jpg?resize=900%2C538&quot; data-recalc-dims=&quot;1&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;The state of a defendant’s mind during a crime can matter more for the verdict than the direct consequences of the crime itself.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;How can such a distinction between fear and anger make all the difference?  Is the line between fear and anger so clearcut that we can make this call, with such grave consequences?  Was Alexander not angry because of a long history of fear and abuse?  Was Zimmerman’s anger what prompted him to confront Martin in the first place?&lt;/p&gt;

&lt;p&gt;I encourage all of us to rally for justice.  Justice, we are told, is a matter for the courts to decide, not a realm of emotion.  But what happens when justice hinges on the weighing of emotion?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Papers as a reference manager</title>
   <link href="http://bradfordcondon.com/2013/07/07/papers-as-a-reference-manager/"/>
   <updated>2013-07-07T14:15:04-04:00</updated>
   <id>http://bradfordcondon.com/2013/07/07/papers-as-a-reference-manager</id>
   <content type="html">&lt;p&gt;I love Mekentosj’s &lt;a href=&quot;http://www.papersapp.com/&quot;&gt;Papers&lt;/a&gt;, and &lt;a href=&quot;/2013/05/05/citation-management-papers/&quot;&gt;encourage you to check it out if you are on a mac and keep digital literature.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;One of the things that drove me nuts using my advisor’s Endnote library was that I couldn’t change it.  Each publication, each grant, it would be my task to go through and manually “spruce up” the references.  Each time I would plea to change the actual source library, and each time I’d be told we had no time as it was the 11th hour.  Everything was inevitably inconsistent.  Author names, journal abbreviations, italicizing species name.  What a mess.&lt;/p&gt;

&lt;p&gt;Now that I am in charge and doing my own references, I can keep a clean house.  This means fixing references the “right” way, in Papers.&lt;/p&gt;

&lt;p&gt;A good way to fix up a lot of metadata easily is to manage your periodical collection. To do this, click on your periodicals tab under sources, and sort them by name.  Merge journals that should be the same- Set a standardized way of abbreviating (I do without periods), stick with it.  A thorough periodicals cleaning will make formatting your final bibliography much easier.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/07/screen-shot-2013-07-07-at-1-24-37-pm.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Are there repeats?  Merge them!  Is the abbreviated title appearing in the full title field?  Fix it!  Do it here, and you are fixing each and every affiliated journal!  Format BMC Microbiology right here, and every time an article from BMC Micro comes in, it’ll be properly formatted (provided it’s correctly linked to this journal entry!)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/07/screen-shot-2013-07-07-at-1-37-21-pm.png&quot; alt=&quot;BMC&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;BMC Biotechnology has the abbreviation in both the full and abbreviated field. An easy fix!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Sometimes you’ll see weird journal titles.  Are they really journals, or is it a book or chapter set to the wrong source type?  Make sure each article is set to the correct type.  A PhD chapter that thinks it is a journal article is going to be formatted incorrectly.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/07/screen-shot-2013-07-07-at-1-28-50-pm.png&quot; alt=&quot;editing&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Enable editing to change the source type for an article.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As I continue battling my own citations, I’ll post again with more tips for tidying up your references.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Mycozombies of The Last of Us</title>
   <link href="http://bradfordcondon.com/fun/2013/06/22/the-last-of-us/"/>
   <updated>2013-06-22T16:33:43-04:00</updated>
   <id>http://bradfordcondon.com/fun/2013/06/22/the-last-of-us</id>
   <content type="html">&lt;p&gt;Warning:  probably some incredibly mild spoilers below regarding the game.&lt;/p&gt;

&lt;p&gt;The Last of Us is a &lt;a href=&quot;http://en.wikipedia.org/wiki/The_Last_of_Us&quot;&gt;new survival action horror&lt;/a&gt; videogame for the Playstation 3.   The game is inspired by a &lt;a href=&quot;http://thelastofus.wikia.com/wiki/Ophiocordyceps_unilateralis&quot;&gt;real life fungus, &lt;em&gt;Ophiocordyceps unilateralis&lt;/em&gt;&lt;/a&gt;.  Any time fungi get love in popular culture, I’m pretty happy.  I’ve long thought that fungi are a hugely underused resource for science fiction, and I think that cordyceps species are starting to gain some traction in the popular press.&lt;/p&gt;

&lt;p&gt;I’ve only played a couple of hours of the game (as I’m supposed to be writing my dissertation, and don’t own a playstation).  That said, I thought I’d comment on the mycology as I come across it.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i1.wp.com/fc02.deviantart.net/fs70/f/2013/050/4/b/the_last_of_us___clicker_by_thomaswievegg-d5vitz1.jpg&quot; alt=&quot;clicker zombie&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Beautiful fanart of a Clicker by thomaswievegg. http://thomaswievegg.deviantart.com/art/the-Last-of-Us-Clicker-355277629&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;1) Clickers.&lt;/p&gt;

&lt;p&gt;These zombies have mutated to the point that their heads have sprouted fungal fruiting structures.  The problem is that their heads really strike me as bracket fungi (conks), and their shoulders are fruiting gilled mushrooms.  Ophiocordyceps are ascomycetes.  Gilled mushrooms, and conks, are produced by basidiomycetes: a phylum level distinction.  For context, &lt;a href=&quot;http://en.wikipedia.org/wiki/Phylum&quot;&gt;two animal phyla&lt;/a&gt; include chordata and annelida: the distance between segmented worms and animals with a spinal chord (ie, us).  That said, &lt;em&gt;Ophiocordyceps unilateralis&lt;/em&gt; fruits out of the head of its victim- much like a Clicker.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i2.wp.com/upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Stumpfungus.jpg/220px-Stumpfungus.jpg&quot; alt=&quot;turkey tail&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;The Turkey Tail bracket fungus. Photo credit: wikipedia&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;2)  The introduction video&lt;/p&gt;

&lt;p&gt;As the credits roll, we are treated to some weird, pulsing “fungal” growth, followed by fruiting body formation and spore dispersal.&lt;/p&gt;

&lt;p&gt;It’s beautiful, it’s creepy, it’s everything we love about fungi.  But what are we really looking at?  To me, the first bit looks distinctly like a slime mold.  This is a claim I’ve made before, in reference to &lt;a href=&quot;http://blog.mycology.cornell.edu/2007/10/31/beware-the-slime-mold/&quot;&gt;The Blob&lt;/a&gt;.  &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/06/screen-shot-2013-06-22-at-4-22-09-pm.png&quot; alt=&quot;slime mold&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Hyphal-like growth but the pulsing is really more like a slime mold.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Next, the fungus forms fruiting bodies.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/06/screen-shot-2013-06-22-at-4-22-43-pm.png&quot; alt=&quot;Fruiting bodies form and disperse spores&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Fruiting bodies form and disperse spores.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These really could pass for a cordyceps fruiting structure.  Generally, the stalks typical of cordyceps form out of the host species, which may be the case here.  In the game, areas thick with spores are encountered around freshly killed infected humans- a pleasing consistency.&lt;/p&gt;

&lt;p&gt;Watch the intro video &lt;a href=&quot;http://www.youtube.com/watch?feature=player_detailpage&amp;amp;v=Bbf7UB9yZT4#t=462s&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Thank you Naughty Dog, for a great zombie game, and some fun biology!  Maybe if I get the chance to play through more of it, I’ll be able to write more about the fungal biology underlying the zombies (mycozombies?).&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Snack Writing</title>
   <link href="http://bradfordcondon.com/writing/2013/06/16/snack-writing/"/>
   <updated>2013-06-16T10:19:55-04:00</updated>
   <id>http://bradfordcondon.com/writing/2013/06/16/snack-writing</id>
   <content type="html">&lt;p&gt;I was reading &lt;a href=&quot;http://www.nature.com/naturejobs/science/articles/10.1038/nj7354-129a&quot;&gt;this Nature article&lt;/a&gt; by Kim Gardiner and Hugh Kearns on snack writing.  Their argument is that scientists who write in a small, fixed window, 45 minutes a day, every day, write more than “block writers” who blackout entire days for writing.&lt;/p&gt;

&lt;p&gt;I’ve been a block writer my entire graduate career, that’s for sure.  But I can see the merit of snack writing, especially when it comes to methodology.  The worst feeling of writing a paper is digging through stacks of ancient data from experiments you don’t remember doing, trying to remember which of the six primer pairs you designed actually worked (let alone what annealing temperature they worked at.)  Writing up results as they are generated is a Godsend, &lt;em&gt;especially when things don’t work out.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I have a tendency to bury things that don’t work: and why shouldn’t I?  Inconsistent, unclear, unexpected: we scientists are storytellers, and “bad” data that doesn’t fit the tale makes us feel uncomfortable.  We don’t know what it means- is our methodology flawed, or is there a fundamental misunderstanding in our thinking?  So instead, we are encouraged to focus on experiments that do work, and build our story from there.&lt;/p&gt;

&lt;p&gt;But you never know when you will double back, and find yourself facing the ghosts of unpleasant experiments.  Even if you keep a meticulous notebook, data without the narrative can be confusing.  So spare yourself the trouble, and set aside a time when you generally aren’t very productive, and regularly wrap up what you’ve done and why you did it.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Scientifink!</title>
   <link href="http://bradfordcondon.com/2013/06/13/scientifink/"/>
   <updated>2013-06-13T11:32:47-04:00</updated>
   <id>http://bradfordcondon.com/2013/06/13/scientifink</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://cornellcals.tumblr.com/post/52869381183/scientifink-bradford-condon&quot;&gt;I am featured in this week’s CALS “scientifink” writeup!&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I happen to love my ascospore tattoo, and am happy to share it with the world.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/06/tumblr_inline_moc217xwob1qz4rgp.jpg&quot; alt=&quot;ascospore tattoo&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;ascospores on my arm&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I remember when I got it done, after passing my A exam.  It was my first tattoo, and I felt ready to make a commitment.  After all, I was going to spend 5 (hah!) years working with this fungus: how could I possibly get sick of it?  Plus, once I passed my B exam and earned my PhD, I would build onto it with the asexual spores.  Eventually I’ll have the arm covered with organisms I’ve worked with as my career goes on.&lt;/p&gt;

&lt;p&gt;I’ve actually scheduled my B exam for NEXT MONTH!  This means that I get to add to it soon.  I’m planning on getting several more asci, as well as an emptied ascus with ascospores loosely stuck together, like in the photo also included in the article.&lt;/p&gt;

&lt;p&gt;(An ascus is a sac.  Ascomycetes are fungi which produce their (asco)spores in sacs.  This is in contrast to basidiomycetes, which produces their spores on basidium.  This is what the mushrooms you would find in the grocery store do).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/06/tumblr_inline_moc25f6vrk1qz4rgp.jpg&quot; alt=&quot;more ascospores&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;ascospores under the scope&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It’s hard for me to overstate my kinship with &lt;em&gt;Cochliobolus heterostrophus&lt;/em&gt;.  I’ve spent 6 years working with it, and love it to death.  The hours I’ve spent transferring cultures of it, spraying it on corn, collecting spores, and dissecting ascospores under the microscope have really transformed.  Now that I’m at the end of my PhD, I feel like a “real” scientist, capable of breaking down problems, with my eyes and ears open for unexpected discoveries.&lt;/p&gt;

&lt;p&gt;Tattoo photos courtesy Kent Loeffler&lt;/p&gt;

&lt;p&gt;http://cornellcals.tumblr.com/post/52869381183/scientifink-bradford-condon&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Having trouble learning?  Get some rest</title>
   <link href="http://bradfordcondon.com/2013/06/08/having-trouble-learning-get-some-rest/"/>
   <updated>2013-06-08T14:33:11-04:00</updated>
   <id>http://bradfordcondon.com/2013/06/08/having-trouble-learning-get-some-rest</id>
   <content type="html">&lt;p&gt;Do you schedule breaks and rests during your working, writing, and learning?  Do you make time for sleep in your life?   A new article by Ingrid L. C. Nieuwenhuis et al., &lt;a href=&quot;http://www.plosone.org/article/info%3Adoi%2F10.1371%2Fjournal.pone.0065046&quot;&gt;published June 5th in the journal PLOS ONE,&lt;/a&gt; provides another piece of evidence that you should.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/wp-content/uploads/2013/06/sleeping-girl.jpg&quot;&gt;sleep&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Sleep is an important step for proper learning.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The details of the study involved exposing participants to complex strings of letters that followed unknown rules, and then teaching the participants the rules.  They would then leave the lab and come back 15 minutes, 12 hours (sleeping), or 12 hours (awake) later to retest.  The authors found that the group who slept  performed better at classifying the letter strings upon their return- sleep played some role in understanding the grammatical rules they were taught.&lt;/p&gt;

&lt;p&gt;This is one piece of information in a body of literature that suggests we make information network connections in our sleep.  Learning can be thought of as a web- every fact is connected to another, and another.  Understanding how things are connected is a powerful way to learn.  For example, in Biology, we often classify organisms according to Kingdom of life.  We then learn what attributes plants and animals have in common, and what traits separate them.   This study shows that sleep may be an important part of processing, and connecting, such information.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Here at Cornell, the all-nighter is an all too common occurrence.  This may be fine for simply retaining facts, but if your exam challenges you to make connections between your information, or demonstrate higher learning, you might be better off getting a good night’s rest.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Article source:
Nieuwenhuis ILC, Folia V, Forkstam C, Jensen O, Petersson KM (2013) Sleep Promotes the Extraction of Grammatical Rules. PLoS ONE 8(6): e65046. doi:10.1371/journal.pone.0065046&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Photo source:
http://en.wikipedia.org/wiki/File:Sleeping-girl.jpg&lt;/p&gt;
&lt;/blockquote&gt;
</content>
 </entry>
 
 <entry>
   <title>Four ways to get writing</title>
   <link href="http://bradfordcondon.com/2013/06/04/four-ways-to-get-writing/"/>
   <updated>2013-06-04T17:17:47-04:00</updated>
   <id>http://bradfordcondon.com/2013/06/04/four-ways-to-get-writing</id>
   <content type="html">&lt;p&gt;I am trying to write my PhD dissertation.&lt;/p&gt;

&lt;p&gt;It’s going OK, thanks for asking.  But it’s not going OK all the time.&lt;/p&gt;

&lt;p&gt;Some days, I can spend an hour in front of my computer and have nothing to show for it but a lot of purple links on Reddit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/06/screen-shot-2013-06-04-at-4-57-29-pm.png&quot; alt=&quot;surfing&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Surfing the web instead of working? Sounds like time for a run to me.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;span style=&quot;line-height:1.6;&quot;&gt;Other days I can literally write, almost nonstop and without distraction, for epic 10 hour sessions.  &lt;/span&gt;&lt;/p&gt;

&lt;p&gt;So what’s the trick?  Here is my experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#1.  Deadlines.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you are writing your dissertation, then it’s a safe bet you can meet a deadline.  Be it a term paper, grant application, or conference abstract, my life is littered with deadlines.  And, the week before a deadline, two things happen.  I put down other interesting projects, and I write productively because it has to get done.&lt;/p&gt;

&lt;p&gt;But the problem is that a dissertation is such a huge task that it inhabits its own epic time frame.  It will be finished when it is finished, it won’t be shoved out in a week or a month.  But setting reasonable, artificial deadlines for small pieces of my thesis has allowed me to step out of the lab, enjoy some of that deadline-induced focus, and put digital ink to screen.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#2.  Write when you can write.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Why fight it?  I can’t always write.  If it’s a nice day out and I can’t concentrate, I go out and play. If I can’t write because I’m thinking about my sister, I call her.  If I’m hungry, I eat.&lt;/p&gt;

&lt;p&gt;By the same token, sometimes I &lt;em&gt;can&lt;/em&gt; write.  On these days, I cancel commitments and appointments.  I live that day as if writing were the only task on my desk.&lt;/p&gt;

&lt;p&gt;Rather than seeking to control my productivity, I work with it.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#3.  Write the shitty, plagiarized first draft&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I am not  a perfectionist, really.  I’m not even a details person.  But when it comes to writing, it’s really tough for me to get going.  Oddly, the toughest section is writing the introduction (more on that later, perhaps) where what I need to say has already been written, a thousand times.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2013/06/screen-shot-2013-06-04-at-5-07-02-pm.png&quot; alt=&quot;&amp;lt;img class=&amp;quot;size-full wp-image&amp;quot; id=&amp;quot;i-78&amp;quot; alt=&amp;quot;Image&amp;quot; src=&amp;quot;https://i0.wp.com/www.bradfordcondon.com/wp-content/uploads/2013/06/screen-shot-2013-06-04-at-5-07-02-pm.png?resize=487%2C248&amp;quot; data-recalc-dims=&amp;quot;1&amp;quot; /&amp;gt;&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;It’s perfect, because I didn’t write it! And for right now, that’s OK!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;By blatantly plagiarizing whole sections from other people’s reviews and my own writing elsewhere (and highlighting the sections so I don’t forget, of course), I can move on, revise, and build off of what’s on the page.  I no longer try to rewrite what has been said again and again (a more unpleasant task, to me, than blazing a new trail with new data)- I go with what’s been said, and after things are in place, I reshape it to my needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;#4.  Get active.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Seriously.  Go to the gym, go for a run, shoot some hoops.  Sometimes I just clean my house for an hour (in fact, I think my apartment is only clean when I have a deadline looming.  This may not be for everyone, as it’s a trait I share with my mother, but not my father.).  I leave the music at home, and busy my body while clearing my mind.  When I return to my desk, I’m often reset and ready to work.&lt;/p&gt;

&lt;p&gt;If you are reading this, then I wish you the best of luck on your project.  Get back to work!  And if you can’t, and you don’t have a real world deadline breathing down your neck, go take care of yourself!  Because you deserve it, and you’ll function better if you aren’t burnt out.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Tools for science: Citeulike</title>
   <link href="http://bradfordcondon.com/tools/2013/04/28/16-Citeulike/"/>
   <updated>2013-04-27T23:08:04-04:00</updated>
   <id>http://bradfordcondon.com/tools/2013/04/28/16-Citeulike</id>
   <content type="html">&lt;p&gt;I’m pretty sure I have too many gadgets for managing my academic references.  I’d surely be better off if I spent more time reading the literature, and less time setting up new accounts that I’ll neglect (this blog being a perfect case in point).&lt;/p&gt;

&lt;p&gt;Every year for my journal club, I try to get people to use &lt;a href=&quot;http://www.citeulike.org/home&quot; target=&quot;_blank&quot;&gt;Citeulike&lt;/a&gt;.  It’s a great concept- install a browser bookmark, and with one click, import all of the metadata for a paper to your personal library.  Tag it (which I always neglect), and there you go.  It’s pretty tough to stump the import tool (this wasn’t always so), so without much effort, it pulls the title, author, abstract, and journal info.
&lt;img src=&quot;/wp-content/uploads/2013/04/screen-shot-2013-04-27-at-11-04-51-pm.png&quot; alt=&quot;citeulike&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A citeulike entry&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Which is all nice, but it doesn’t stop there.  Citeulike has all sorts of functionality for sharing papers with a dedicate group, or just e-stalking a scientist you have a crush on (or who stays on top of the literature).  In theory, this means you’ll be plugged into your academic community, noticing new publications and seeing who is reading what.&lt;/p&gt;

&lt;p&gt;In practice, it’s been a bit more lonely.  As it is, I use it as a citation repository for articles I haven’t read, or read but don’t want to keep in my papers library (an upcoming post on that!).  My Citeulike library is &lt;a href=&quot;http://www.citeulike.org/user/bcondon&quot;&gt;here&lt;/a&gt;, if you have any interest in fungal genetics, follow me!&lt;/p&gt;
</content>
 </entry>
 

</feed>
